#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2165821824918486469) {
   out_2165821824918486469[0] = 0;
   out_2165821824918486469[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2165821824918486469[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2165821824918486469[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2165821824918486469[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2165821824918486469[5] = -sin(in_vec[1]);
   out_2165821824918486469[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2165821824918486469[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2165821824918486469[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2165821824918486469[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2165821824918486469[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2165821824918486469[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2165821824918486469[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2165821824918486469[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2165821824918486469[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2165821824918486469[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2165821824918486469[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2165821824918486469[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3216996441859096695) {
   out_3216996441859096695[0] = delta_x[0] + nom_x[0];
   out_3216996441859096695[1] = delta_x[1] + nom_x[1];
   out_3216996441859096695[2] = delta_x[2] + nom_x[2];
   out_3216996441859096695[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3216996441859096695[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3216996441859096695[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3216996441859096695[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3216996441859096695[7] = delta_x[6] + nom_x[7];
   out_3216996441859096695[8] = delta_x[7] + nom_x[8];
   out_3216996441859096695[9] = delta_x[8] + nom_x[9];
   out_3216996441859096695[10] = delta_x[9] + nom_x[10];
   out_3216996441859096695[11] = delta_x[10] + nom_x[11];
   out_3216996441859096695[12] = delta_x[11] + nom_x[12];
   out_3216996441859096695[13] = delta_x[12] + nom_x[13];
   out_3216996441859096695[14] = delta_x[13] + nom_x[14];
   out_3216996441859096695[15] = delta_x[14] + nom_x[15];
   out_3216996441859096695[16] = delta_x[15] + nom_x[16];
   out_3216996441859096695[17] = delta_x[16] + nom_x[17];
   out_3216996441859096695[18] = delta_x[17] + nom_x[18];
   out_3216996441859096695[19] = delta_x[18] + nom_x[19];
   out_3216996441859096695[20] = delta_x[19] + nom_x[20];
   out_3216996441859096695[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3507935633117718260) {
   out_3507935633117718260[0] = -nom_x[0] + true_x[0];
   out_3507935633117718260[1] = -nom_x[1] + true_x[1];
   out_3507935633117718260[2] = -nom_x[2] + true_x[2];
   out_3507935633117718260[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3507935633117718260[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3507935633117718260[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3507935633117718260[6] = -nom_x[7] + true_x[7];
   out_3507935633117718260[7] = -nom_x[8] + true_x[8];
   out_3507935633117718260[8] = -nom_x[9] + true_x[9];
   out_3507935633117718260[9] = -nom_x[10] + true_x[10];
   out_3507935633117718260[10] = -nom_x[11] + true_x[11];
   out_3507935633117718260[11] = -nom_x[12] + true_x[12];
   out_3507935633117718260[12] = -nom_x[13] + true_x[13];
   out_3507935633117718260[13] = -nom_x[14] + true_x[14];
   out_3507935633117718260[14] = -nom_x[15] + true_x[15];
   out_3507935633117718260[15] = -nom_x[16] + true_x[16];
   out_3507935633117718260[16] = -nom_x[17] + true_x[17];
   out_3507935633117718260[17] = -nom_x[18] + true_x[18];
   out_3507935633117718260[18] = -nom_x[19] + true_x[19];
   out_3507935633117718260[19] = -nom_x[20] + true_x[20];
   out_3507935633117718260[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3893200104662780740) {
   out_3893200104662780740[0] = 1.0;
   out_3893200104662780740[1] = 0;
   out_3893200104662780740[2] = 0;
   out_3893200104662780740[3] = 0;
   out_3893200104662780740[4] = 0;
   out_3893200104662780740[5] = 0;
   out_3893200104662780740[6] = 0;
   out_3893200104662780740[7] = 0;
   out_3893200104662780740[8] = 0;
   out_3893200104662780740[9] = 0;
   out_3893200104662780740[10] = 0;
   out_3893200104662780740[11] = 0;
   out_3893200104662780740[12] = 0;
   out_3893200104662780740[13] = 0;
   out_3893200104662780740[14] = 0;
   out_3893200104662780740[15] = 0;
   out_3893200104662780740[16] = 0;
   out_3893200104662780740[17] = 0;
   out_3893200104662780740[18] = 0;
   out_3893200104662780740[19] = 0;
   out_3893200104662780740[20] = 0;
   out_3893200104662780740[21] = 0;
   out_3893200104662780740[22] = 1.0;
   out_3893200104662780740[23] = 0;
   out_3893200104662780740[24] = 0;
   out_3893200104662780740[25] = 0;
   out_3893200104662780740[26] = 0;
   out_3893200104662780740[27] = 0;
   out_3893200104662780740[28] = 0;
   out_3893200104662780740[29] = 0;
   out_3893200104662780740[30] = 0;
   out_3893200104662780740[31] = 0;
   out_3893200104662780740[32] = 0;
   out_3893200104662780740[33] = 0;
   out_3893200104662780740[34] = 0;
   out_3893200104662780740[35] = 0;
   out_3893200104662780740[36] = 0;
   out_3893200104662780740[37] = 0;
   out_3893200104662780740[38] = 0;
   out_3893200104662780740[39] = 0;
   out_3893200104662780740[40] = 0;
   out_3893200104662780740[41] = 0;
   out_3893200104662780740[42] = 0;
   out_3893200104662780740[43] = 0;
   out_3893200104662780740[44] = 1.0;
   out_3893200104662780740[45] = 0;
   out_3893200104662780740[46] = 0;
   out_3893200104662780740[47] = 0;
   out_3893200104662780740[48] = 0;
   out_3893200104662780740[49] = 0;
   out_3893200104662780740[50] = 0;
   out_3893200104662780740[51] = 0;
   out_3893200104662780740[52] = 0;
   out_3893200104662780740[53] = 0;
   out_3893200104662780740[54] = 0;
   out_3893200104662780740[55] = 0;
   out_3893200104662780740[56] = 0;
   out_3893200104662780740[57] = 0;
   out_3893200104662780740[58] = 0;
   out_3893200104662780740[59] = 0;
   out_3893200104662780740[60] = 0;
   out_3893200104662780740[61] = 0;
   out_3893200104662780740[62] = 0;
   out_3893200104662780740[63] = 0;
   out_3893200104662780740[64] = 0;
   out_3893200104662780740[65] = 0;
   out_3893200104662780740[66] = -0.5*state[4];
   out_3893200104662780740[67] = -0.5*state[5];
   out_3893200104662780740[68] = -0.5*state[6];
   out_3893200104662780740[69] = 0;
   out_3893200104662780740[70] = 0;
   out_3893200104662780740[71] = 0;
   out_3893200104662780740[72] = 0;
   out_3893200104662780740[73] = 0;
   out_3893200104662780740[74] = 0;
   out_3893200104662780740[75] = 0;
   out_3893200104662780740[76] = 0;
   out_3893200104662780740[77] = 0;
   out_3893200104662780740[78] = 0;
   out_3893200104662780740[79] = 0;
   out_3893200104662780740[80] = 0;
   out_3893200104662780740[81] = 0;
   out_3893200104662780740[82] = 0;
   out_3893200104662780740[83] = 0;
   out_3893200104662780740[84] = 0;
   out_3893200104662780740[85] = 0;
   out_3893200104662780740[86] = 0;
   out_3893200104662780740[87] = 0.5*state[3];
   out_3893200104662780740[88] = 0.5*state[6];
   out_3893200104662780740[89] = -0.5*state[5];
   out_3893200104662780740[90] = 0;
   out_3893200104662780740[91] = 0;
   out_3893200104662780740[92] = 0;
   out_3893200104662780740[93] = 0;
   out_3893200104662780740[94] = 0;
   out_3893200104662780740[95] = 0;
   out_3893200104662780740[96] = 0;
   out_3893200104662780740[97] = 0;
   out_3893200104662780740[98] = 0;
   out_3893200104662780740[99] = 0;
   out_3893200104662780740[100] = 0;
   out_3893200104662780740[101] = 0;
   out_3893200104662780740[102] = 0;
   out_3893200104662780740[103] = 0;
   out_3893200104662780740[104] = 0;
   out_3893200104662780740[105] = 0;
   out_3893200104662780740[106] = 0;
   out_3893200104662780740[107] = 0;
   out_3893200104662780740[108] = -0.5*state[6];
   out_3893200104662780740[109] = 0.5*state[3];
   out_3893200104662780740[110] = 0.5*state[4];
   out_3893200104662780740[111] = 0;
   out_3893200104662780740[112] = 0;
   out_3893200104662780740[113] = 0;
   out_3893200104662780740[114] = 0;
   out_3893200104662780740[115] = 0;
   out_3893200104662780740[116] = 0;
   out_3893200104662780740[117] = 0;
   out_3893200104662780740[118] = 0;
   out_3893200104662780740[119] = 0;
   out_3893200104662780740[120] = 0;
   out_3893200104662780740[121] = 0;
   out_3893200104662780740[122] = 0;
   out_3893200104662780740[123] = 0;
   out_3893200104662780740[124] = 0;
   out_3893200104662780740[125] = 0;
   out_3893200104662780740[126] = 0;
   out_3893200104662780740[127] = 0;
   out_3893200104662780740[128] = 0;
   out_3893200104662780740[129] = 0.5*state[5];
   out_3893200104662780740[130] = -0.5*state[4];
   out_3893200104662780740[131] = 0.5*state[3];
   out_3893200104662780740[132] = 0;
   out_3893200104662780740[133] = 0;
   out_3893200104662780740[134] = 0;
   out_3893200104662780740[135] = 0;
   out_3893200104662780740[136] = 0;
   out_3893200104662780740[137] = 0;
   out_3893200104662780740[138] = 0;
   out_3893200104662780740[139] = 0;
   out_3893200104662780740[140] = 0;
   out_3893200104662780740[141] = 0;
   out_3893200104662780740[142] = 0;
   out_3893200104662780740[143] = 0;
   out_3893200104662780740[144] = 0;
   out_3893200104662780740[145] = 0;
   out_3893200104662780740[146] = 0;
   out_3893200104662780740[147] = 0;
   out_3893200104662780740[148] = 0;
   out_3893200104662780740[149] = 0;
   out_3893200104662780740[150] = 0;
   out_3893200104662780740[151] = 0;
   out_3893200104662780740[152] = 0;
   out_3893200104662780740[153] = 1.0;
   out_3893200104662780740[154] = 0;
   out_3893200104662780740[155] = 0;
   out_3893200104662780740[156] = 0;
   out_3893200104662780740[157] = 0;
   out_3893200104662780740[158] = 0;
   out_3893200104662780740[159] = 0;
   out_3893200104662780740[160] = 0;
   out_3893200104662780740[161] = 0;
   out_3893200104662780740[162] = 0;
   out_3893200104662780740[163] = 0;
   out_3893200104662780740[164] = 0;
   out_3893200104662780740[165] = 0;
   out_3893200104662780740[166] = 0;
   out_3893200104662780740[167] = 0;
   out_3893200104662780740[168] = 0;
   out_3893200104662780740[169] = 0;
   out_3893200104662780740[170] = 0;
   out_3893200104662780740[171] = 0;
   out_3893200104662780740[172] = 0;
   out_3893200104662780740[173] = 0;
   out_3893200104662780740[174] = 0;
   out_3893200104662780740[175] = 1.0;
   out_3893200104662780740[176] = 0;
   out_3893200104662780740[177] = 0;
   out_3893200104662780740[178] = 0;
   out_3893200104662780740[179] = 0;
   out_3893200104662780740[180] = 0;
   out_3893200104662780740[181] = 0;
   out_3893200104662780740[182] = 0;
   out_3893200104662780740[183] = 0;
   out_3893200104662780740[184] = 0;
   out_3893200104662780740[185] = 0;
   out_3893200104662780740[186] = 0;
   out_3893200104662780740[187] = 0;
   out_3893200104662780740[188] = 0;
   out_3893200104662780740[189] = 0;
   out_3893200104662780740[190] = 0;
   out_3893200104662780740[191] = 0;
   out_3893200104662780740[192] = 0;
   out_3893200104662780740[193] = 0;
   out_3893200104662780740[194] = 0;
   out_3893200104662780740[195] = 0;
   out_3893200104662780740[196] = 0;
   out_3893200104662780740[197] = 1.0;
   out_3893200104662780740[198] = 0;
   out_3893200104662780740[199] = 0;
   out_3893200104662780740[200] = 0;
   out_3893200104662780740[201] = 0;
   out_3893200104662780740[202] = 0;
   out_3893200104662780740[203] = 0;
   out_3893200104662780740[204] = 0;
   out_3893200104662780740[205] = 0;
   out_3893200104662780740[206] = 0;
   out_3893200104662780740[207] = 0;
   out_3893200104662780740[208] = 0;
   out_3893200104662780740[209] = 0;
   out_3893200104662780740[210] = 0;
   out_3893200104662780740[211] = 0;
   out_3893200104662780740[212] = 0;
   out_3893200104662780740[213] = 0;
   out_3893200104662780740[214] = 0;
   out_3893200104662780740[215] = 0;
   out_3893200104662780740[216] = 0;
   out_3893200104662780740[217] = 0;
   out_3893200104662780740[218] = 0;
   out_3893200104662780740[219] = 1.0;
   out_3893200104662780740[220] = 0;
   out_3893200104662780740[221] = 0;
   out_3893200104662780740[222] = 0;
   out_3893200104662780740[223] = 0;
   out_3893200104662780740[224] = 0;
   out_3893200104662780740[225] = 0;
   out_3893200104662780740[226] = 0;
   out_3893200104662780740[227] = 0;
   out_3893200104662780740[228] = 0;
   out_3893200104662780740[229] = 0;
   out_3893200104662780740[230] = 0;
   out_3893200104662780740[231] = 0;
   out_3893200104662780740[232] = 0;
   out_3893200104662780740[233] = 0;
   out_3893200104662780740[234] = 0;
   out_3893200104662780740[235] = 0;
   out_3893200104662780740[236] = 0;
   out_3893200104662780740[237] = 0;
   out_3893200104662780740[238] = 0;
   out_3893200104662780740[239] = 0;
   out_3893200104662780740[240] = 0;
   out_3893200104662780740[241] = 1.0;
   out_3893200104662780740[242] = 0;
   out_3893200104662780740[243] = 0;
   out_3893200104662780740[244] = 0;
   out_3893200104662780740[245] = 0;
   out_3893200104662780740[246] = 0;
   out_3893200104662780740[247] = 0;
   out_3893200104662780740[248] = 0;
   out_3893200104662780740[249] = 0;
   out_3893200104662780740[250] = 0;
   out_3893200104662780740[251] = 0;
   out_3893200104662780740[252] = 0;
   out_3893200104662780740[253] = 0;
   out_3893200104662780740[254] = 0;
   out_3893200104662780740[255] = 0;
   out_3893200104662780740[256] = 0;
   out_3893200104662780740[257] = 0;
   out_3893200104662780740[258] = 0;
   out_3893200104662780740[259] = 0;
   out_3893200104662780740[260] = 0;
   out_3893200104662780740[261] = 0;
   out_3893200104662780740[262] = 0;
   out_3893200104662780740[263] = 1.0;
   out_3893200104662780740[264] = 0;
   out_3893200104662780740[265] = 0;
   out_3893200104662780740[266] = 0;
   out_3893200104662780740[267] = 0;
   out_3893200104662780740[268] = 0;
   out_3893200104662780740[269] = 0;
   out_3893200104662780740[270] = 0;
   out_3893200104662780740[271] = 0;
   out_3893200104662780740[272] = 0;
   out_3893200104662780740[273] = 0;
   out_3893200104662780740[274] = 0;
   out_3893200104662780740[275] = 0;
   out_3893200104662780740[276] = 0;
   out_3893200104662780740[277] = 0;
   out_3893200104662780740[278] = 0;
   out_3893200104662780740[279] = 0;
   out_3893200104662780740[280] = 0;
   out_3893200104662780740[281] = 0;
   out_3893200104662780740[282] = 0;
   out_3893200104662780740[283] = 0;
   out_3893200104662780740[284] = 0;
   out_3893200104662780740[285] = 1.0;
   out_3893200104662780740[286] = 0;
   out_3893200104662780740[287] = 0;
   out_3893200104662780740[288] = 0;
   out_3893200104662780740[289] = 0;
   out_3893200104662780740[290] = 0;
   out_3893200104662780740[291] = 0;
   out_3893200104662780740[292] = 0;
   out_3893200104662780740[293] = 0;
   out_3893200104662780740[294] = 0;
   out_3893200104662780740[295] = 0;
   out_3893200104662780740[296] = 0;
   out_3893200104662780740[297] = 0;
   out_3893200104662780740[298] = 0;
   out_3893200104662780740[299] = 0;
   out_3893200104662780740[300] = 0;
   out_3893200104662780740[301] = 0;
   out_3893200104662780740[302] = 0;
   out_3893200104662780740[303] = 0;
   out_3893200104662780740[304] = 0;
   out_3893200104662780740[305] = 0;
   out_3893200104662780740[306] = 0;
   out_3893200104662780740[307] = 1.0;
   out_3893200104662780740[308] = 0;
   out_3893200104662780740[309] = 0;
   out_3893200104662780740[310] = 0;
   out_3893200104662780740[311] = 0;
   out_3893200104662780740[312] = 0;
   out_3893200104662780740[313] = 0;
   out_3893200104662780740[314] = 0;
   out_3893200104662780740[315] = 0;
   out_3893200104662780740[316] = 0;
   out_3893200104662780740[317] = 0;
   out_3893200104662780740[318] = 0;
   out_3893200104662780740[319] = 0;
   out_3893200104662780740[320] = 0;
   out_3893200104662780740[321] = 0;
   out_3893200104662780740[322] = 0;
   out_3893200104662780740[323] = 0;
   out_3893200104662780740[324] = 0;
   out_3893200104662780740[325] = 0;
   out_3893200104662780740[326] = 0;
   out_3893200104662780740[327] = 0;
   out_3893200104662780740[328] = 0;
   out_3893200104662780740[329] = 1.0;
   out_3893200104662780740[330] = 0;
   out_3893200104662780740[331] = 0;
   out_3893200104662780740[332] = 0;
   out_3893200104662780740[333] = 0;
   out_3893200104662780740[334] = 0;
   out_3893200104662780740[335] = 0;
   out_3893200104662780740[336] = 0;
   out_3893200104662780740[337] = 0;
   out_3893200104662780740[338] = 0;
   out_3893200104662780740[339] = 0;
   out_3893200104662780740[340] = 0;
   out_3893200104662780740[341] = 0;
   out_3893200104662780740[342] = 0;
   out_3893200104662780740[343] = 0;
   out_3893200104662780740[344] = 0;
   out_3893200104662780740[345] = 0;
   out_3893200104662780740[346] = 0;
   out_3893200104662780740[347] = 0;
   out_3893200104662780740[348] = 0;
   out_3893200104662780740[349] = 0;
   out_3893200104662780740[350] = 0;
   out_3893200104662780740[351] = 1.0;
   out_3893200104662780740[352] = 0;
   out_3893200104662780740[353] = 0;
   out_3893200104662780740[354] = 0;
   out_3893200104662780740[355] = 0;
   out_3893200104662780740[356] = 0;
   out_3893200104662780740[357] = 0;
   out_3893200104662780740[358] = 0;
   out_3893200104662780740[359] = 0;
   out_3893200104662780740[360] = 0;
   out_3893200104662780740[361] = 0;
   out_3893200104662780740[362] = 0;
   out_3893200104662780740[363] = 0;
   out_3893200104662780740[364] = 0;
   out_3893200104662780740[365] = 0;
   out_3893200104662780740[366] = 0;
   out_3893200104662780740[367] = 0;
   out_3893200104662780740[368] = 0;
   out_3893200104662780740[369] = 0;
   out_3893200104662780740[370] = 0;
   out_3893200104662780740[371] = 0;
   out_3893200104662780740[372] = 0;
   out_3893200104662780740[373] = 1.0;
   out_3893200104662780740[374] = 0;
   out_3893200104662780740[375] = 0;
   out_3893200104662780740[376] = 0;
   out_3893200104662780740[377] = 0;
   out_3893200104662780740[378] = 0;
   out_3893200104662780740[379] = 0;
   out_3893200104662780740[380] = 0;
   out_3893200104662780740[381] = 0;
   out_3893200104662780740[382] = 0;
   out_3893200104662780740[383] = 0;
   out_3893200104662780740[384] = 0;
   out_3893200104662780740[385] = 0;
   out_3893200104662780740[386] = 0;
   out_3893200104662780740[387] = 0;
   out_3893200104662780740[388] = 0;
   out_3893200104662780740[389] = 0;
   out_3893200104662780740[390] = 0;
   out_3893200104662780740[391] = 0;
   out_3893200104662780740[392] = 0;
   out_3893200104662780740[393] = 0;
   out_3893200104662780740[394] = 0;
   out_3893200104662780740[395] = 1.0;
   out_3893200104662780740[396] = 0;
   out_3893200104662780740[397] = 0;
   out_3893200104662780740[398] = 0;
   out_3893200104662780740[399] = 0;
   out_3893200104662780740[400] = 0;
   out_3893200104662780740[401] = 0;
   out_3893200104662780740[402] = 0;
   out_3893200104662780740[403] = 0;
   out_3893200104662780740[404] = 0;
   out_3893200104662780740[405] = 0;
   out_3893200104662780740[406] = 0;
   out_3893200104662780740[407] = 0;
   out_3893200104662780740[408] = 0;
   out_3893200104662780740[409] = 0;
   out_3893200104662780740[410] = 0;
   out_3893200104662780740[411] = 0;
   out_3893200104662780740[412] = 0;
   out_3893200104662780740[413] = 0;
   out_3893200104662780740[414] = 0;
   out_3893200104662780740[415] = 0;
   out_3893200104662780740[416] = 0;
   out_3893200104662780740[417] = 1.0;
   out_3893200104662780740[418] = 0;
   out_3893200104662780740[419] = 0;
   out_3893200104662780740[420] = 0;
   out_3893200104662780740[421] = 0;
   out_3893200104662780740[422] = 0;
   out_3893200104662780740[423] = 0;
   out_3893200104662780740[424] = 0;
   out_3893200104662780740[425] = 0;
   out_3893200104662780740[426] = 0;
   out_3893200104662780740[427] = 0;
   out_3893200104662780740[428] = 0;
   out_3893200104662780740[429] = 0;
   out_3893200104662780740[430] = 0;
   out_3893200104662780740[431] = 0;
   out_3893200104662780740[432] = 0;
   out_3893200104662780740[433] = 0;
   out_3893200104662780740[434] = 0;
   out_3893200104662780740[435] = 0;
   out_3893200104662780740[436] = 0;
   out_3893200104662780740[437] = 0;
   out_3893200104662780740[438] = 0;
   out_3893200104662780740[439] = 1.0;
   out_3893200104662780740[440] = 0;
   out_3893200104662780740[441] = 0;
   out_3893200104662780740[442] = 0;
   out_3893200104662780740[443] = 0;
   out_3893200104662780740[444] = 0;
   out_3893200104662780740[445] = 0;
   out_3893200104662780740[446] = 0;
   out_3893200104662780740[447] = 0;
   out_3893200104662780740[448] = 0;
   out_3893200104662780740[449] = 0;
   out_3893200104662780740[450] = 0;
   out_3893200104662780740[451] = 0;
   out_3893200104662780740[452] = 0;
   out_3893200104662780740[453] = 0;
   out_3893200104662780740[454] = 0;
   out_3893200104662780740[455] = 0;
   out_3893200104662780740[456] = 0;
   out_3893200104662780740[457] = 0;
   out_3893200104662780740[458] = 0;
   out_3893200104662780740[459] = 0;
   out_3893200104662780740[460] = 0;
   out_3893200104662780740[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3255786806568313974) {
   out_3255786806568313974[0] = dt*state[7] + state[0];
   out_3255786806568313974[1] = dt*state[8] + state[1];
   out_3255786806568313974[2] = dt*state[9] + state[2];
   out_3255786806568313974[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3255786806568313974[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3255786806568313974[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3255786806568313974[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3255786806568313974[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3255786806568313974[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3255786806568313974[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3255786806568313974[10] = state[10];
   out_3255786806568313974[11] = state[11];
   out_3255786806568313974[12] = state[12];
   out_3255786806568313974[13] = state[13];
   out_3255786806568313974[14] = state[14];
   out_3255786806568313974[15] = state[15];
   out_3255786806568313974[16] = state[16];
   out_3255786806568313974[17] = state[17];
   out_3255786806568313974[18] = state[18];
   out_3255786806568313974[19] = state[19];
   out_3255786806568313974[20] = state[20];
   out_3255786806568313974[21] = state[21];
}
void F_fun(double *state, double dt, double *out_605085115782193670) {
   out_605085115782193670[0] = 1;
   out_605085115782193670[1] = 0;
   out_605085115782193670[2] = 0;
   out_605085115782193670[3] = 0;
   out_605085115782193670[4] = 0;
   out_605085115782193670[5] = 0;
   out_605085115782193670[6] = dt;
   out_605085115782193670[7] = 0;
   out_605085115782193670[8] = 0;
   out_605085115782193670[9] = 0;
   out_605085115782193670[10] = 0;
   out_605085115782193670[11] = 0;
   out_605085115782193670[12] = 0;
   out_605085115782193670[13] = 0;
   out_605085115782193670[14] = 0;
   out_605085115782193670[15] = 0;
   out_605085115782193670[16] = 0;
   out_605085115782193670[17] = 0;
   out_605085115782193670[18] = 0;
   out_605085115782193670[19] = 0;
   out_605085115782193670[20] = 0;
   out_605085115782193670[21] = 0;
   out_605085115782193670[22] = 1;
   out_605085115782193670[23] = 0;
   out_605085115782193670[24] = 0;
   out_605085115782193670[25] = 0;
   out_605085115782193670[26] = 0;
   out_605085115782193670[27] = 0;
   out_605085115782193670[28] = dt;
   out_605085115782193670[29] = 0;
   out_605085115782193670[30] = 0;
   out_605085115782193670[31] = 0;
   out_605085115782193670[32] = 0;
   out_605085115782193670[33] = 0;
   out_605085115782193670[34] = 0;
   out_605085115782193670[35] = 0;
   out_605085115782193670[36] = 0;
   out_605085115782193670[37] = 0;
   out_605085115782193670[38] = 0;
   out_605085115782193670[39] = 0;
   out_605085115782193670[40] = 0;
   out_605085115782193670[41] = 0;
   out_605085115782193670[42] = 0;
   out_605085115782193670[43] = 0;
   out_605085115782193670[44] = 1;
   out_605085115782193670[45] = 0;
   out_605085115782193670[46] = 0;
   out_605085115782193670[47] = 0;
   out_605085115782193670[48] = 0;
   out_605085115782193670[49] = 0;
   out_605085115782193670[50] = dt;
   out_605085115782193670[51] = 0;
   out_605085115782193670[52] = 0;
   out_605085115782193670[53] = 0;
   out_605085115782193670[54] = 0;
   out_605085115782193670[55] = 0;
   out_605085115782193670[56] = 0;
   out_605085115782193670[57] = 0;
   out_605085115782193670[58] = 0;
   out_605085115782193670[59] = 0;
   out_605085115782193670[60] = 0;
   out_605085115782193670[61] = 0;
   out_605085115782193670[62] = 0;
   out_605085115782193670[63] = 0;
   out_605085115782193670[64] = 0;
   out_605085115782193670[65] = 0;
   out_605085115782193670[66] = 1;
   out_605085115782193670[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_605085115782193670[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_605085115782193670[69] = 0;
   out_605085115782193670[70] = 0;
   out_605085115782193670[71] = 0;
   out_605085115782193670[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_605085115782193670[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_605085115782193670[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_605085115782193670[75] = 0;
   out_605085115782193670[76] = 0;
   out_605085115782193670[77] = 0;
   out_605085115782193670[78] = 0;
   out_605085115782193670[79] = 0;
   out_605085115782193670[80] = 0;
   out_605085115782193670[81] = 0;
   out_605085115782193670[82] = 0;
   out_605085115782193670[83] = 0;
   out_605085115782193670[84] = 0;
   out_605085115782193670[85] = 0;
   out_605085115782193670[86] = 0;
   out_605085115782193670[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_605085115782193670[88] = 1;
   out_605085115782193670[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_605085115782193670[90] = 0;
   out_605085115782193670[91] = 0;
   out_605085115782193670[92] = 0;
   out_605085115782193670[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_605085115782193670[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_605085115782193670[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_605085115782193670[96] = 0;
   out_605085115782193670[97] = 0;
   out_605085115782193670[98] = 0;
   out_605085115782193670[99] = 0;
   out_605085115782193670[100] = 0;
   out_605085115782193670[101] = 0;
   out_605085115782193670[102] = 0;
   out_605085115782193670[103] = 0;
   out_605085115782193670[104] = 0;
   out_605085115782193670[105] = 0;
   out_605085115782193670[106] = 0;
   out_605085115782193670[107] = 0;
   out_605085115782193670[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_605085115782193670[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_605085115782193670[110] = 1;
   out_605085115782193670[111] = 0;
   out_605085115782193670[112] = 0;
   out_605085115782193670[113] = 0;
   out_605085115782193670[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_605085115782193670[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_605085115782193670[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_605085115782193670[117] = 0;
   out_605085115782193670[118] = 0;
   out_605085115782193670[119] = 0;
   out_605085115782193670[120] = 0;
   out_605085115782193670[121] = 0;
   out_605085115782193670[122] = 0;
   out_605085115782193670[123] = 0;
   out_605085115782193670[124] = 0;
   out_605085115782193670[125] = 0;
   out_605085115782193670[126] = 0;
   out_605085115782193670[127] = 0;
   out_605085115782193670[128] = 0;
   out_605085115782193670[129] = 0;
   out_605085115782193670[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_605085115782193670[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_605085115782193670[132] = 1;
   out_605085115782193670[133] = 0;
   out_605085115782193670[134] = 0;
   out_605085115782193670[135] = 0;
   out_605085115782193670[136] = 0;
   out_605085115782193670[137] = 0;
   out_605085115782193670[138] = 0;
   out_605085115782193670[139] = 0;
   out_605085115782193670[140] = 0;
   out_605085115782193670[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_605085115782193670[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_605085115782193670[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_605085115782193670[144] = 0;
   out_605085115782193670[145] = 0;
   out_605085115782193670[146] = 0;
   out_605085115782193670[147] = 0;
   out_605085115782193670[148] = 0;
   out_605085115782193670[149] = 0;
   out_605085115782193670[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_605085115782193670[151] = 0;
   out_605085115782193670[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_605085115782193670[153] = 0;
   out_605085115782193670[154] = 1;
   out_605085115782193670[155] = 0;
   out_605085115782193670[156] = 0;
   out_605085115782193670[157] = 0;
   out_605085115782193670[158] = 0;
   out_605085115782193670[159] = 0;
   out_605085115782193670[160] = 0;
   out_605085115782193670[161] = 0;
   out_605085115782193670[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_605085115782193670[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_605085115782193670[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_605085115782193670[165] = 0;
   out_605085115782193670[166] = 0;
   out_605085115782193670[167] = 0;
   out_605085115782193670[168] = 0;
   out_605085115782193670[169] = 0;
   out_605085115782193670[170] = 0;
   out_605085115782193670[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_605085115782193670[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_605085115782193670[173] = 0;
   out_605085115782193670[174] = 0;
   out_605085115782193670[175] = 0;
   out_605085115782193670[176] = 1;
   out_605085115782193670[177] = 0;
   out_605085115782193670[178] = 0;
   out_605085115782193670[179] = 0;
   out_605085115782193670[180] = 0;
   out_605085115782193670[181] = 0;
   out_605085115782193670[182] = 0;
   out_605085115782193670[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_605085115782193670[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_605085115782193670[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_605085115782193670[186] = 0;
   out_605085115782193670[187] = 0;
   out_605085115782193670[188] = 0;
   out_605085115782193670[189] = 0;
   out_605085115782193670[190] = 0;
   out_605085115782193670[191] = 0;
   out_605085115782193670[192] = 0;
   out_605085115782193670[193] = 0;
   out_605085115782193670[194] = 0;
   out_605085115782193670[195] = 0;
   out_605085115782193670[196] = 0;
   out_605085115782193670[197] = 0;
   out_605085115782193670[198] = 1;
   out_605085115782193670[199] = 0;
   out_605085115782193670[200] = 0;
   out_605085115782193670[201] = 0;
   out_605085115782193670[202] = 0;
   out_605085115782193670[203] = 0;
   out_605085115782193670[204] = 0;
   out_605085115782193670[205] = 0;
   out_605085115782193670[206] = 0;
   out_605085115782193670[207] = 0;
   out_605085115782193670[208] = 0;
   out_605085115782193670[209] = 0;
   out_605085115782193670[210] = 0;
   out_605085115782193670[211] = 0;
   out_605085115782193670[212] = 0;
   out_605085115782193670[213] = 0;
   out_605085115782193670[214] = 0;
   out_605085115782193670[215] = 0;
   out_605085115782193670[216] = 0;
   out_605085115782193670[217] = 0;
   out_605085115782193670[218] = 0;
   out_605085115782193670[219] = 0;
   out_605085115782193670[220] = 1;
   out_605085115782193670[221] = 0;
   out_605085115782193670[222] = 0;
   out_605085115782193670[223] = 0;
   out_605085115782193670[224] = 0;
   out_605085115782193670[225] = 0;
   out_605085115782193670[226] = 0;
   out_605085115782193670[227] = 0;
   out_605085115782193670[228] = 0;
   out_605085115782193670[229] = 0;
   out_605085115782193670[230] = 0;
   out_605085115782193670[231] = 0;
   out_605085115782193670[232] = 0;
   out_605085115782193670[233] = 0;
   out_605085115782193670[234] = 0;
   out_605085115782193670[235] = 0;
   out_605085115782193670[236] = 0;
   out_605085115782193670[237] = 0;
   out_605085115782193670[238] = 0;
   out_605085115782193670[239] = 0;
   out_605085115782193670[240] = 0;
   out_605085115782193670[241] = 0;
   out_605085115782193670[242] = 1;
   out_605085115782193670[243] = 0;
   out_605085115782193670[244] = 0;
   out_605085115782193670[245] = 0;
   out_605085115782193670[246] = 0;
   out_605085115782193670[247] = 0;
   out_605085115782193670[248] = 0;
   out_605085115782193670[249] = 0;
   out_605085115782193670[250] = 0;
   out_605085115782193670[251] = 0;
   out_605085115782193670[252] = 0;
   out_605085115782193670[253] = 0;
   out_605085115782193670[254] = 0;
   out_605085115782193670[255] = 0;
   out_605085115782193670[256] = 0;
   out_605085115782193670[257] = 0;
   out_605085115782193670[258] = 0;
   out_605085115782193670[259] = 0;
   out_605085115782193670[260] = 0;
   out_605085115782193670[261] = 0;
   out_605085115782193670[262] = 0;
   out_605085115782193670[263] = 0;
   out_605085115782193670[264] = 1;
   out_605085115782193670[265] = 0;
   out_605085115782193670[266] = 0;
   out_605085115782193670[267] = 0;
   out_605085115782193670[268] = 0;
   out_605085115782193670[269] = 0;
   out_605085115782193670[270] = 0;
   out_605085115782193670[271] = 0;
   out_605085115782193670[272] = 0;
   out_605085115782193670[273] = 0;
   out_605085115782193670[274] = 0;
   out_605085115782193670[275] = 0;
   out_605085115782193670[276] = 0;
   out_605085115782193670[277] = 0;
   out_605085115782193670[278] = 0;
   out_605085115782193670[279] = 0;
   out_605085115782193670[280] = 0;
   out_605085115782193670[281] = 0;
   out_605085115782193670[282] = 0;
   out_605085115782193670[283] = 0;
   out_605085115782193670[284] = 0;
   out_605085115782193670[285] = 0;
   out_605085115782193670[286] = 1;
   out_605085115782193670[287] = 0;
   out_605085115782193670[288] = 0;
   out_605085115782193670[289] = 0;
   out_605085115782193670[290] = 0;
   out_605085115782193670[291] = 0;
   out_605085115782193670[292] = 0;
   out_605085115782193670[293] = 0;
   out_605085115782193670[294] = 0;
   out_605085115782193670[295] = 0;
   out_605085115782193670[296] = 0;
   out_605085115782193670[297] = 0;
   out_605085115782193670[298] = 0;
   out_605085115782193670[299] = 0;
   out_605085115782193670[300] = 0;
   out_605085115782193670[301] = 0;
   out_605085115782193670[302] = 0;
   out_605085115782193670[303] = 0;
   out_605085115782193670[304] = 0;
   out_605085115782193670[305] = 0;
   out_605085115782193670[306] = 0;
   out_605085115782193670[307] = 0;
   out_605085115782193670[308] = 1;
   out_605085115782193670[309] = 0;
   out_605085115782193670[310] = 0;
   out_605085115782193670[311] = 0;
   out_605085115782193670[312] = 0;
   out_605085115782193670[313] = 0;
   out_605085115782193670[314] = 0;
   out_605085115782193670[315] = 0;
   out_605085115782193670[316] = 0;
   out_605085115782193670[317] = 0;
   out_605085115782193670[318] = 0;
   out_605085115782193670[319] = 0;
   out_605085115782193670[320] = 0;
   out_605085115782193670[321] = 0;
   out_605085115782193670[322] = 0;
   out_605085115782193670[323] = 0;
   out_605085115782193670[324] = 0;
   out_605085115782193670[325] = 0;
   out_605085115782193670[326] = 0;
   out_605085115782193670[327] = 0;
   out_605085115782193670[328] = 0;
   out_605085115782193670[329] = 0;
   out_605085115782193670[330] = 1;
   out_605085115782193670[331] = 0;
   out_605085115782193670[332] = 0;
   out_605085115782193670[333] = 0;
   out_605085115782193670[334] = 0;
   out_605085115782193670[335] = 0;
   out_605085115782193670[336] = 0;
   out_605085115782193670[337] = 0;
   out_605085115782193670[338] = 0;
   out_605085115782193670[339] = 0;
   out_605085115782193670[340] = 0;
   out_605085115782193670[341] = 0;
   out_605085115782193670[342] = 0;
   out_605085115782193670[343] = 0;
   out_605085115782193670[344] = 0;
   out_605085115782193670[345] = 0;
   out_605085115782193670[346] = 0;
   out_605085115782193670[347] = 0;
   out_605085115782193670[348] = 0;
   out_605085115782193670[349] = 0;
   out_605085115782193670[350] = 0;
   out_605085115782193670[351] = 0;
   out_605085115782193670[352] = 1;
   out_605085115782193670[353] = 0;
   out_605085115782193670[354] = 0;
   out_605085115782193670[355] = 0;
   out_605085115782193670[356] = 0;
   out_605085115782193670[357] = 0;
   out_605085115782193670[358] = 0;
   out_605085115782193670[359] = 0;
   out_605085115782193670[360] = 0;
   out_605085115782193670[361] = 0;
   out_605085115782193670[362] = 0;
   out_605085115782193670[363] = 0;
   out_605085115782193670[364] = 0;
   out_605085115782193670[365] = 0;
   out_605085115782193670[366] = 0;
   out_605085115782193670[367] = 0;
   out_605085115782193670[368] = 0;
   out_605085115782193670[369] = 0;
   out_605085115782193670[370] = 0;
   out_605085115782193670[371] = 0;
   out_605085115782193670[372] = 0;
   out_605085115782193670[373] = 0;
   out_605085115782193670[374] = 1;
   out_605085115782193670[375] = 0;
   out_605085115782193670[376] = 0;
   out_605085115782193670[377] = 0;
   out_605085115782193670[378] = 0;
   out_605085115782193670[379] = 0;
   out_605085115782193670[380] = 0;
   out_605085115782193670[381] = 0;
   out_605085115782193670[382] = 0;
   out_605085115782193670[383] = 0;
   out_605085115782193670[384] = 0;
   out_605085115782193670[385] = 0;
   out_605085115782193670[386] = 0;
   out_605085115782193670[387] = 0;
   out_605085115782193670[388] = 0;
   out_605085115782193670[389] = 0;
   out_605085115782193670[390] = 0;
   out_605085115782193670[391] = 0;
   out_605085115782193670[392] = 0;
   out_605085115782193670[393] = 0;
   out_605085115782193670[394] = 0;
   out_605085115782193670[395] = 0;
   out_605085115782193670[396] = 1;
   out_605085115782193670[397] = 0;
   out_605085115782193670[398] = 0;
   out_605085115782193670[399] = 0;
   out_605085115782193670[400] = 0;
   out_605085115782193670[401] = 0;
   out_605085115782193670[402] = 0;
   out_605085115782193670[403] = 0;
   out_605085115782193670[404] = 0;
   out_605085115782193670[405] = 0;
   out_605085115782193670[406] = 0;
   out_605085115782193670[407] = 0;
   out_605085115782193670[408] = 0;
   out_605085115782193670[409] = 0;
   out_605085115782193670[410] = 0;
   out_605085115782193670[411] = 0;
   out_605085115782193670[412] = 0;
   out_605085115782193670[413] = 0;
   out_605085115782193670[414] = 0;
   out_605085115782193670[415] = 0;
   out_605085115782193670[416] = 0;
   out_605085115782193670[417] = 0;
   out_605085115782193670[418] = 1;
   out_605085115782193670[419] = 0;
   out_605085115782193670[420] = 0;
   out_605085115782193670[421] = 0;
   out_605085115782193670[422] = 0;
   out_605085115782193670[423] = 0;
   out_605085115782193670[424] = 0;
   out_605085115782193670[425] = 0;
   out_605085115782193670[426] = 0;
   out_605085115782193670[427] = 0;
   out_605085115782193670[428] = 0;
   out_605085115782193670[429] = 0;
   out_605085115782193670[430] = 0;
   out_605085115782193670[431] = 0;
   out_605085115782193670[432] = 0;
   out_605085115782193670[433] = 0;
   out_605085115782193670[434] = 0;
   out_605085115782193670[435] = 0;
   out_605085115782193670[436] = 0;
   out_605085115782193670[437] = 0;
   out_605085115782193670[438] = 0;
   out_605085115782193670[439] = 0;
   out_605085115782193670[440] = 1;
}
void h_4(double *state, double *unused, double *out_1720682332973874395) {
   out_1720682332973874395[0] = state[10] + state[13];
   out_1720682332973874395[1] = state[11] + state[14];
   out_1720682332973874395[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7718129108773990032) {
   out_7718129108773990032[0] = 0;
   out_7718129108773990032[1] = 0;
   out_7718129108773990032[2] = 0;
   out_7718129108773990032[3] = 0;
   out_7718129108773990032[4] = 0;
   out_7718129108773990032[5] = 0;
   out_7718129108773990032[6] = 0;
   out_7718129108773990032[7] = 0;
   out_7718129108773990032[8] = 0;
   out_7718129108773990032[9] = 0;
   out_7718129108773990032[10] = 1;
   out_7718129108773990032[11] = 0;
   out_7718129108773990032[12] = 0;
   out_7718129108773990032[13] = 1;
   out_7718129108773990032[14] = 0;
   out_7718129108773990032[15] = 0;
   out_7718129108773990032[16] = 0;
   out_7718129108773990032[17] = 0;
   out_7718129108773990032[18] = 0;
   out_7718129108773990032[19] = 0;
   out_7718129108773990032[20] = 0;
   out_7718129108773990032[21] = 0;
   out_7718129108773990032[22] = 0;
   out_7718129108773990032[23] = 0;
   out_7718129108773990032[24] = 0;
   out_7718129108773990032[25] = 0;
   out_7718129108773990032[26] = 0;
   out_7718129108773990032[27] = 0;
   out_7718129108773990032[28] = 0;
   out_7718129108773990032[29] = 0;
   out_7718129108773990032[30] = 0;
   out_7718129108773990032[31] = 0;
   out_7718129108773990032[32] = 0;
   out_7718129108773990032[33] = 1;
   out_7718129108773990032[34] = 0;
   out_7718129108773990032[35] = 0;
   out_7718129108773990032[36] = 1;
   out_7718129108773990032[37] = 0;
   out_7718129108773990032[38] = 0;
   out_7718129108773990032[39] = 0;
   out_7718129108773990032[40] = 0;
   out_7718129108773990032[41] = 0;
   out_7718129108773990032[42] = 0;
   out_7718129108773990032[43] = 0;
   out_7718129108773990032[44] = 0;
   out_7718129108773990032[45] = 0;
   out_7718129108773990032[46] = 0;
   out_7718129108773990032[47] = 0;
   out_7718129108773990032[48] = 0;
   out_7718129108773990032[49] = 0;
   out_7718129108773990032[50] = 0;
   out_7718129108773990032[51] = 0;
   out_7718129108773990032[52] = 0;
   out_7718129108773990032[53] = 0;
   out_7718129108773990032[54] = 0;
   out_7718129108773990032[55] = 0;
   out_7718129108773990032[56] = 1;
   out_7718129108773990032[57] = 0;
   out_7718129108773990032[58] = 0;
   out_7718129108773990032[59] = 1;
   out_7718129108773990032[60] = 0;
   out_7718129108773990032[61] = 0;
   out_7718129108773990032[62] = 0;
   out_7718129108773990032[63] = 0;
   out_7718129108773990032[64] = 0;
   out_7718129108773990032[65] = 0;
}
void h_9(double *state, double *unused, double *out_6654091283807724021) {
   out_6654091283807724021[0] = state[10];
   out_6654091283807724021[1] = state[11];
   out_6654091283807724021[2] = state[12];
}
void H_9(double *state, double *unused, double *out_430910173509542562) {
   out_430910173509542562[0] = 0;
   out_430910173509542562[1] = 0;
   out_430910173509542562[2] = 0;
   out_430910173509542562[3] = 0;
   out_430910173509542562[4] = 0;
   out_430910173509542562[5] = 0;
   out_430910173509542562[6] = 0;
   out_430910173509542562[7] = 0;
   out_430910173509542562[8] = 0;
   out_430910173509542562[9] = 0;
   out_430910173509542562[10] = 1;
   out_430910173509542562[11] = 0;
   out_430910173509542562[12] = 0;
   out_430910173509542562[13] = 0;
   out_430910173509542562[14] = 0;
   out_430910173509542562[15] = 0;
   out_430910173509542562[16] = 0;
   out_430910173509542562[17] = 0;
   out_430910173509542562[18] = 0;
   out_430910173509542562[19] = 0;
   out_430910173509542562[20] = 0;
   out_430910173509542562[21] = 0;
   out_430910173509542562[22] = 0;
   out_430910173509542562[23] = 0;
   out_430910173509542562[24] = 0;
   out_430910173509542562[25] = 0;
   out_430910173509542562[26] = 0;
   out_430910173509542562[27] = 0;
   out_430910173509542562[28] = 0;
   out_430910173509542562[29] = 0;
   out_430910173509542562[30] = 0;
   out_430910173509542562[31] = 0;
   out_430910173509542562[32] = 0;
   out_430910173509542562[33] = 1;
   out_430910173509542562[34] = 0;
   out_430910173509542562[35] = 0;
   out_430910173509542562[36] = 0;
   out_430910173509542562[37] = 0;
   out_430910173509542562[38] = 0;
   out_430910173509542562[39] = 0;
   out_430910173509542562[40] = 0;
   out_430910173509542562[41] = 0;
   out_430910173509542562[42] = 0;
   out_430910173509542562[43] = 0;
   out_430910173509542562[44] = 0;
   out_430910173509542562[45] = 0;
   out_430910173509542562[46] = 0;
   out_430910173509542562[47] = 0;
   out_430910173509542562[48] = 0;
   out_430910173509542562[49] = 0;
   out_430910173509542562[50] = 0;
   out_430910173509542562[51] = 0;
   out_430910173509542562[52] = 0;
   out_430910173509542562[53] = 0;
   out_430910173509542562[54] = 0;
   out_430910173509542562[55] = 0;
   out_430910173509542562[56] = 1;
   out_430910173509542562[57] = 0;
   out_430910173509542562[58] = 0;
   out_430910173509542562[59] = 0;
   out_430910173509542562[60] = 0;
   out_430910173509542562[61] = 0;
   out_430910173509542562[62] = 0;
   out_430910173509542562[63] = 0;
   out_430910173509542562[64] = 0;
   out_430910173509542562[65] = 0;
}
void h_10(double *state, double *unused, double *out_8850294366417281417) {
   out_8850294366417281417[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8850294366417281417[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8850294366417281417[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6402008631363930705) {
   out_6402008631363930705[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6402008631363930705[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6402008631363930705[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6402008631363930705[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6402008631363930705[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6402008631363930705[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6402008631363930705[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6402008631363930705[7] = 0;
   out_6402008631363930705[8] = 0;
   out_6402008631363930705[9] = 0;
   out_6402008631363930705[10] = 0;
   out_6402008631363930705[11] = 0;
   out_6402008631363930705[12] = 0;
   out_6402008631363930705[13] = 0;
   out_6402008631363930705[14] = 0;
   out_6402008631363930705[15] = 0;
   out_6402008631363930705[16] = 1;
   out_6402008631363930705[17] = 0;
   out_6402008631363930705[18] = 0;
   out_6402008631363930705[19] = 1;
   out_6402008631363930705[20] = 0;
   out_6402008631363930705[21] = 0;
   out_6402008631363930705[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6402008631363930705[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6402008631363930705[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6402008631363930705[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6402008631363930705[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6402008631363930705[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6402008631363930705[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6402008631363930705[29] = 0;
   out_6402008631363930705[30] = 0;
   out_6402008631363930705[31] = 0;
   out_6402008631363930705[32] = 0;
   out_6402008631363930705[33] = 0;
   out_6402008631363930705[34] = 0;
   out_6402008631363930705[35] = 0;
   out_6402008631363930705[36] = 0;
   out_6402008631363930705[37] = 0;
   out_6402008631363930705[38] = 0;
   out_6402008631363930705[39] = 1;
   out_6402008631363930705[40] = 0;
   out_6402008631363930705[41] = 0;
   out_6402008631363930705[42] = 1;
   out_6402008631363930705[43] = 0;
   out_6402008631363930705[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6402008631363930705[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6402008631363930705[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6402008631363930705[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6402008631363930705[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6402008631363930705[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6402008631363930705[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6402008631363930705[51] = 0;
   out_6402008631363930705[52] = 0;
   out_6402008631363930705[53] = 0;
   out_6402008631363930705[54] = 0;
   out_6402008631363930705[55] = 0;
   out_6402008631363930705[56] = 0;
   out_6402008631363930705[57] = 0;
   out_6402008631363930705[58] = 0;
   out_6402008631363930705[59] = 0;
   out_6402008631363930705[60] = 0;
   out_6402008631363930705[61] = 0;
   out_6402008631363930705[62] = 1;
   out_6402008631363930705[63] = 0;
   out_6402008631363930705[64] = 0;
   out_6402008631363930705[65] = 1;
}
void h_12(double *state, double *unused, double *out_763950336527271914) {
   out_763950336527271914[0] = state[0];
   out_763950336527271914[1] = state[1];
   out_763950336527271914[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2698672700742028237) {
   out_2698672700742028237[0] = 1;
   out_2698672700742028237[1] = 0;
   out_2698672700742028237[2] = 0;
   out_2698672700742028237[3] = 0;
   out_2698672700742028237[4] = 0;
   out_2698672700742028237[5] = 0;
   out_2698672700742028237[6] = 0;
   out_2698672700742028237[7] = 0;
   out_2698672700742028237[8] = 0;
   out_2698672700742028237[9] = 0;
   out_2698672700742028237[10] = 0;
   out_2698672700742028237[11] = 0;
   out_2698672700742028237[12] = 0;
   out_2698672700742028237[13] = 0;
   out_2698672700742028237[14] = 0;
   out_2698672700742028237[15] = 0;
   out_2698672700742028237[16] = 0;
   out_2698672700742028237[17] = 0;
   out_2698672700742028237[18] = 0;
   out_2698672700742028237[19] = 0;
   out_2698672700742028237[20] = 0;
   out_2698672700742028237[21] = 0;
   out_2698672700742028237[22] = 0;
   out_2698672700742028237[23] = 1;
   out_2698672700742028237[24] = 0;
   out_2698672700742028237[25] = 0;
   out_2698672700742028237[26] = 0;
   out_2698672700742028237[27] = 0;
   out_2698672700742028237[28] = 0;
   out_2698672700742028237[29] = 0;
   out_2698672700742028237[30] = 0;
   out_2698672700742028237[31] = 0;
   out_2698672700742028237[32] = 0;
   out_2698672700742028237[33] = 0;
   out_2698672700742028237[34] = 0;
   out_2698672700742028237[35] = 0;
   out_2698672700742028237[36] = 0;
   out_2698672700742028237[37] = 0;
   out_2698672700742028237[38] = 0;
   out_2698672700742028237[39] = 0;
   out_2698672700742028237[40] = 0;
   out_2698672700742028237[41] = 0;
   out_2698672700742028237[42] = 0;
   out_2698672700742028237[43] = 0;
   out_2698672700742028237[44] = 0;
   out_2698672700742028237[45] = 0;
   out_2698672700742028237[46] = 1;
   out_2698672700742028237[47] = 0;
   out_2698672700742028237[48] = 0;
   out_2698672700742028237[49] = 0;
   out_2698672700742028237[50] = 0;
   out_2698672700742028237[51] = 0;
   out_2698672700742028237[52] = 0;
   out_2698672700742028237[53] = 0;
   out_2698672700742028237[54] = 0;
   out_2698672700742028237[55] = 0;
   out_2698672700742028237[56] = 0;
   out_2698672700742028237[57] = 0;
   out_2698672700742028237[58] = 0;
   out_2698672700742028237[59] = 0;
   out_2698672700742028237[60] = 0;
   out_2698672700742028237[61] = 0;
   out_2698672700742028237[62] = 0;
   out_2698672700742028237[63] = 0;
   out_2698672700742028237[64] = 0;
   out_2698672700742028237[65] = 0;
}
void h_35(double *state, double *unused, double *out_2733917337483254325) {
   out_2733917337483254325[0] = state[7];
   out_2733917337483254325[1] = state[8];
   out_2733917337483254325[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4351467051401382656) {
   out_4351467051401382656[0] = 0;
   out_4351467051401382656[1] = 0;
   out_4351467051401382656[2] = 0;
   out_4351467051401382656[3] = 0;
   out_4351467051401382656[4] = 0;
   out_4351467051401382656[5] = 0;
   out_4351467051401382656[6] = 0;
   out_4351467051401382656[7] = 1;
   out_4351467051401382656[8] = 0;
   out_4351467051401382656[9] = 0;
   out_4351467051401382656[10] = 0;
   out_4351467051401382656[11] = 0;
   out_4351467051401382656[12] = 0;
   out_4351467051401382656[13] = 0;
   out_4351467051401382656[14] = 0;
   out_4351467051401382656[15] = 0;
   out_4351467051401382656[16] = 0;
   out_4351467051401382656[17] = 0;
   out_4351467051401382656[18] = 0;
   out_4351467051401382656[19] = 0;
   out_4351467051401382656[20] = 0;
   out_4351467051401382656[21] = 0;
   out_4351467051401382656[22] = 0;
   out_4351467051401382656[23] = 0;
   out_4351467051401382656[24] = 0;
   out_4351467051401382656[25] = 0;
   out_4351467051401382656[26] = 0;
   out_4351467051401382656[27] = 0;
   out_4351467051401382656[28] = 0;
   out_4351467051401382656[29] = 0;
   out_4351467051401382656[30] = 1;
   out_4351467051401382656[31] = 0;
   out_4351467051401382656[32] = 0;
   out_4351467051401382656[33] = 0;
   out_4351467051401382656[34] = 0;
   out_4351467051401382656[35] = 0;
   out_4351467051401382656[36] = 0;
   out_4351467051401382656[37] = 0;
   out_4351467051401382656[38] = 0;
   out_4351467051401382656[39] = 0;
   out_4351467051401382656[40] = 0;
   out_4351467051401382656[41] = 0;
   out_4351467051401382656[42] = 0;
   out_4351467051401382656[43] = 0;
   out_4351467051401382656[44] = 0;
   out_4351467051401382656[45] = 0;
   out_4351467051401382656[46] = 0;
   out_4351467051401382656[47] = 0;
   out_4351467051401382656[48] = 0;
   out_4351467051401382656[49] = 0;
   out_4351467051401382656[50] = 0;
   out_4351467051401382656[51] = 0;
   out_4351467051401382656[52] = 0;
   out_4351467051401382656[53] = 1;
   out_4351467051401382656[54] = 0;
   out_4351467051401382656[55] = 0;
   out_4351467051401382656[56] = 0;
   out_4351467051401382656[57] = 0;
   out_4351467051401382656[58] = 0;
   out_4351467051401382656[59] = 0;
   out_4351467051401382656[60] = 0;
   out_4351467051401382656[61] = 0;
   out_4351467051401382656[62] = 0;
   out_4351467051401382656[63] = 0;
   out_4351467051401382656[64] = 0;
   out_4351467051401382656[65] = 0;
}
void h_32(double *state, double *unused, double *out_8397599966418024468) {
   out_8397599966418024468[0] = state[3];
   out_8397599966418024468[1] = state[4];
   out_8397599966418024468[2] = state[5];
   out_8397599966418024468[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2410628714068373855) {
   out_2410628714068373855[0] = 0;
   out_2410628714068373855[1] = 0;
   out_2410628714068373855[2] = 0;
   out_2410628714068373855[3] = 1;
   out_2410628714068373855[4] = 0;
   out_2410628714068373855[5] = 0;
   out_2410628714068373855[6] = 0;
   out_2410628714068373855[7] = 0;
   out_2410628714068373855[8] = 0;
   out_2410628714068373855[9] = 0;
   out_2410628714068373855[10] = 0;
   out_2410628714068373855[11] = 0;
   out_2410628714068373855[12] = 0;
   out_2410628714068373855[13] = 0;
   out_2410628714068373855[14] = 0;
   out_2410628714068373855[15] = 0;
   out_2410628714068373855[16] = 0;
   out_2410628714068373855[17] = 0;
   out_2410628714068373855[18] = 0;
   out_2410628714068373855[19] = 0;
   out_2410628714068373855[20] = 0;
   out_2410628714068373855[21] = 0;
   out_2410628714068373855[22] = 0;
   out_2410628714068373855[23] = 0;
   out_2410628714068373855[24] = 0;
   out_2410628714068373855[25] = 0;
   out_2410628714068373855[26] = 1;
   out_2410628714068373855[27] = 0;
   out_2410628714068373855[28] = 0;
   out_2410628714068373855[29] = 0;
   out_2410628714068373855[30] = 0;
   out_2410628714068373855[31] = 0;
   out_2410628714068373855[32] = 0;
   out_2410628714068373855[33] = 0;
   out_2410628714068373855[34] = 0;
   out_2410628714068373855[35] = 0;
   out_2410628714068373855[36] = 0;
   out_2410628714068373855[37] = 0;
   out_2410628714068373855[38] = 0;
   out_2410628714068373855[39] = 0;
   out_2410628714068373855[40] = 0;
   out_2410628714068373855[41] = 0;
   out_2410628714068373855[42] = 0;
   out_2410628714068373855[43] = 0;
   out_2410628714068373855[44] = 0;
   out_2410628714068373855[45] = 0;
   out_2410628714068373855[46] = 0;
   out_2410628714068373855[47] = 0;
   out_2410628714068373855[48] = 0;
   out_2410628714068373855[49] = 1;
   out_2410628714068373855[50] = 0;
   out_2410628714068373855[51] = 0;
   out_2410628714068373855[52] = 0;
   out_2410628714068373855[53] = 0;
   out_2410628714068373855[54] = 0;
   out_2410628714068373855[55] = 0;
   out_2410628714068373855[56] = 0;
   out_2410628714068373855[57] = 0;
   out_2410628714068373855[58] = 0;
   out_2410628714068373855[59] = 0;
   out_2410628714068373855[60] = 0;
   out_2410628714068373855[61] = 0;
   out_2410628714068373855[62] = 0;
   out_2410628714068373855[63] = 0;
   out_2410628714068373855[64] = 0;
   out_2410628714068373855[65] = 0;
   out_2410628714068373855[66] = 0;
   out_2410628714068373855[67] = 0;
   out_2410628714068373855[68] = 0;
   out_2410628714068373855[69] = 0;
   out_2410628714068373855[70] = 0;
   out_2410628714068373855[71] = 0;
   out_2410628714068373855[72] = 1;
   out_2410628714068373855[73] = 0;
   out_2410628714068373855[74] = 0;
   out_2410628714068373855[75] = 0;
   out_2410628714068373855[76] = 0;
   out_2410628714068373855[77] = 0;
   out_2410628714068373855[78] = 0;
   out_2410628714068373855[79] = 0;
   out_2410628714068373855[80] = 0;
   out_2410628714068373855[81] = 0;
   out_2410628714068373855[82] = 0;
   out_2410628714068373855[83] = 0;
   out_2410628714068373855[84] = 0;
   out_2410628714068373855[85] = 0;
   out_2410628714068373855[86] = 0;
   out_2410628714068373855[87] = 0;
}
void h_13(double *state, double *unused, double *out_6024542805875939123) {
   out_6024542805875939123[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6024542805875939123[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6024542805875939123[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3379336200210811815) {
   out_3379336200210811815[0] = 0;
   out_3379336200210811815[1] = 0;
   out_3379336200210811815[2] = 0;
   out_3379336200210811815[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3379336200210811815[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3379336200210811815[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3379336200210811815[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3379336200210811815[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3379336200210811815[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3379336200210811815[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3379336200210811815[10] = 0;
   out_3379336200210811815[11] = 0;
   out_3379336200210811815[12] = 0;
   out_3379336200210811815[13] = 0;
   out_3379336200210811815[14] = 0;
   out_3379336200210811815[15] = 0;
   out_3379336200210811815[16] = 0;
   out_3379336200210811815[17] = 0;
   out_3379336200210811815[18] = 0;
   out_3379336200210811815[19] = 0;
   out_3379336200210811815[20] = 0;
   out_3379336200210811815[21] = 0;
   out_3379336200210811815[22] = 0;
   out_3379336200210811815[23] = 0;
   out_3379336200210811815[24] = 0;
   out_3379336200210811815[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3379336200210811815[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3379336200210811815[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3379336200210811815[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3379336200210811815[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3379336200210811815[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3379336200210811815[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3379336200210811815[32] = 0;
   out_3379336200210811815[33] = 0;
   out_3379336200210811815[34] = 0;
   out_3379336200210811815[35] = 0;
   out_3379336200210811815[36] = 0;
   out_3379336200210811815[37] = 0;
   out_3379336200210811815[38] = 0;
   out_3379336200210811815[39] = 0;
   out_3379336200210811815[40] = 0;
   out_3379336200210811815[41] = 0;
   out_3379336200210811815[42] = 0;
   out_3379336200210811815[43] = 0;
   out_3379336200210811815[44] = 0;
   out_3379336200210811815[45] = 0;
   out_3379336200210811815[46] = 0;
   out_3379336200210811815[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3379336200210811815[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3379336200210811815[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3379336200210811815[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3379336200210811815[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3379336200210811815[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3379336200210811815[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3379336200210811815[54] = 0;
   out_3379336200210811815[55] = 0;
   out_3379336200210811815[56] = 0;
   out_3379336200210811815[57] = 0;
   out_3379336200210811815[58] = 0;
   out_3379336200210811815[59] = 0;
   out_3379336200210811815[60] = 0;
   out_3379336200210811815[61] = 0;
   out_3379336200210811815[62] = 0;
   out_3379336200210811815[63] = 0;
   out_3379336200210811815[64] = 0;
   out_3379336200210811815[65] = 0;
}
void h_14(double *state, double *unused, double *out_6654091283807724021) {
   out_6654091283807724021[0] = state[10];
   out_6654091283807724021[1] = state[11];
   out_6654091283807724021[2] = state[12];
}
void H_14(double *state, double *unused, double *out_430910173509542562) {
   out_430910173509542562[0] = 0;
   out_430910173509542562[1] = 0;
   out_430910173509542562[2] = 0;
   out_430910173509542562[3] = 0;
   out_430910173509542562[4] = 0;
   out_430910173509542562[5] = 0;
   out_430910173509542562[6] = 0;
   out_430910173509542562[7] = 0;
   out_430910173509542562[8] = 0;
   out_430910173509542562[9] = 0;
   out_430910173509542562[10] = 1;
   out_430910173509542562[11] = 0;
   out_430910173509542562[12] = 0;
   out_430910173509542562[13] = 0;
   out_430910173509542562[14] = 0;
   out_430910173509542562[15] = 0;
   out_430910173509542562[16] = 0;
   out_430910173509542562[17] = 0;
   out_430910173509542562[18] = 0;
   out_430910173509542562[19] = 0;
   out_430910173509542562[20] = 0;
   out_430910173509542562[21] = 0;
   out_430910173509542562[22] = 0;
   out_430910173509542562[23] = 0;
   out_430910173509542562[24] = 0;
   out_430910173509542562[25] = 0;
   out_430910173509542562[26] = 0;
   out_430910173509542562[27] = 0;
   out_430910173509542562[28] = 0;
   out_430910173509542562[29] = 0;
   out_430910173509542562[30] = 0;
   out_430910173509542562[31] = 0;
   out_430910173509542562[32] = 0;
   out_430910173509542562[33] = 1;
   out_430910173509542562[34] = 0;
   out_430910173509542562[35] = 0;
   out_430910173509542562[36] = 0;
   out_430910173509542562[37] = 0;
   out_430910173509542562[38] = 0;
   out_430910173509542562[39] = 0;
   out_430910173509542562[40] = 0;
   out_430910173509542562[41] = 0;
   out_430910173509542562[42] = 0;
   out_430910173509542562[43] = 0;
   out_430910173509542562[44] = 0;
   out_430910173509542562[45] = 0;
   out_430910173509542562[46] = 0;
   out_430910173509542562[47] = 0;
   out_430910173509542562[48] = 0;
   out_430910173509542562[49] = 0;
   out_430910173509542562[50] = 0;
   out_430910173509542562[51] = 0;
   out_430910173509542562[52] = 0;
   out_430910173509542562[53] = 0;
   out_430910173509542562[54] = 0;
   out_430910173509542562[55] = 0;
   out_430910173509542562[56] = 1;
   out_430910173509542562[57] = 0;
   out_430910173509542562[58] = 0;
   out_430910173509542562[59] = 0;
   out_430910173509542562[60] = 0;
   out_430910173509542562[61] = 0;
   out_430910173509542562[62] = 0;
   out_430910173509542562[63] = 0;
   out_430910173509542562[64] = 0;
   out_430910173509542562[65] = 0;
}
void h_33(double *state, double *unused, double *out_82084314392906247) {
   out_82084314392906247[0] = state[16];
   out_82084314392906247[1] = state[17];
   out_82084314392906247[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1200910046762525052) {
   out_1200910046762525052[0] = 0;
   out_1200910046762525052[1] = 0;
   out_1200910046762525052[2] = 0;
   out_1200910046762525052[3] = 0;
   out_1200910046762525052[4] = 0;
   out_1200910046762525052[5] = 0;
   out_1200910046762525052[6] = 0;
   out_1200910046762525052[7] = 0;
   out_1200910046762525052[8] = 0;
   out_1200910046762525052[9] = 0;
   out_1200910046762525052[10] = 0;
   out_1200910046762525052[11] = 0;
   out_1200910046762525052[12] = 0;
   out_1200910046762525052[13] = 0;
   out_1200910046762525052[14] = 0;
   out_1200910046762525052[15] = 0;
   out_1200910046762525052[16] = 1;
   out_1200910046762525052[17] = 0;
   out_1200910046762525052[18] = 0;
   out_1200910046762525052[19] = 0;
   out_1200910046762525052[20] = 0;
   out_1200910046762525052[21] = 0;
   out_1200910046762525052[22] = 0;
   out_1200910046762525052[23] = 0;
   out_1200910046762525052[24] = 0;
   out_1200910046762525052[25] = 0;
   out_1200910046762525052[26] = 0;
   out_1200910046762525052[27] = 0;
   out_1200910046762525052[28] = 0;
   out_1200910046762525052[29] = 0;
   out_1200910046762525052[30] = 0;
   out_1200910046762525052[31] = 0;
   out_1200910046762525052[32] = 0;
   out_1200910046762525052[33] = 0;
   out_1200910046762525052[34] = 0;
   out_1200910046762525052[35] = 0;
   out_1200910046762525052[36] = 0;
   out_1200910046762525052[37] = 0;
   out_1200910046762525052[38] = 0;
   out_1200910046762525052[39] = 1;
   out_1200910046762525052[40] = 0;
   out_1200910046762525052[41] = 0;
   out_1200910046762525052[42] = 0;
   out_1200910046762525052[43] = 0;
   out_1200910046762525052[44] = 0;
   out_1200910046762525052[45] = 0;
   out_1200910046762525052[46] = 0;
   out_1200910046762525052[47] = 0;
   out_1200910046762525052[48] = 0;
   out_1200910046762525052[49] = 0;
   out_1200910046762525052[50] = 0;
   out_1200910046762525052[51] = 0;
   out_1200910046762525052[52] = 0;
   out_1200910046762525052[53] = 0;
   out_1200910046762525052[54] = 0;
   out_1200910046762525052[55] = 0;
   out_1200910046762525052[56] = 0;
   out_1200910046762525052[57] = 0;
   out_1200910046762525052[58] = 0;
   out_1200910046762525052[59] = 0;
   out_1200910046762525052[60] = 0;
   out_1200910046762525052[61] = 0;
   out_1200910046762525052[62] = 1;
   out_1200910046762525052[63] = 0;
   out_1200910046762525052[64] = 0;
   out_1200910046762525052[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2165821824918486469) {
  H(in_vec, out_2165821824918486469);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3216996441859096695) {
  err_fun(nom_x, delta_x, out_3216996441859096695);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3507935633117718260) {
  inv_err_fun(nom_x, true_x, out_3507935633117718260);
}
void live_H_mod_fun(double *state, double *out_3893200104662780740) {
  H_mod_fun(state, out_3893200104662780740);
}
void live_f_fun(double *state, double dt, double *out_3255786806568313974) {
  f_fun(state,  dt, out_3255786806568313974);
}
void live_F_fun(double *state, double dt, double *out_605085115782193670) {
  F_fun(state,  dt, out_605085115782193670);
}
void live_h_4(double *state, double *unused, double *out_1720682332973874395) {
  h_4(state, unused, out_1720682332973874395);
}
void live_H_4(double *state, double *unused, double *out_7718129108773990032) {
  H_4(state, unused, out_7718129108773990032);
}
void live_h_9(double *state, double *unused, double *out_6654091283807724021) {
  h_9(state, unused, out_6654091283807724021);
}
void live_H_9(double *state, double *unused, double *out_430910173509542562) {
  H_9(state, unused, out_430910173509542562);
}
void live_h_10(double *state, double *unused, double *out_8850294366417281417) {
  h_10(state, unused, out_8850294366417281417);
}
void live_H_10(double *state, double *unused, double *out_6402008631363930705) {
  H_10(state, unused, out_6402008631363930705);
}
void live_h_12(double *state, double *unused, double *out_763950336527271914) {
  h_12(state, unused, out_763950336527271914);
}
void live_H_12(double *state, double *unused, double *out_2698672700742028237) {
  H_12(state, unused, out_2698672700742028237);
}
void live_h_35(double *state, double *unused, double *out_2733917337483254325) {
  h_35(state, unused, out_2733917337483254325);
}
void live_H_35(double *state, double *unused, double *out_4351467051401382656) {
  H_35(state, unused, out_4351467051401382656);
}
void live_h_32(double *state, double *unused, double *out_8397599966418024468) {
  h_32(state, unused, out_8397599966418024468);
}
void live_H_32(double *state, double *unused, double *out_2410628714068373855) {
  H_32(state, unused, out_2410628714068373855);
}
void live_h_13(double *state, double *unused, double *out_6024542805875939123) {
  h_13(state, unused, out_6024542805875939123);
}
void live_H_13(double *state, double *unused, double *out_3379336200210811815) {
  H_13(state, unused, out_3379336200210811815);
}
void live_h_14(double *state, double *unused, double *out_6654091283807724021) {
  h_14(state, unused, out_6654091283807724021);
}
void live_H_14(double *state, double *unused, double *out_430910173509542562) {
  H_14(state, unused, out_430910173509542562);
}
void live_h_33(double *state, double *unused, double *out_82084314392906247) {
  h_33(state, unused, out_82084314392906247);
}
void live_H_33(double *state, double *unused, double *out_1200910046762525052) {
  H_33(state, unused, out_1200910046762525052);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
