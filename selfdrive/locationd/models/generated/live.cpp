#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2807864690648877240) {
   out_2807864690648877240[0] = 0;
   out_2807864690648877240[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2807864690648877240[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2807864690648877240[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2807864690648877240[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2807864690648877240[5] = -sin(in_vec[1]);
   out_2807864690648877240[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2807864690648877240[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2807864690648877240[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2807864690648877240[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2807864690648877240[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2807864690648877240[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2807864690648877240[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2807864690648877240[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2807864690648877240[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2807864690648877240[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2807864690648877240[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2807864690648877240[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3029380303421640733) {
   out_3029380303421640733[0] = delta_x[0] + nom_x[0];
   out_3029380303421640733[1] = delta_x[1] + nom_x[1];
   out_3029380303421640733[2] = delta_x[2] + nom_x[2];
   out_3029380303421640733[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3029380303421640733[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3029380303421640733[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3029380303421640733[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3029380303421640733[7] = delta_x[6] + nom_x[7];
   out_3029380303421640733[8] = delta_x[7] + nom_x[8];
   out_3029380303421640733[9] = delta_x[8] + nom_x[9];
   out_3029380303421640733[10] = delta_x[9] + nom_x[10];
   out_3029380303421640733[11] = delta_x[10] + nom_x[11];
   out_3029380303421640733[12] = delta_x[11] + nom_x[12];
   out_3029380303421640733[13] = delta_x[12] + nom_x[13];
   out_3029380303421640733[14] = delta_x[13] + nom_x[14];
   out_3029380303421640733[15] = delta_x[14] + nom_x[15];
   out_3029380303421640733[16] = delta_x[15] + nom_x[16];
   out_3029380303421640733[17] = delta_x[16] + nom_x[17];
   out_3029380303421640733[18] = delta_x[17] + nom_x[18];
   out_3029380303421640733[19] = delta_x[18] + nom_x[19];
   out_3029380303421640733[20] = delta_x[19] + nom_x[20];
   out_3029380303421640733[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1174517407583881423) {
   out_1174517407583881423[0] = -nom_x[0] + true_x[0];
   out_1174517407583881423[1] = -nom_x[1] + true_x[1];
   out_1174517407583881423[2] = -nom_x[2] + true_x[2];
   out_1174517407583881423[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1174517407583881423[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1174517407583881423[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1174517407583881423[6] = -nom_x[7] + true_x[7];
   out_1174517407583881423[7] = -nom_x[8] + true_x[8];
   out_1174517407583881423[8] = -nom_x[9] + true_x[9];
   out_1174517407583881423[9] = -nom_x[10] + true_x[10];
   out_1174517407583881423[10] = -nom_x[11] + true_x[11];
   out_1174517407583881423[11] = -nom_x[12] + true_x[12];
   out_1174517407583881423[12] = -nom_x[13] + true_x[13];
   out_1174517407583881423[13] = -nom_x[14] + true_x[14];
   out_1174517407583881423[14] = -nom_x[15] + true_x[15];
   out_1174517407583881423[15] = -nom_x[16] + true_x[16];
   out_1174517407583881423[16] = -nom_x[17] + true_x[17];
   out_1174517407583881423[17] = -nom_x[18] + true_x[18];
   out_1174517407583881423[18] = -nom_x[19] + true_x[19];
   out_1174517407583881423[19] = -nom_x[20] + true_x[20];
   out_1174517407583881423[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2053258554012563662) {
   out_2053258554012563662[0] = 1.0;
   out_2053258554012563662[1] = 0;
   out_2053258554012563662[2] = 0;
   out_2053258554012563662[3] = 0;
   out_2053258554012563662[4] = 0;
   out_2053258554012563662[5] = 0;
   out_2053258554012563662[6] = 0;
   out_2053258554012563662[7] = 0;
   out_2053258554012563662[8] = 0;
   out_2053258554012563662[9] = 0;
   out_2053258554012563662[10] = 0;
   out_2053258554012563662[11] = 0;
   out_2053258554012563662[12] = 0;
   out_2053258554012563662[13] = 0;
   out_2053258554012563662[14] = 0;
   out_2053258554012563662[15] = 0;
   out_2053258554012563662[16] = 0;
   out_2053258554012563662[17] = 0;
   out_2053258554012563662[18] = 0;
   out_2053258554012563662[19] = 0;
   out_2053258554012563662[20] = 0;
   out_2053258554012563662[21] = 0;
   out_2053258554012563662[22] = 1.0;
   out_2053258554012563662[23] = 0;
   out_2053258554012563662[24] = 0;
   out_2053258554012563662[25] = 0;
   out_2053258554012563662[26] = 0;
   out_2053258554012563662[27] = 0;
   out_2053258554012563662[28] = 0;
   out_2053258554012563662[29] = 0;
   out_2053258554012563662[30] = 0;
   out_2053258554012563662[31] = 0;
   out_2053258554012563662[32] = 0;
   out_2053258554012563662[33] = 0;
   out_2053258554012563662[34] = 0;
   out_2053258554012563662[35] = 0;
   out_2053258554012563662[36] = 0;
   out_2053258554012563662[37] = 0;
   out_2053258554012563662[38] = 0;
   out_2053258554012563662[39] = 0;
   out_2053258554012563662[40] = 0;
   out_2053258554012563662[41] = 0;
   out_2053258554012563662[42] = 0;
   out_2053258554012563662[43] = 0;
   out_2053258554012563662[44] = 1.0;
   out_2053258554012563662[45] = 0;
   out_2053258554012563662[46] = 0;
   out_2053258554012563662[47] = 0;
   out_2053258554012563662[48] = 0;
   out_2053258554012563662[49] = 0;
   out_2053258554012563662[50] = 0;
   out_2053258554012563662[51] = 0;
   out_2053258554012563662[52] = 0;
   out_2053258554012563662[53] = 0;
   out_2053258554012563662[54] = 0;
   out_2053258554012563662[55] = 0;
   out_2053258554012563662[56] = 0;
   out_2053258554012563662[57] = 0;
   out_2053258554012563662[58] = 0;
   out_2053258554012563662[59] = 0;
   out_2053258554012563662[60] = 0;
   out_2053258554012563662[61] = 0;
   out_2053258554012563662[62] = 0;
   out_2053258554012563662[63] = 0;
   out_2053258554012563662[64] = 0;
   out_2053258554012563662[65] = 0;
   out_2053258554012563662[66] = -0.5*state[4];
   out_2053258554012563662[67] = -0.5*state[5];
   out_2053258554012563662[68] = -0.5*state[6];
   out_2053258554012563662[69] = 0;
   out_2053258554012563662[70] = 0;
   out_2053258554012563662[71] = 0;
   out_2053258554012563662[72] = 0;
   out_2053258554012563662[73] = 0;
   out_2053258554012563662[74] = 0;
   out_2053258554012563662[75] = 0;
   out_2053258554012563662[76] = 0;
   out_2053258554012563662[77] = 0;
   out_2053258554012563662[78] = 0;
   out_2053258554012563662[79] = 0;
   out_2053258554012563662[80] = 0;
   out_2053258554012563662[81] = 0;
   out_2053258554012563662[82] = 0;
   out_2053258554012563662[83] = 0;
   out_2053258554012563662[84] = 0;
   out_2053258554012563662[85] = 0;
   out_2053258554012563662[86] = 0;
   out_2053258554012563662[87] = 0.5*state[3];
   out_2053258554012563662[88] = 0.5*state[6];
   out_2053258554012563662[89] = -0.5*state[5];
   out_2053258554012563662[90] = 0;
   out_2053258554012563662[91] = 0;
   out_2053258554012563662[92] = 0;
   out_2053258554012563662[93] = 0;
   out_2053258554012563662[94] = 0;
   out_2053258554012563662[95] = 0;
   out_2053258554012563662[96] = 0;
   out_2053258554012563662[97] = 0;
   out_2053258554012563662[98] = 0;
   out_2053258554012563662[99] = 0;
   out_2053258554012563662[100] = 0;
   out_2053258554012563662[101] = 0;
   out_2053258554012563662[102] = 0;
   out_2053258554012563662[103] = 0;
   out_2053258554012563662[104] = 0;
   out_2053258554012563662[105] = 0;
   out_2053258554012563662[106] = 0;
   out_2053258554012563662[107] = 0;
   out_2053258554012563662[108] = -0.5*state[6];
   out_2053258554012563662[109] = 0.5*state[3];
   out_2053258554012563662[110] = 0.5*state[4];
   out_2053258554012563662[111] = 0;
   out_2053258554012563662[112] = 0;
   out_2053258554012563662[113] = 0;
   out_2053258554012563662[114] = 0;
   out_2053258554012563662[115] = 0;
   out_2053258554012563662[116] = 0;
   out_2053258554012563662[117] = 0;
   out_2053258554012563662[118] = 0;
   out_2053258554012563662[119] = 0;
   out_2053258554012563662[120] = 0;
   out_2053258554012563662[121] = 0;
   out_2053258554012563662[122] = 0;
   out_2053258554012563662[123] = 0;
   out_2053258554012563662[124] = 0;
   out_2053258554012563662[125] = 0;
   out_2053258554012563662[126] = 0;
   out_2053258554012563662[127] = 0;
   out_2053258554012563662[128] = 0;
   out_2053258554012563662[129] = 0.5*state[5];
   out_2053258554012563662[130] = -0.5*state[4];
   out_2053258554012563662[131] = 0.5*state[3];
   out_2053258554012563662[132] = 0;
   out_2053258554012563662[133] = 0;
   out_2053258554012563662[134] = 0;
   out_2053258554012563662[135] = 0;
   out_2053258554012563662[136] = 0;
   out_2053258554012563662[137] = 0;
   out_2053258554012563662[138] = 0;
   out_2053258554012563662[139] = 0;
   out_2053258554012563662[140] = 0;
   out_2053258554012563662[141] = 0;
   out_2053258554012563662[142] = 0;
   out_2053258554012563662[143] = 0;
   out_2053258554012563662[144] = 0;
   out_2053258554012563662[145] = 0;
   out_2053258554012563662[146] = 0;
   out_2053258554012563662[147] = 0;
   out_2053258554012563662[148] = 0;
   out_2053258554012563662[149] = 0;
   out_2053258554012563662[150] = 0;
   out_2053258554012563662[151] = 0;
   out_2053258554012563662[152] = 0;
   out_2053258554012563662[153] = 1.0;
   out_2053258554012563662[154] = 0;
   out_2053258554012563662[155] = 0;
   out_2053258554012563662[156] = 0;
   out_2053258554012563662[157] = 0;
   out_2053258554012563662[158] = 0;
   out_2053258554012563662[159] = 0;
   out_2053258554012563662[160] = 0;
   out_2053258554012563662[161] = 0;
   out_2053258554012563662[162] = 0;
   out_2053258554012563662[163] = 0;
   out_2053258554012563662[164] = 0;
   out_2053258554012563662[165] = 0;
   out_2053258554012563662[166] = 0;
   out_2053258554012563662[167] = 0;
   out_2053258554012563662[168] = 0;
   out_2053258554012563662[169] = 0;
   out_2053258554012563662[170] = 0;
   out_2053258554012563662[171] = 0;
   out_2053258554012563662[172] = 0;
   out_2053258554012563662[173] = 0;
   out_2053258554012563662[174] = 0;
   out_2053258554012563662[175] = 1.0;
   out_2053258554012563662[176] = 0;
   out_2053258554012563662[177] = 0;
   out_2053258554012563662[178] = 0;
   out_2053258554012563662[179] = 0;
   out_2053258554012563662[180] = 0;
   out_2053258554012563662[181] = 0;
   out_2053258554012563662[182] = 0;
   out_2053258554012563662[183] = 0;
   out_2053258554012563662[184] = 0;
   out_2053258554012563662[185] = 0;
   out_2053258554012563662[186] = 0;
   out_2053258554012563662[187] = 0;
   out_2053258554012563662[188] = 0;
   out_2053258554012563662[189] = 0;
   out_2053258554012563662[190] = 0;
   out_2053258554012563662[191] = 0;
   out_2053258554012563662[192] = 0;
   out_2053258554012563662[193] = 0;
   out_2053258554012563662[194] = 0;
   out_2053258554012563662[195] = 0;
   out_2053258554012563662[196] = 0;
   out_2053258554012563662[197] = 1.0;
   out_2053258554012563662[198] = 0;
   out_2053258554012563662[199] = 0;
   out_2053258554012563662[200] = 0;
   out_2053258554012563662[201] = 0;
   out_2053258554012563662[202] = 0;
   out_2053258554012563662[203] = 0;
   out_2053258554012563662[204] = 0;
   out_2053258554012563662[205] = 0;
   out_2053258554012563662[206] = 0;
   out_2053258554012563662[207] = 0;
   out_2053258554012563662[208] = 0;
   out_2053258554012563662[209] = 0;
   out_2053258554012563662[210] = 0;
   out_2053258554012563662[211] = 0;
   out_2053258554012563662[212] = 0;
   out_2053258554012563662[213] = 0;
   out_2053258554012563662[214] = 0;
   out_2053258554012563662[215] = 0;
   out_2053258554012563662[216] = 0;
   out_2053258554012563662[217] = 0;
   out_2053258554012563662[218] = 0;
   out_2053258554012563662[219] = 1.0;
   out_2053258554012563662[220] = 0;
   out_2053258554012563662[221] = 0;
   out_2053258554012563662[222] = 0;
   out_2053258554012563662[223] = 0;
   out_2053258554012563662[224] = 0;
   out_2053258554012563662[225] = 0;
   out_2053258554012563662[226] = 0;
   out_2053258554012563662[227] = 0;
   out_2053258554012563662[228] = 0;
   out_2053258554012563662[229] = 0;
   out_2053258554012563662[230] = 0;
   out_2053258554012563662[231] = 0;
   out_2053258554012563662[232] = 0;
   out_2053258554012563662[233] = 0;
   out_2053258554012563662[234] = 0;
   out_2053258554012563662[235] = 0;
   out_2053258554012563662[236] = 0;
   out_2053258554012563662[237] = 0;
   out_2053258554012563662[238] = 0;
   out_2053258554012563662[239] = 0;
   out_2053258554012563662[240] = 0;
   out_2053258554012563662[241] = 1.0;
   out_2053258554012563662[242] = 0;
   out_2053258554012563662[243] = 0;
   out_2053258554012563662[244] = 0;
   out_2053258554012563662[245] = 0;
   out_2053258554012563662[246] = 0;
   out_2053258554012563662[247] = 0;
   out_2053258554012563662[248] = 0;
   out_2053258554012563662[249] = 0;
   out_2053258554012563662[250] = 0;
   out_2053258554012563662[251] = 0;
   out_2053258554012563662[252] = 0;
   out_2053258554012563662[253] = 0;
   out_2053258554012563662[254] = 0;
   out_2053258554012563662[255] = 0;
   out_2053258554012563662[256] = 0;
   out_2053258554012563662[257] = 0;
   out_2053258554012563662[258] = 0;
   out_2053258554012563662[259] = 0;
   out_2053258554012563662[260] = 0;
   out_2053258554012563662[261] = 0;
   out_2053258554012563662[262] = 0;
   out_2053258554012563662[263] = 1.0;
   out_2053258554012563662[264] = 0;
   out_2053258554012563662[265] = 0;
   out_2053258554012563662[266] = 0;
   out_2053258554012563662[267] = 0;
   out_2053258554012563662[268] = 0;
   out_2053258554012563662[269] = 0;
   out_2053258554012563662[270] = 0;
   out_2053258554012563662[271] = 0;
   out_2053258554012563662[272] = 0;
   out_2053258554012563662[273] = 0;
   out_2053258554012563662[274] = 0;
   out_2053258554012563662[275] = 0;
   out_2053258554012563662[276] = 0;
   out_2053258554012563662[277] = 0;
   out_2053258554012563662[278] = 0;
   out_2053258554012563662[279] = 0;
   out_2053258554012563662[280] = 0;
   out_2053258554012563662[281] = 0;
   out_2053258554012563662[282] = 0;
   out_2053258554012563662[283] = 0;
   out_2053258554012563662[284] = 0;
   out_2053258554012563662[285] = 1.0;
   out_2053258554012563662[286] = 0;
   out_2053258554012563662[287] = 0;
   out_2053258554012563662[288] = 0;
   out_2053258554012563662[289] = 0;
   out_2053258554012563662[290] = 0;
   out_2053258554012563662[291] = 0;
   out_2053258554012563662[292] = 0;
   out_2053258554012563662[293] = 0;
   out_2053258554012563662[294] = 0;
   out_2053258554012563662[295] = 0;
   out_2053258554012563662[296] = 0;
   out_2053258554012563662[297] = 0;
   out_2053258554012563662[298] = 0;
   out_2053258554012563662[299] = 0;
   out_2053258554012563662[300] = 0;
   out_2053258554012563662[301] = 0;
   out_2053258554012563662[302] = 0;
   out_2053258554012563662[303] = 0;
   out_2053258554012563662[304] = 0;
   out_2053258554012563662[305] = 0;
   out_2053258554012563662[306] = 0;
   out_2053258554012563662[307] = 1.0;
   out_2053258554012563662[308] = 0;
   out_2053258554012563662[309] = 0;
   out_2053258554012563662[310] = 0;
   out_2053258554012563662[311] = 0;
   out_2053258554012563662[312] = 0;
   out_2053258554012563662[313] = 0;
   out_2053258554012563662[314] = 0;
   out_2053258554012563662[315] = 0;
   out_2053258554012563662[316] = 0;
   out_2053258554012563662[317] = 0;
   out_2053258554012563662[318] = 0;
   out_2053258554012563662[319] = 0;
   out_2053258554012563662[320] = 0;
   out_2053258554012563662[321] = 0;
   out_2053258554012563662[322] = 0;
   out_2053258554012563662[323] = 0;
   out_2053258554012563662[324] = 0;
   out_2053258554012563662[325] = 0;
   out_2053258554012563662[326] = 0;
   out_2053258554012563662[327] = 0;
   out_2053258554012563662[328] = 0;
   out_2053258554012563662[329] = 1.0;
   out_2053258554012563662[330] = 0;
   out_2053258554012563662[331] = 0;
   out_2053258554012563662[332] = 0;
   out_2053258554012563662[333] = 0;
   out_2053258554012563662[334] = 0;
   out_2053258554012563662[335] = 0;
   out_2053258554012563662[336] = 0;
   out_2053258554012563662[337] = 0;
   out_2053258554012563662[338] = 0;
   out_2053258554012563662[339] = 0;
   out_2053258554012563662[340] = 0;
   out_2053258554012563662[341] = 0;
   out_2053258554012563662[342] = 0;
   out_2053258554012563662[343] = 0;
   out_2053258554012563662[344] = 0;
   out_2053258554012563662[345] = 0;
   out_2053258554012563662[346] = 0;
   out_2053258554012563662[347] = 0;
   out_2053258554012563662[348] = 0;
   out_2053258554012563662[349] = 0;
   out_2053258554012563662[350] = 0;
   out_2053258554012563662[351] = 1.0;
   out_2053258554012563662[352] = 0;
   out_2053258554012563662[353] = 0;
   out_2053258554012563662[354] = 0;
   out_2053258554012563662[355] = 0;
   out_2053258554012563662[356] = 0;
   out_2053258554012563662[357] = 0;
   out_2053258554012563662[358] = 0;
   out_2053258554012563662[359] = 0;
   out_2053258554012563662[360] = 0;
   out_2053258554012563662[361] = 0;
   out_2053258554012563662[362] = 0;
   out_2053258554012563662[363] = 0;
   out_2053258554012563662[364] = 0;
   out_2053258554012563662[365] = 0;
   out_2053258554012563662[366] = 0;
   out_2053258554012563662[367] = 0;
   out_2053258554012563662[368] = 0;
   out_2053258554012563662[369] = 0;
   out_2053258554012563662[370] = 0;
   out_2053258554012563662[371] = 0;
   out_2053258554012563662[372] = 0;
   out_2053258554012563662[373] = 1.0;
   out_2053258554012563662[374] = 0;
   out_2053258554012563662[375] = 0;
   out_2053258554012563662[376] = 0;
   out_2053258554012563662[377] = 0;
   out_2053258554012563662[378] = 0;
   out_2053258554012563662[379] = 0;
   out_2053258554012563662[380] = 0;
   out_2053258554012563662[381] = 0;
   out_2053258554012563662[382] = 0;
   out_2053258554012563662[383] = 0;
   out_2053258554012563662[384] = 0;
   out_2053258554012563662[385] = 0;
   out_2053258554012563662[386] = 0;
   out_2053258554012563662[387] = 0;
   out_2053258554012563662[388] = 0;
   out_2053258554012563662[389] = 0;
   out_2053258554012563662[390] = 0;
   out_2053258554012563662[391] = 0;
   out_2053258554012563662[392] = 0;
   out_2053258554012563662[393] = 0;
   out_2053258554012563662[394] = 0;
   out_2053258554012563662[395] = 1.0;
   out_2053258554012563662[396] = 0;
   out_2053258554012563662[397] = 0;
   out_2053258554012563662[398] = 0;
   out_2053258554012563662[399] = 0;
   out_2053258554012563662[400] = 0;
   out_2053258554012563662[401] = 0;
   out_2053258554012563662[402] = 0;
   out_2053258554012563662[403] = 0;
   out_2053258554012563662[404] = 0;
   out_2053258554012563662[405] = 0;
   out_2053258554012563662[406] = 0;
   out_2053258554012563662[407] = 0;
   out_2053258554012563662[408] = 0;
   out_2053258554012563662[409] = 0;
   out_2053258554012563662[410] = 0;
   out_2053258554012563662[411] = 0;
   out_2053258554012563662[412] = 0;
   out_2053258554012563662[413] = 0;
   out_2053258554012563662[414] = 0;
   out_2053258554012563662[415] = 0;
   out_2053258554012563662[416] = 0;
   out_2053258554012563662[417] = 1.0;
   out_2053258554012563662[418] = 0;
   out_2053258554012563662[419] = 0;
   out_2053258554012563662[420] = 0;
   out_2053258554012563662[421] = 0;
   out_2053258554012563662[422] = 0;
   out_2053258554012563662[423] = 0;
   out_2053258554012563662[424] = 0;
   out_2053258554012563662[425] = 0;
   out_2053258554012563662[426] = 0;
   out_2053258554012563662[427] = 0;
   out_2053258554012563662[428] = 0;
   out_2053258554012563662[429] = 0;
   out_2053258554012563662[430] = 0;
   out_2053258554012563662[431] = 0;
   out_2053258554012563662[432] = 0;
   out_2053258554012563662[433] = 0;
   out_2053258554012563662[434] = 0;
   out_2053258554012563662[435] = 0;
   out_2053258554012563662[436] = 0;
   out_2053258554012563662[437] = 0;
   out_2053258554012563662[438] = 0;
   out_2053258554012563662[439] = 1.0;
   out_2053258554012563662[440] = 0;
   out_2053258554012563662[441] = 0;
   out_2053258554012563662[442] = 0;
   out_2053258554012563662[443] = 0;
   out_2053258554012563662[444] = 0;
   out_2053258554012563662[445] = 0;
   out_2053258554012563662[446] = 0;
   out_2053258554012563662[447] = 0;
   out_2053258554012563662[448] = 0;
   out_2053258554012563662[449] = 0;
   out_2053258554012563662[450] = 0;
   out_2053258554012563662[451] = 0;
   out_2053258554012563662[452] = 0;
   out_2053258554012563662[453] = 0;
   out_2053258554012563662[454] = 0;
   out_2053258554012563662[455] = 0;
   out_2053258554012563662[456] = 0;
   out_2053258554012563662[457] = 0;
   out_2053258554012563662[458] = 0;
   out_2053258554012563662[459] = 0;
   out_2053258554012563662[460] = 0;
   out_2053258554012563662[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_516476738374678989) {
   out_516476738374678989[0] = dt*state[7] + state[0];
   out_516476738374678989[1] = dt*state[8] + state[1];
   out_516476738374678989[2] = dt*state[9] + state[2];
   out_516476738374678989[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_516476738374678989[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_516476738374678989[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_516476738374678989[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_516476738374678989[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_516476738374678989[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_516476738374678989[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_516476738374678989[10] = state[10];
   out_516476738374678989[11] = state[11];
   out_516476738374678989[12] = state[12];
   out_516476738374678989[13] = state[13];
   out_516476738374678989[14] = state[14];
   out_516476738374678989[15] = state[15];
   out_516476738374678989[16] = state[16];
   out_516476738374678989[17] = state[17];
   out_516476738374678989[18] = state[18];
   out_516476738374678989[19] = state[19];
   out_516476738374678989[20] = state[20];
   out_516476738374678989[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8024826052511320476) {
   out_8024826052511320476[0] = 1;
   out_8024826052511320476[1] = 0;
   out_8024826052511320476[2] = 0;
   out_8024826052511320476[3] = 0;
   out_8024826052511320476[4] = 0;
   out_8024826052511320476[5] = 0;
   out_8024826052511320476[6] = dt;
   out_8024826052511320476[7] = 0;
   out_8024826052511320476[8] = 0;
   out_8024826052511320476[9] = 0;
   out_8024826052511320476[10] = 0;
   out_8024826052511320476[11] = 0;
   out_8024826052511320476[12] = 0;
   out_8024826052511320476[13] = 0;
   out_8024826052511320476[14] = 0;
   out_8024826052511320476[15] = 0;
   out_8024826052511320476[16] = 0;
   out_8024826052511320476[17] = 0;
   out_8024826052511320476[18] = 0;
   out_8024826052511320476[19] = 0;
   out_8024826052511320476[20] = 0;
   out_8024826052511320476[21] = 0;
   out_8024826052511320476[22] = 1;
   out_8024826052511320476[23] = 0;
   out_8024826052511320476[24] = 0;
   out_8024826052511320476[25] = 0;
   out_8024826052511320476[26] = 0;
   out_8024826052511320476[27] = 0;
   out_8024826052511320476[28] = dt;
   out_8024826052511320476[29] = 0;
   out_8024826052511320476[30] = 0;
   out_8024826052511320476[31] = 0;
   out_8024826052511320476[32] = 0;
   out_8024826052511320476[33] = 0;
   out_8024826052511320476[34] = 0;
   out_8024826052511320476[35] = 0;
   out_8024826052511320476[36] = 0;
   out_8024826052511320476[37] = 0;
   out_8024826052511320476[38] = 0;
   out_8024826052511320476[39] = 0;
   out_8024826052511320476[40] = 0;
   out_8024826052511320476[41] = 0;
   out_8024826052511320476[42] = 0;
   out_8024826052511320476[43] = 0;
   out_8024826052511320476[44] = 1;
   out_8024826052511320476[45] = 0;
   out_8024826052511320476[46] = 0;
   out_8024826052511320476[47] = 0;
   out_8024826052511320476[48] = 0;
   out_8024826052511320476[49] = 0;
   out_8024826052511320476[50] = dt;
   out_8024826052511320476[51] = 0;
   out_8024826052511320476[52] = 0;
   out_8024826052511320476[53] = 0;
   out_8024826052511320476[54] = 0;
   out_8024826052511320476[55] = 0;
   out_8024826052511320476[56] = 0;
   out_8024826052511320476[57] = 0;
   out_8024826052511320476[58] = 0;
   out_8024826052511320476[59] = 0;
   out_8024826052511320476[60] = 0;
   out_8024826052511320476[61] = 0;
   out_8024826052511320476[62] = 0;
   out_8024826052511320476[63] = 0;
   out_8024826052511320476[64] = 0;
   out_8024826052511320476[65] = 0;
   out_8024826052511320476[66] = 1;
   out_8024826052511320476[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8024826052511320476[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8024826052511320476[69] = 0;
   out_8024826052511320476[70] = 0;
   out_8024826052511320476[71] = 0;
   out_8024826052511320476[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8024826052511320476[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8024826052511320476[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8024826052511320476[75] = 0;
   out_8024826052511320476[76] = 0;
   out_8024826052511320476[77] = 0;
   out_8024826052511320476[78] = 0;
   out_8024826052511320476[79] = 0;
   out_8024826052511320476[80] = 0;
   out_8024826052511320476[81] = 0;
   out_8024826052511320476[82] = 0;
   out_8024826052511320476[83] = 0;
   out_8024826052511320476[84] = 0;
   out_8024826052511320476[85] = 0;
   out_8024826052511320476[86] = 0;
   out_8024826052511320476[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8024826052511320476[88] = 1;
   out_8024826052511320476[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8024826052511320476[90] = 0;
   out_8024826052511320476[91] = 0;
   out_8024826052511320476[92] = 0;
   out_8024826052511320476[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8024826052511320476[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8024826052511320476[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8024826052511320476[96] = 0;
   out_8024826052511320476[97] = 0;
   out_8024826052511320476[98] = 0;
   out_8024826052511320476[99] = 0;
   out_8024826052511320476[100] = 0;
   out_8024826052511320476[101] = 0;
   out_8024826052511320476[102] = 0;
   out_8024826052511320476[103] = 0;
   out_8024826052511320476[104] = 0;
   out_8024826052511320476[105] = 0;
   out_8024826052511320476[106] = 0;
   out_8024826052511320476[107] = 0;
   out_8024826052511320476[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8024826052511320476[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8024826052511320476[110] = 1;
   out_8024826052511320476[111] = 0;
   out_8024826052511320476[112] = 0;
   out_8024826052511320476[113] = 0;
   out_8024826052511320476[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8024826052511320476[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8024826052511320476[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8024826052511320476[117] = 0;
   out_8024826052511320476[118] = 0;
   out_8024826052511320476[119] = 0;
   out_8024826052511320476[120] = 0;
   out_8024826052511320476[121] = 0;
   out_8024826052511320476[122] = 0;
   out_8024826052511320476[123] = 0;
   out_8024826052511320476[124] = 0;
   out_8024826052511320476[125] = 0;
   out_8024826052511320476[126] = 0;
   out_8024826052511320476[127] = 0;
   out_8024826052511320476[128] = 0;
   out_8024826052511320476[129] = 0;
   out_8024826052511320476[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8024826052511320476[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8024826052511320476[132] = 1;
   out_8024826052511320476[133] = 0;
   out_8024826052511320476[134] = 0;
   out_8024826052511320476[135] = 0;
   out_8024826052511320476[136] = 0;
   out_8024826052511320476[137] = 0;
   out_8024826052511320476[138] = 0;
   out_8024826052511320476[139] = 0;
   out_8024826052511320476[140] = 0;
   out_8024826052511320476[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8024826052511320476[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8024826052511320476[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8024826052511320476[144] = 0;
   out_8024826052511320476[145] = 0;
   out_8024826052511320476[146] = 0;
   out_8024826052511320476[147] = 0;
   out_8024826052511320476[148] = 0;
   out_8024826052511320476[149] = 0;
   out_8024826052511320476[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8024826052511320476[151] = 0;
   out_8024826052511320476[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8024826052511320476[153] = 0;
   out_8024826052511320476[154] = 1;
   out_8024826052511320476[155] = 0;
   out_8024826052511320476[156] = 0;
   out_8024826052511320476[157] = 0;
   out_8024826052511320476[158] = 0;
   out_8024826052511320476[159] = 0;
   out_8024826052511320476[160] = 0;
   out_8024826052511320476[161] = 0;
   out_8024826052511320476[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8024826052511320476[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8024826052511320476[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8024826052511320476[165] = 0;
   out_8024826052511320476[166] = 0;
   out_8024826052511320476[167] = 0;
   out_8024826052511320476[168] = 0;
   out_8024826052511320476[169] = 0;
   out_8024826052511320476[170] = 0;
   out_8024826052511320476[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8024826052511320476[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8024826052511320476[173] = 0;
   out_8024826052511320476[174] = 0;
   out_8024826052511320476[175] = 0;
   out_8024826052511320476[176] = 1;
   out_8024826052511320476[177] = 0;
   out_8024826052511320476[178] = 0;
   out_8024826052511320476[179] = 0;
   out_8024826052511320476[180] = 0;
   out_8024826052511320476[181] = 0;
   out_8024826052511320476[182] = 0;
   out_8024826052511320476[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8024826052511320476[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8024826052511320476[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8024826052511320476[186] = 0;
   out_8024826052511320476[187] = 0;
   out_8024826052511320476[188] = 0;
   out_8024826052511320476[189] = 0;
   out_8024826052511320476[190] = 0;
   out_8024826052511320476[191] = 0;
   out_8024826052511320476[192] = 0;
   out_8024826052511320476[193] = 0;
   out_8024826052511320476[194] = 0;
   out_8024826052511320476[195] = 0;
   out_8024826052511320476[196] = 0;
   out_8024826052511320476[197] = 0;
   out_8024826052511320476[198] = 1;
   out_8024826052511320476[199] = 0;
   out_8024826052511320476[200] = 0;
   out_8024826052511320476[201] = 0;
   out_8024826052511320476[202] = 0;
   out_8024826052511320476[203] = 0;
   out_8024826052511320476[204] = 0;
   out_8024826052511320476[205] = 0;
   out_8024826052511320476[206] = 0;
   out_8024826052511320476[207] = 0;
   out_8024826052511320476[208] = 0;
   out_8024826052511320476[209] = 0;
   out_8024826052511320476[210] = 0;
   out_8024826052511320476[211] = 0;
   out_8024826052511320476[212] = 0;
   out_8024826052511320476[213] = 0;
   out_8024826052511320476[214] = 0;
   out_8024826052511320476[215] = 0;
   out_8024826052511320476[216] = 0;
   out_8024826052511320476[217] = 0;
   out_8024826052511320476[218] = 0;
   out_8024826052511320476[219] = 0;
   out_8024826052511320476[220] = 1;
   out_8024826052511320476[221] = 0;
   out_8024826052511320476[222] = 0;
   out_8024826052511320476[223] = 0;
   out_8024826052511320476[224] = 0;
   out_8024826052511320476[225] = 0;
   out_8024826052511320476[226] = 0;
   out_8024826052511320476[227] = 0;
   out_8024826052511320476[228] = 0;
   out_8024826052511320476[229] = 0;
   out_8024826052511320476[230] = 0;
   out_8024826052511320476[231] = 0;
   out_8024826052511320476[232] = 0;
   out_8024826052511320476[233] = 0;
   out_8024826052511320476[234] = 0;
   out_8024826052511320476[235] = 0;
   out_8024826052511320476[236] = 0;
   out_8024826052511320476[237] = 0;
   out_8024826052511320476[238] = 0;
   out_8024826052511320476[239] = 0;
   out_8024826052511320476[240] = 0;
   out_8024826052511320476[241] = 0;
   out_8024826052511320476[242] = 1;
   out_8024826052511320476[243] = 0;
   out_8024826052511320476[244] = 0;
   out_8024826052511320476[245] = 0;
   out_8024826052511320476[246] = 0;
   out_8024826052511320476[247] = 0;
   out_8024826052511320476[248] = 0;
   out_8024826052511320476[249] = 0;
   out_8024826052511320476[250] = 0;
   out_8024826052511320476[251] = 0;
   out_8024826052511320476[252] = 0;
   out_8024826052511320476[253] = 0;
   out_8024826052511320476[254] = 0;
   out_8024826052511320476[255] = 0;
   out_8024826052511320476[256] = 0;
   out_8024826052511320476[257] = 0;
   out_8024826052511320476[258] = 0;
   out_8024826052511320476[259] = 0;
   out_8024826052511320476[260] = 0;
   out_8024826052511320476[261] = 0;
   out_8024826052511320476[262] = 0;
   out_8024826052511320476[263] = 0;
   out_8024826052511320476[264] = 1;
   out_8024826052511320476[265] = 0;
   out_8024826052511320476[266] = 0;
   out_8024826052511320476[267] = 0;
   out_8024826052511320476[268] = 0;
   out_8024826052511320476[269] = 0;
   out_8024826052511320476[270] = 0;
   out_8024826052511320476[271] = 0;
   out_8024826052511320476[272] = 0;
   out_8024826052511320476[273] = 0;
   out_8024826052511320476[274] = 0;
   out_8024826052511320476[275] = 0;
   out_8024826052511320476[276] = 0;
   out_8024826052511320476[277] = 0;
   out_8024826052511320476[278] = 0;
   out_8024826052511320476[279] = 0;
   out_8024826052511320476[280] = 0;
   out_8024826052511320476[281] = 0;
   out_8024826052511320476[282] = 0;
   out_8024826052511320476[283] = 0;
   out_8024826052511320476[284] = 0;
   out_8024826052511320476[285] = 0;
   out_8024826052511320476[286] = 1;
   out_8024826052511320476[287] = 0;
   out_8024826052511320476[288] = 0;
   out_8024826052511320476[289] = 0;
   out_8024826052511320476[290] = 0;
   out_8024826052511320476[291] = 0;
   out_8024826052511320476[292] = 0;
   out_8024826052511320476[293] = 0;
   out_8024826052511320476[294] = 0;
   out_8024826052511320476[295] = 0;
   out_8024826052511320476[296] = 0;
   out_8024826052511320476[297] = 0;
   out_8024826052511320476[298] = 0;
   out_8024826052511320476[299] = 0;
   out_8024826052511320476[300] = 0;
   out_8024826052511320476[301] = 0;
   out_8024826052511320476[302] = 0;
   out_8024826052511320476[303] = 0;
   out_8024826052511320476[304] = 0;
   out_8024826052511320476[305] = 0;
   out_8024826052511320476[306] = 0;
   out_8024826052511320476[307] = 0;
   out_8024826052511320476[308] = 1;
   out_8024826052511320476[309] = 0;
   out_8024826052511320476[310] = 0;
   out_8024826052511320476[311] = 0;
   out_8024826052511320476[312] = 0;
   out_8024826052511320476[313] = 0;
   out_8024826052511320476[314] = 0;
   out_8024826052511320476[315] = 0;
   out_8024826052511320476[316] = 0;
   out_8024826052511320476[317] = 0;
   out_8024826052511320476[318] = 0;
   out_8024826052511320476[319] = 0;
   out_8024826052511320476[320] = 0;
   out_8024826052511320476[321] = 0;
   out_8024826052511320476[322] = 0;
   out_8024826052511320476[323] = 0;
   out_8024826052511320476[324] = 0;
   out_8024826052511320476[325] = 0;
   out_8024826052511320476[326] = 0;
   out_8024826052511320476[327] = 0;
   out_8024826052511320476[328] = 0;
   out_8024826052511320476[329] = 0;
   out_8024826052511320476[330] = 1;
   out_8024826052511320476[331] = 0;
   out_8024826052511320476[332] = 0;
   out_8024826052511320476[333] = 0;
   out_8024826052511320476[334] = 0;
   out_8024826052511320476[335] = 0;
   out_8024826052511320476[336] = 0;
   out_8024826052511320476[337] = 0;
   out_8024826052511320476[338] = 0;
   out_8024826052511320476[339] = 0;
   out_8024826052511320476[340] = 0;
   out_8024826052511320476[341] = 0;
   out_8024826052511320476[342] = 0;
   out_8024826052511320476[343] = 0;
   out_8024826052511320476[344] = 0;
   out_8024826052511320476[345] = 0;
   out_8024826052511320476[346] = 0;
   out_8024826052511320476[347] = 0;
   out_8024826052511320476[348] = 0;
   out_8024826052511320476[349] = 0;
   out_8024826052511320476[350] = 0;
   out_8024826052511320476[351] = 0;
   out_8024826052511320476[352] = 1;
   out_8024826052511320476[353] = 0;
   out_8024826052511320476[354] = 0;
   out_8024826052511320476[355] = 0;
   out_8024826052511320476[356] = 0;
   out_8024826052511320476[357] = 0;
   out_8024826052511320476[358] = 0;
   out_8024826052511320476[359] = 0;
   out_8024826052511320476[360] = 0;
   out_8024826052511320476[361] = 0;
   out_8024826052511320476[362] = 0;
   out_8024826052511320476[363] = 0;
   out_8024826052511320476[364] = 0;
   out_8024826052511320476[365] = 0;
   out_8024826052511320476[366] = 0;
   out_8024826052511320476[367] = 0;
   out_8024826052511320476[368] = 0;
   out_8024826052511320476[369] = 0;
   out_8024826052511320476[370] = 0;
   out_8024826052511320476[371] = 0;
   out_8024826052511320476[372] = 0;
   out_8024826052511320476[373] = 0;
   out_8024826052511320476[374] = 1;
   out_8024826052511320476[375] = 0;
   out_8024826052511320476[376] = 0;
   out_8024826052511320476[377] = 0;
   out_8024826052511320476[378] = 0;
   out_8024826052511320476[379] = 0;
   out_8024826052511320476[380] = 0;
   out_8024826052511320476[381] = 0;
   out_8024826052511320476[382] = 0;
   out_8024826052511320476[383] = 0;
   out_8024826052511320476[384] = 0;
   out_8024826052511320476[385] = 0;
   out_8024826052511320476[386] = 0;
   out_8024826052511320476[387] = 0;
   out_8024826052511320476[388] = 0;
   out_8024826052511320476[389] = 0;
   out_8024826052511320476[390] = 0;
   out_8024826052511320476[391] = 0;
   out_8024826052511320476[392] = 0;
   out_8024826052511320476[393] = 0;
   out_8024826052511320476[394] = 0;
   out_8024826052511320476[395] = 0;
   out_8024826052511320476[396] = 1;
   out_8024826052511320476[397] = 0;
   out_8024826052511320476[398] = 0;
   out_8024826052511320476[399] = 0;
   out_8024826052511320476[400] = 0;
   out_8024826052511320476[401] = 0;
   out_8024826052511320476[402] = 0;
   out_8024826052511320476[403] = 0;
   out_8024826052511320476[404] = 0;
   out_8024826052511320476[405] = 0;
   out_8024826052511320476[406] = 0;
   out_8024826052511320476[407] = 0;
   out_8024826052511320476[408] = 0;
   out_8024826052511320476[409] = 0;
   out_8024826052511320476[410] = 0;
   out_8024826052511320476[411] = 0;
   out_8024826052511320476[412] = 0;
   out_8024826052511320476[413] = 0;
   out_8024826052511320476[414] = 0;
   out_8024826052511320476[415] = 0;
   out_8024826052511320476[416] = 0;
   out_8024826052511320476[417] = 0;
   out_8024826052511320476[418] = 1;
   out_8024826052511320476[419] = 0;
   out_8024826052511320476[420] = 0;
   out_8024826052511320476[421] = 0;
   out_8024826052511320476[422] = 0;
   out_8024826052511320476[423] = 0;
   out_8024826052511320476[424] = 0;
   out_8024826052511320476[425] = 0;
   out_8024826052511320476[426] = 0;
   out_8024826052511320476[427] = 0;
   out_8024826052511320476[428] = 0;
   out_8024826052511320476[429] = 0;
   out_8024826052511320476[430] = 0;
   out_8024826052511320476[431] = 0;
   out_8024826052511320476[432] = 0;
   out_8024826052511320476[433] = 0;
   out_8024826052511320476[434] = 0;
   out_8024826052511320476[435] = 0;
   out_8024826052511320476[436] = 0;
   out_8024826052511320476[437] = 0;
   out_8024826052511320476[438] = 0;
   out_8024826052511320476[439] = 0;
   out_8024826052511320476[440] = 1;
}
void h_4(double *state, double *unused, double *out_6723843180459930878) {
   out_6723843180459930878[0] = state[10] + state[13];
   out_6723843180459930878[1] = state[11] + state[14];
   out_6723843180459930878[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1960006525441801665) {
   out_1960006525441801665[0] = 0;
   out_1960006525441801665[1] = 0;
   out_1960006525441801665[2] = 0;
   out_1960006525441801665[3] = 0;
   out_1960006525441801665[4] = 0;
   out_1960006525441801665[5] = 0;
   out_1960006525441801665[6] = 0;
   out_1960006525441801665[7] = 0;
   out_1960006525441801665[8] = 0;
   out_1960006525441801665[9] = 0;
   out_1960006525441801665[10] = 1;
   out_1960006525441801665[11] = 0;
   out_1960006525441801665[12] = 0;
   out_1960006525441801665[13] = 1;
   out_1960006525441801665[14] = 0;
   out_1960006525441801665[15] = 0;
   out_1960006525441801665[16] = 0;
   out_1960006525441801665[17] = 0;
   out_1960006525441801665[18] = 0;
   out_1960006525441801665[19] = 0;
   out_1960006525441801665[20] = 0;
   out_1960006525441801665[21] = 0;
   out_1960006525441801665[22] = 0;
   out_1960006525441801665[23] = 0;
   out_1960006525441801665[24] = 0;
   out_1960006525441801665[25] = 0;
   out_1960006525441801665[26] = 0;
   out_1960006525441801665[27] = 0;
   out_1960006525441801665[28] = 0;
   out_1960006525441801665[29] = 0;
   out_1960006525441801665[30] = 0;
   out_1960006525441801665[31] = 0;
   out_1960006525441801665[32] = 0;
   out_1960006525441801665[33] = 1;
   out_1960006525441801665[34] = 0;
   out_1960006525441801665[35] = 0;
   out_1960006525441801665[36] = 1;
   out_1960006525441801665[37] = 0;
   out_1960006525441801665[38] = 0;
   out_1960006525441801665[39] = 0;
   out_1960006525441801665[40] = 0;
   out_1960006525441801665[41] = 0;
   out_1960006525441801665[42] = 0;
   out_1960006525441801665[43] = 0;
   out_1960006525441801665[44] = 0;
   out_1960006525441801665[45] = 0;
   out_1960006525441801665[46] = 0;
   out_1960006525441801665[47] = 0;
   out_1960006525441801665[48] = 0;
   out_1960006525441801665[49] = 0;
   out_1960006525441801665[50] = 0;
   out_1960006525441801665[51] = 0;
   out_1960006525441801665[52] = 0;
   out_1960006525441801665[53] = 0;
   out_1960006525441801665[54] = 0;
   out_1960006525441801665[55] = 0;
   out_1960006525441801665[56] = 1;
   out_1960006525441801665[57] = 0;
   out_1960006525441801665[58] = 0;
   out_1960006525441801665[59] = 1;
   out_1960006525441801665[60] = 0;
   out_1960006525441801665[61] = 0;
   out_1960006525441801665[62] = 0;
   out_1960006525441801665[63] = 0;
   out_1960006525441801665[64] = 0;
   out_1960006525441801665[65] = 0;
}
void h_9(double *state, double *unused, double *out_844199080084644077) {
   out_844199080084644077[0] = state[10];
   out_844199080084644077[1] = state[11];
   out_844199080084644077[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2197161210912975818) {
   out_2197161210912975818[0] = 0;
   out_2197161210912975818[1] = 0;
   out_2197161210912975818[2] = 0;
   out_2197161210912975818[3] = 0;
   out_2197161210912975818[4] = 0;
   out_2197161210912975818[5] = 0;
   out_2197161210912975818[6] = 0;
   out_2197161210912975818[7] = 0;
   out_2197161210912975818[8] = 0;
   out_2197161210912975818[9] = 0;
   out_2197161210912975818[10] = 1;
   out_2197161210912975818[11] = 0;
   out_2197161210912975818[12] = 0;
   out_2197161210912975818[13] = 0;
   out_2197161210912975818[14] = 0;
   out_2197161210912975818[15] = 0;
   out_2197161210912975818[16] = 0;
   out_2197161210912975818[17] = 0;
   out_2197161210912975818[18] = 0;
   out_2197161210912975818[19] = 0;
   out_2197161210912975818[20] = 0;
   out_2197161210912975818[21] = 0;
   out_2197161210912975818[22] = 0;
   out_2197161210912975818[23] = 0;
   out_2197161210912975818[24] = 0;
   out_2197161210912975818[25] = 0;
   out_2197161210912975818[26] = 0;
   out_2197161210912975818[27] = 0;
   out_2197161210912975818[28] = 0;
   out_2197161210912975818[29] = 0;
   out_2197161210912975818[30] = 0;
   out_2197161210912975818[31] = 0;
   out_2197161210912975818[32] = 0;
   out_2197161210912975818[33] = 1;
   out_2197161210912975818[34] = 0;
   out_2197161210912975818[35] = 0;
   out_2197161210912975818[36] = 0;
   out_2197161210912975818[37] = 0;
   out_2197161210912975818[38] = 0;
   out_2197161210912975818[39] = 0;
   out_2197161210912975818[40] = 0;
   out_2197161210912975818[41] = 0;
   out_2197161210912975818[42] = 0;
   out_2197161210912975818[43] = 0;
   out_2197161210912975818[44] = 0;
   out_2197161210912975818[45] = 0;
   out_2197161210912975818[46] = 0;
   out_2197161210912975818[47] = 0;
   out_2197161210912975818[48] = 0;
   out_2197161210912975818[49] = 0;
   out_2197161210912975818[50] = 0;
   out_2197161210912975818[51] = 0;
   out_2197161210912975818[52] = 0;
   out_2197161210912975818[53] = 0;
   out_2197161210912975818[54] = 0;
   out_2197161210912975818[55] = 0;
   out_2197161210912975818[56] = 1;
   out_2197161210912975818[57] = 0;
   out_2197161210912975818[58] = 0;
   out_2197161210912975818[59] = 0;
   out_2197161210912975818[60] = 0;
   out_2197161210912975818[61] = 0;
   out_2197161210912975818[62] = 0;
   out_2197161210912975818[63] = 0;
   out_2197161210912975818[64] = 0;
   out_2197161210912975818[65] = 0;
}
void h_10(double *state, double *unused, double *out_7855237628529450047) {
   out_7855237628529450047[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7855237628529450047[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7855237628529450047[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5799196377413634969) {
   out_5799196377413634969[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5799196377413634969[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5799196377413634969[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5799196377413634969[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5799196377413634969[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5799196377413634969[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5799196377413634969[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5799196377413634969[7] = 0;
   out_5799196377413634969[8] = 0;
   out_5799196377413634969[9] = 0;
   out_5799196377413634969[10] = 0;
   out_5799196377413634969[11] = 0;
   out_5799196377413634969[12] = 0;
   out_5799196377413634969[13] = 0;
   out_5799196377413634969[14] = 0;
   out_5799196377413634969[15] = 0;
   out_5799196377413634969[16] = 1;
   out_5799196377413634969[17] = 0;
   out_5799196377413634969[18] = 0;
   out_5799196377413634969[19] = 1;
   out_5799196377413634969[20] = 0;
   out_5799196377413634969[21] = 0;
   out_5799196377413634969[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5799196377413634969[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5799196377413634969[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5799196377413634969[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5799196377413634969[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5799196377413634969[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5799196377413634969[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5799196377413634969[29] = 0;
   out_5799196377413634969[30] = 0;
   out_5799196377413634969[31] = 0;
   out_5799196377413634969[32] = 0;
   out_5799196377413634969[33] = 0;
   out_5799196377413634969[34] = 0;
   out_5799196377413634969[35] = 0;
   out_5799196377413634969[36] = 0;
   out_5799196377413634969[37] = 0;
   out_5799196377413634969[38] = 0;
   out_5799196377413634969[39] = 1;
   out_5799196377413634969[40] = 0;
   out_5799196377413634969[41] = 0;
   out_5799196377413634969[42] = 1;
   out_5799196377413634969[43] = 0;
   out_5799196377413634969[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5799196377413634969[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5799196377413634969[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5799196377413634969[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5799196377413634969[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5799196377413634969[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5799196377413634969[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5799196377413634969[51] = 0;
   out_5799196377413634969[52] = 0;
   out_5799196377413634969[53] = 0;
   out_5799196377413634969[54] = 0;
   out_5799196377413634969[55] = 0;
   out_5799196377413634969[56] = 0;
   out_5799196377413634969[57] = 0;
   out_5799196377413634969[58] = 0;
   out_5799196377413634969[59] = 0;
   out_5799196377413634969[60] = 0;
   out_5799196377413634969[61] = 0;
   out_5799196377413634969[62] = 1;
   out_5799196377413634969[63] = 0;
   out_5799196377413634969[64] = 0;
   out_5799196377413634969[65] = 1;
}
void h_12(double *state, double *unused, double *out_3409325819001084101) {
   out_3409325819001084101[0] = state[0];
   out_3409325819001084101[1] = state[1];
   out_3409325819001084101[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2581105550489395332) {
   out_2581105550489395332[0] = 1;
   out_2581105550489395332[1] = 0;
   out_2581105550489395332[2] = 0;
   out_2581105550489395332[3] = 0;
   out_2581105550489395332[4] = 0;
   out_2581105550489395332[5] = 0;
   out_2581105550489395332[6] = 0;
   out_2581105550489395332[7] = 0;
   out_2581105550489395332[8] = 0;
   out_2581105550489395332[9] = 0;
   out_2581105550489395332[10] = 0;
   out_2581105550489395332[11] = 0;
   out_2581105550489395332[12] = 0;
   out_2581105550489395332[13] = 0;
   out_2581105550489395332[14] = 0;
   out_2581105550489395332[15] = 0;
   out_2581105550489395332[16] = 0;
   out_2581105550489395332[17] = 0;
   out_2581105550489395332[18] = 0;
   out_2581105550489395332[19] = 0;
   out_2581105550489395332[20] = 0;
   out_2581105550489395332[21] = 0;
   out_2581105550489395332[22] = 0;
   out_2581105550489395332[23] = 1;
   out_2581105550489395332[24] = 0;
   out_2581105550489395332[25] = 0;
   out_2581105550489395332[26] = 0;
   out_2581105550489395332[27] = 0;
   out_2581105550489395332[28] = 0;
   out_2581105550489395332[29] = 0;
   out_2581105550489395332[30] = 0;
   out_2581105550489395332[31] = 0;
   out_2581105550489395332[32] = 0;
   out_2581105550489395332[33] = 0;
   out_2581105550489395332[34] = 0;
   out_2581105550489395332[35] = 0;
   out_2581105550489395332[36] = 0;
   out_2581105550489395332[37] = 0;
   out_2581105550489395332[38] = 0;
   out_2581105550489395332[39] = 0;
   out_2581105550489395332[40] = 0;
   out_2581105550489395332[41] = 0;
   out_2581105550489395332[42] = 0;
   out_2581105550489395332[43] = 0;
   out_2581105550489395332[44] = 0;
   out_2581105550489395332[45] = 0;
   out_2581105550489395332[46] = 1;
   out_2581105550489395332[47] = 0;
   out_2581105550489395332[48] = 0;
   out_2581105550489395332[49] = 0;
   out_2581105550489395332[50] = 0;
   out_2581105550489395332[51] = 0;
   out_2581105550489395332[52] = 0;
   out_2581105550489395332[53] = 0;
   out_2581105550489395332[54] = 0;
   out_2581105550489395332[55] = 0;
   out_2581105550489395332[56] = 0;
   out_2581105550489395332[57] = 0;
   out_2581105550489395332[58] = 0;
   out_2581105550489395332[59] = 0;
   out_2581105550489395332[60] = 0;
   out_2581105550489395332[61] = 0;
   out_2581105550489395332[62] = 0;
   out_2581105550489395332[63] = 0;
   out_2581105550489395332[64] = 0;
   out_2581105550489395332[65] = 0;
}
void h_35(double *state, double *unused, double *out_8840753699187684762) {
   out_8840753699187684762[0] = state[7];
   out_8840753699187684762[1] = state[8];
   out_8840753699187684762[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5326668582814409041) {
   out_5326668582814409041[0] = 0;
   out_5326668582814409041[1] = 0;
   out_5326668582814409041[2] = 0;
   out_5326668582814409041[3] = 0;
   out_5326668582814409041[4] = 0;
   out_5326668582814409041[5] = 0;
   out_5326668582814409041[6] = 0;
   out_5326668582814409041[7] = 1;
   out_5326668582814409041[8] = 0;
   out_5326668582814409041[9] = 0;
   out_5326668582814409041[10] = 0;
   out_5326668582814409041[11] = 0;
   out_5326668582814409041[12] = 0;
   out_5326668582814409041[13] = 0;
   out_5326668582814409041[14] = 0;
   out_5326668582814409041[15] = 0;
   out_5326668582814409041[16] = 0;
   out_5326668582814409041[17] = 0;
   out_5326668582814409041[18] = 0;
   out_5326668582814409041[19] = 0;
   out_5326668582814409041[20] = 0;
   out_5326668582814409041[21] = 0;
   out_5326668582814409041[22] = 0;
   out_5326668582814409041[23] = 0;
   out_5326668582814409041[24] = 0;
   out_5326668582814409041[25] = 0;
   out_5326668582814409041[26] = 0;
   out_5326668582814409041[27] = 0;
   out_5326668582814409041[28] = 0;
   out_5326668582814409041[29] = 0;
   out_5326668582814409041[30] = 1;
   out_5326668582814409041[31] = 0;
   out_5326668582814409041[32] = 0;
   out_5326668582814409041[33] = 0;
   out_5326668582814409041[34] = 0;
   out_5326668582814409041[35] = 0;
   out_5326668582814409041[36] = 0;
   out_5326668582814409041[37] = 0;
   out_5326668582814409041[38] = 0;
   out_5326668582814409041[39] = 0;
   out_5326668582814409041[40] = 0;
   out_5326668582814409041[41] = 0;
   out_5326668582814409041[42] = 0;
   out_5326668582814409041[43] = 0;
   out_5326668582814409041[44] = 0;
   out_5326668582814409041[45] = 0;
   out_5326668582814409041[46] = 0;
   out_5326668582814409041[47] = 0;
   out_5326668582814409041[48] = 0;
   out_5326668582814409041[49] = 0;
   out_5326668582814409041[50] = 0;
   out_5326668582814409041[51] = 0;
   out_5326668582814409041[52] = 0;
   out_5326668582814409041[53] = 1;
   out_5326668582814409041[54] = 0;
   out_5326668582814409041[55] = 0;
   out_5326668582814409041[56] = 0;
   out_5326668582814409041[57] = 0;
   out_5326668582814409041[58] = 0;
   out_5326668582814409041[59] = 0;
   out_5326668582814409041[60] = 0;
   out_5326668582814409041[61] = 0;
   out_5326668582814409041[62] = 0;
   out_5326668582814409041[63] = 0;
   out_5326668582814409041[64] = 0;
   out_5326668582814409041[65] = 0;
}
void h_32(double *state, double *unused, double *out_7655211720868577238) {
   out_7655211720868577238[0] = state[3];
   out_7655211720868577238[1] = state[4];
   out_7655211720868577238[2] = state[5];
   out_7655211720868577238[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1588195920879707315) {
   out_1588195920879707315[0] = 0;
   out_1588195920879707315[1] = 0;
   out_1588195920879707315[2] = 0;
   out_1588195920879707315[3] = 1;
   out_1588195920879707315[4] = 0;
   out_1588195920879707315[5] = 0;
   out_1588195920879707315[6] = 0;
   out_1588195920879707315[7] = 0;
   out_1588195920879707315[8] = 0;
   out_1588195920879707315[9] = 0;
   out_1588195920879707315[10] = 0;
   out_1588195920879707315[11] = 0;
   out_1588195920879707315[12] = 0;
   out_1588195920879707315[13] = 0;
   out_1588195920879707315[14] = 0;
   out_1588195920879707315[15] = 0;
   out_1588195920879707315[16] = 0;
   out_1588195920879707315[17] = 0;
   out_1588195920879707315[18] = 0;
   out_1588195920879707315[19] = 0;
   out_1588195920879707315[20] = 0;
   out_1588195920879707315[21] = 0;
   out_1588195920879707315[22] = 0;
   out_1588195920879707315[23] = 0;
   out_1588195920879707315[24] = 0;
   out_1588195920879707315[25] = 0;
   out_1588195920879707315[26] = 1;
   out_1588195920879707315[27] = 0;
   out_1588195920879707315[28] = 0;
   out_1588195920879707315[29] = 0;
   out_1588195920879707315[30] = 0;
   out_1588195920879707315[31] = 0;
   out_1588195920879707315[32] = 0;
   out_1588195920879707315[33] = 0;
   out_1588195920879707315[34] = 0;
   out_1588195920879707315[35] = 0;
   out_1588195920879707315[36] = 0;
   out_1588195920879707315[37] = 0;
   out_1588195920879707315[38] = 0;
   out_1588195920879707315[39] = 0;
   out_1588195920879707315[40] = 0;
   out_1588195920879707315[41] = 0;
   out_1588195920879707315[42] = 0;
   out_1588195920879707315[43] = 0;
   out_1588195920879707315[44] = 0;
   out_1588195920879707315[45] = 0;
   out_1588195920879707315[46] = 0;
   out_1588195920879707315[47] = 0;
   out_1588195920879707315[48] = 0;
   out_1588195920879707315[49] = 1;
   out_1588195920879707315[50] = 0;
   out_1588195920879707315[51] = 0;
   out_1588195920879707315[52] = 0;
   out_1588195920879707315[53] = 0;
   out_1588195920879707315[54] = 0;
   out_1588195920879707315[55] = 0;
   out_1588195920879707315[56] = 0;
   out_1588195920879707315[57] = 0;
   out_1588195920879707315[58] = 0;
   out_1588195920879707315[59] = 0;
   out_1588195920879707315[60] = 0;
   out_1588195920879707315[61] = 0;
   out_1588195920879707315[62] = 0;
   out_1588195920879707315[63] = 0;
   out_1588195920879707315[64] = 0;
   out_1588195920879707315[65] = 0;
   out_1588195920879707315[66] = 0;
   out_1588195920879707315[67] = 0;
   out_1588195920879707315[68] = 0;
   out_1588195920879707315[69] = 0;
   out_1588195920879707315[70] = 0;
   out_1588195920879707315[71] = 0;
   out_1588195920879707315[72] = 1;
   out_1588195920879707315[73] = 0;
   out_1588195920879707315[74] = 0;
   out_1588195920879707315[75] = 0;
   out_1588195920879707315[76] = 0;
   out_1588195920879707315[77] = 0;
   out_1588195920879707315[78] = 0;
   out_1588195920879707315[79] = 0;
   out_1588195920879707315[80] = 0;
   out_1588195920879707315[81] = 0;
   out_1588195920879707315[82] = 0;
   out_1588195920879707315[83] = 0;
   out_1588195920879707315[84] = 0;
   out_1588195920879707315[85] = 0;
   out_1588195920879707315[86] = 0;
   out_1588195920879707315[87] = 0;
}
void h_13(double *state, double *unused, double *out_7456432172034262476) {
   out_7456432172034262476[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7456432172034262476[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7456432172034262476[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1633618319572082820) {
   out_1633618319572082820[0] = 0;
   out_1633618319572082820[1] = 0;
   out_1633618319572082820[2] = 0;
   out_1633618319572082820[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1633618319572082820[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1633618319572082820[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1633618319572082820[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1633618319572082820[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1633618319572082820[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1633618319572082820[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1633618319572082820[10] = 0;
   out_1633618319572082820[11] = 0;
   out_1633618319572082820[12] = 0;
   out_1633618319572082820[13] = 0;
   out_1633618319572082820[14] = 0;
   out_1633618319572082820[15] = 0;
   out_1633618319572082820[16] = 0;
   out_1633618319572082820[17] = 0;
   out_1633618319572082820[18] = 0;
   out_1633618319572082820[19] = 0;
   out_1633618319572082820[20] = 0;
   out_1633618319572082820[21] = 0;
   out_1633618319572082820[22] = 0;
   out_1633618319572082820[23] = 0;
   out_1633618319572082820[24] = 0;
   out_1633618319572082820[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1633618319572082820[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1633618319572082820[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1633618319572082820[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1633618319572082820[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1633618319572082820[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1633618319572082820[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1633618319572082820[32] = 0;
   out_1633618319572082820[33] = 0;
   out_1633618319572082820[34] = 0;
   out_1633618319572082820[35] = 0;
   out_1633618319572082820[36] = 0;
   out_1633618319572082820[37] = 0;
   out_1633618319572082820[38] = 0;
   out_1633618319572082820[39] = 0;
   out_1633618319572082820[40] = 0;
   out_1633618319572082820[41] = 0;
   out_1633618319572082820[42] = 0;
   out_1633618319572082820[43] = 0;
   out_1633618319572082820[44] = 0;
   out_1633618319572082820[45] = 0;
   out_1633618319572082820[46] = 0;
   out_1633618319572082820[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1633618319572082820[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1633618319572082820[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1633618319572082820[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1633618319572082820[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1633618319572082820[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1633618319572082820[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1633618319572082820[54] = 0;
   out_1633618319572082820[55] = 0;
   out_1633618319572082820[56] = 0;
   out_1633618319572082820[57] = 0;
   out_1633618319572082820[58] = 0;
   out_1633618319572082820[59] = 0;
   out_1633618319572082820[60] = 0;
   out_1633618319572082820[61] = 0;
   out_1633618319572082820[62] = 0;
   out_1633618319572082820[63] = 0;
   out_1633618319572082820[64] = 0;
   out_1633618319572082820[65] = 0;
}
void h_14(double *state, double *unused, double *out_844199080084644077) {
   out_844199080084644077[0] = state[10];
   out_844199080084644077[1] = state[11];
   out_844199080084644077[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2197161210912975818) {
   out_2197161210912975818[0] = 0;
   out_2197161210912975818[1] = 0;
   out_2197161210912975818[2] = 0;
   out_2197161210912975818[3] = 0;
   out_2197161210912975818[4] = 0;
   out_2197161210912975818[5] = 0;
   out_2197161210912975818[6] = 0;
   out_2197161210912975818[7] = 0;
   out_2197161210912975818[8] = 0;
   out_2197161210912975818[9] = 0;
   out_2197161210912975818[10] = 1;
   out_2197161210912975818[11] = 0;
   out_2197161210912975818[12] = 0;
   out_2197161210912975818[13] = 0;
   out_2197161210912975818[14] = 0;
   out_2197161210912975818[15] = 0;
   out_2197161210912975818[16] = 0;
   out_2197161210912975818[17] = 0;
   out_2197161210912975818[18] = 0;
   out_2197161210912975818[19] = 0;
   out_2197161210912975818[20] = 0;
   out_2197161210912975818[21] = 0;
   out_2197161210912975818[22] = 0;
   out_2197161210912975818[23] = 0;
   out_2197161210912975818[24] = 0;
   out_2197161210912975818[25] = 0;
   out_2197161210912975818[26] = 0;
   out_2197161210912975818[27] = 0;
   out_2197161210912975818[28] = 0;
   out_2197161210912975818[29] = 0;
   out_2197161210912975818[30] = 0;
   out_2197161210912975818[31] = 0;
   out_2197161210912975818[32] = 0;
   out_2197161210912975818[33] = 1;
   out_2197161210912975818[34] = 0;
   out_2197161210912975818[35] = 0;
   out_2197161210912975818[36] = 0;
   out_2197161210912975818[37] = 0;
   out_2197161210912975818[38] = 0;
   out_2197161210912975818[39] = 0;
   out_2197161210912975818[40] = 0;
   out_2197161210912975818[41] = 0;
   out_2197161210912975818[42] = 0;
   out_2197161210912975818[43] = 0;
   out_2197161210912975818[44] = 0;
   out_2197161210912975818[45] = 0;
   out_2197161210912975818[46] = 0;
   out_2197161210912975818[47] = 0;
   out_2197161210912975818[48] = 0;
   out_2197161210912975818[49] = 0;
   out_2197161210912975818[50] = 0;
   out_2197161210912975818[51] = 0;
   out_2197161210912975818[52] = 0;
   out_2197161210912975818[53] = 0;
   out_2197161210912975818[54] = 0;
   out_2197161210912975818[55] = 0;
   out_2197161210912975818[56] = 1;
   out_2197161210912975818[57] = 0;
   out_2197161210912975818[58] = 0;
   out_2197161210912975818[59] = 0;
   out_2197161210912975818[60] = 0;
   out_2197161210912975818[61] = 0;
   out_2197161210912975818[62] = 0;
   out_2197161210912975818[63] = 0;
   out_2197161210912975818[64] = 0;
   out_2197161210912975818[65] = 0;
}
void h_33(double *state, double *unused, double *out_8731060726310887016) {
   out_8731060726310887016[0] = state[16];
   out_8731060726310887016[1] = state[17];
   out_8731060726310887016[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8477225587453266645) {
   out_8477225587453266645[0] = 0;
   out_8477225587453266645[1] = 0;
   out_8477225587453266645[2] = 0;
   out_8477225587453266645[3] = 0;
   out_8477225587453266645[4] = 0;
   out_8477225587453266645[5] = 0;
   out_8477225587453266645[6] = 0;
   out_8477225587453266645[7] = 0;
   out_8477225587453266645[8] = 0;
   out_8477225587453266645[9] = 0;
   out_8477225587453266645[10] = 0;
   out_8477225587453266645[11] = 0;
   out_8477225587453266645[12] = 0;
   out_8477225587453266645[13] = 0;
   out_8477225587453266645[14] = 0;
   out_8477225587453266645[15] = 0;
   out_8477225587453266645[16] = 1;
   out_8477225587453266645[17] = 0;
   out_8477225587453266645[18] = 0;
   out_8477225587453266645[19] = 0;
   out_8477225587453266645[20] = 0;
   out_8477225587453266645[21] = 0;
   out_8477225587453266645[22] = 0;
   out_8477225587453266645[23] = 0;
   out_8477225587453266645[24] = 0;
   out_8477225587453266645[25] = 0;
   out_8477225587453266645[26] = 0;
   out_8477225587453266645[27] = 0;
   out_8477225587453266645[28] = 0;
   out_8477225587453266645[29] = 0;
   out_8477225587453266645[30] = 0;
   out_8477225587453266645[31] = 0;
   out_8477225587453266645[32] = 0;
   out_8477225587453266645[33] = 0;
   out_8477225587453266645[34] = 0;
   out_8477225587453266645[35] = 0;
   out_8477225587453266645[36] = 0;
   out_8477225587453266645[37] = 0;
   out_8477225587453266645[38] = 0;
   out_8477225587453266645[39] = 1;
   out_8477225587453266645[40] = 0;
   out_8477225587453266645[41] = 0;
   out_8477225587453266645[42] = 0;
   out_8477225587453266645[43] = 0;
   out_8477225587453266645[44] = 0;
   out_8477225587453266645[45] = 0;
   out_8477225587453266645[46] = 0;
   out_8477225587453266645[47] = 0;
   out_8477225587453266645[48] = 0;
   out_8477225587453266645[49] = 0;
   out_8477225587453266645[50] = 0;
   out_8477225587453266645[51] = 0;
   out_8477225587453266645[52] = 0;
   out_8477225587453266645[53] = 0;
   out_8477225587453266645[54] = 0;
   out_8477225587453266645[55] = 0;
   out_8477225587453266645[56] = 0;
   out_8477225587453266645[57] = 0;
   out_8477225587453266645[58] = 0;
   out_8477225587453266645[59] = 0;
   out_8477225587453266645[60] = 0;
   out_8477225587453266645[61] = 0;
   out_8477225587453266645[62] = 1;
   out_8477225587453266645[63] = 0;
   out_8477225587453266645[64] = 0;
   out_8477225587453266645[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2807864690648877240) {
  H(in_vec, out_2807864690648877240);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3029380303421640733) {
  err_fun(nom_x, delta_x, out_3029380303421640733);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1174517407583881423) {
  inv_err_fun(nom_x, true_x, out_1174517407583881423);
}
void live_H_mod_fun(double *state, double *out_2053258554012563662) {
  H_mod_fun(state, out_2053258554012563662);
}
void live_f_fun(double *state, double dt, double *out_516476738374678989) {
  f_fun(state,  dt, out_516476738374678989);
}
void live_F_fun(double *state, double dt, double *out_8024826052511320476) {
  F_fun(state,  dt, out_8024826052511320476);
}
void live_h_4(double *state, double *unused, double *out_6723843180459930878) {
  h_4(state, unused, out_6723843180459930878);
}
void live_H_4(double *state, double *unused, double *out_1960006525441801665) {
  H_4(state, unused, out_1960006525441801665);
}
void live_h_9(double *state, double *unused, double *out_844199080084644077) {
  h_9(state, unused, out_844199080084644077);
}
void live_H_9(double *state, double *unused, double *out_2197161210912975818) {
  H_9(state, unused, out_2197161210912975818);
}
void live_h_10(double *state, double *unused, double *out_7855237628529450047) {
  h_10(state, unused, out_7855237628529450047);
}
void live_H_10(double *state, double *unused, double *out_5799196377413634969) {
  H_10(state, unused, out_5799196377413634969);
}
void live_h_12(double *state, double *unused, double *out_3409325819001084101) {
  h_12(state, unused, out_3409325819001084101);
}
void live_H_12(double *state, double *unused, double *out_2581105550489395332) {
  H_12(state, unused, out_2581105550489395332);
}
void live_h_35(double *state, double *unused, double *out_8840753699187684762) {
  h_35(state, unused, out_8840753699187684762);
}
void live_H_35(double *state, double *unused, double *out_5326668582814409041) {
  H_35(state, unused, out_5326668582814409041);
}
void live_h_32(double *state, double *unused, double *out_7655211720868577238) {
  h_32(state, unused, out_7655211720868577238);
}
void live_H_32(double *state, double *unused, double *out_1588195920879707315) {
  H_32(state, unused, out_1588195920879707315);
}
void live_h_13(double *state, double *unused, double *out_7456432172034262476) {
  h_13(state, unused, out_7456432172034262476);
}
void live_H_13(double *state, double *unused, double *out_1633618319572082820) {
  H_13(state, unused, out_1633618319572082820);
}
void live_h_14(double *state, double *unused, double *out_844199080084644077) {
  h_14(state, unused, out_844199080084644077);
}
void live_H_14(double *state, double *unused, double *out_2197161210912975818) {
  H_14(state, unused, out_2197161210912975818);
}
void live_h_33(double *state, double *unused, double *out_8731060726310887016) {
  h_33(state, unused, out_8731060726310887016);
}
void live_H_33(double *state, double *unused, double *out_8477225587453266645) {
  H_33(state, unused, out_8477225587453266645);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
