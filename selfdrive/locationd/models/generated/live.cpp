#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5306600351938922877) {
   out_5306600351938922877[0] = 0;
   out_5306600351938922877[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5306600351938922877[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5306600351938922877[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5306600351938922877[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5306600351938922877[5] = -sin(in_vec[1]);
   out_5306600351938922877[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5306600351938922877[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5306600351938922877[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5306600351938922877[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5306600351938922877[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5306600351938922877[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5306600351938922877[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5306600351938922877[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5306600351938922877[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5306600351938922877[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5306600351938922877[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5306600351938922877[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_493132114022433796) {
   out_493132114022433796[0] = delta_x[0] + nom_x[0];
   out_493132114022433796[1] = delta_x[1] + nom_x[1];
   out_493132114022433796[2] = delta_x[2] + nom_x[2];
   out_493132114022433796[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_493132114022433796[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_493132114022433796[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_493132114022433796[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_493132114022433796[7] = delta_x[6] + nom_x[7];
   out_493132114022433796[8] = delta_x[7] + nom_x[8];
   out_493132114022433796[9] = delta_x[8] + nom_x[9];
   out_493132114022433796[10] = delta_x[9] + nom_x[10];
   out_493132114022433796[11] = delta_x[10] + nom_x[11];
   out_493132114022433796[12] = delta_x[11] + nom_x[12];
   out_493132114022433796[13] = delta_x[12] + nom_x[13];
   out_493132114022433796[14] = delta_x[13] + nom_x[14];
   out_493132114022433796[15] = delta_x[14] + nom_x[15];
   out_493132114022433796[16] = delta_x[15] + nom_x[16];
   out_493132114022433796[17] = delta_x[16] + nom_x[17];
   out_493132114022433796[18] = delta_x[17] + nom_x[18];
   out_493132114022433796[19] = delta_x[18] + nom_x[19];
   out_493132114022433796[20] = delta_x[19] + nom_x[20];
   out_493132114022433796[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_13914812565757194) {
   out_13914812565757194[0] = -nom_x[0] + true_x[0];
   out_13914812565757194[1] = -nom_x[1] + true_x[1];
   out_13914812565757194[2] = -nom_x[2] + true_x[2];
   out_13914812565757194[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_13914812565757194[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_13914812565757194[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_13914812565757194[6] = -nom_x[7] + true_x[7];
   out_13914812565757194[7] = -nom_x[8] + true_x[8];
   out_13914812565757194[8] = -nom_x[9] + true_x[9];
   out_13914812565757194[9] = -nom_x[10] + true_x[10];
   out_13914812565757194[10] = -nom_x[11] + true_x[11];
   out_13914812565757194[11] = -nom_x[12] + true_x[12];
   out_13914812565757194[12] = -nom_x[13] + true_x[13];
   out_13914812565757194[13] = -nom_x[14] + true_x[14];
   out_13914812565757194[14] = -nom_x[15] + true_x[15];
   out_13914812565757194[15] = -nom_x[16] + true_x[16];
   out_13914812565757194[16] = -nom_x[17] + true_x[17];
   out_13914812565757194[17] = -nom_x[18] + true_x[18];
   out_13914812565757194[18] = -nom_x[19] + true_x[19];
   out_13914812565757194[19] = -nom_x[20] + true_x[20];
   out_13914812565757194[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6311765979948340433) {
   out_6311765979948340433[0] = 1.0;
   out_6311765979948340433[1] = 0;
   out_6311765979948340433[2] = 0;
   out_6311765979948340433[3] = 0;
   out_6311765979948340433[4] = 0;
   out_6311765979948340433[5] = 0;
   out_6311765979948340433[6] = 0;
   out_6311765979948340433[7] = 0;
   out_6311765979948340433[8] = 0;
   out_6311765979948340433[9] = 0;
   out_6311765979948340433[10] = 0;
   out_6311765979948340433[11] = 0;
   out_6311765979948340433[12] = 0;
   out_6311765979948340433[13] = 0;
   out_6311765979948340433[14] = 0;
   out_6311765979948340433[15] = 0;
   out_6311765979948340433[16] = 0;
   out_6311765979948340433[17] = 0;
   out_6311765979948340433[18] = 0;
   out_6311765979948340433[19] = 0;
   out_6311765979948340433[20] = 0;
   out_6311765979948340433[21] = 0;
   out_6311765979948340433[22] = 1.0;
   out_6311765979948340433[23] = 0;
   out_6311765979948340433[24] = 0;
   out_6311765979948340433[25] = 0;
   out_6311765979948340433[26] = 0;
   out_6311765979948340433[27] = 0;
   out_6311765979948340433[28] = 0;
   out_6311765979948340433[29] = 0;
   out_6311765979948340433[30] = 0;
   out_6311765979948340433[31] = 0;
   out_6311765979948340433[32] = 0;
   out_6311765979948340433[33] = 0;
   out_6311765979948340433[34] = 0;
   out_6311765979948340433[35] = 0;
   out_6311765979948340433[36] = 0;
   out_6311765979948340433[37] = 0;
   out_6311765979948340433[38] = 0;
   out_6311765979948340433[39] = 0;
   out_6311765979948340433[40] = 0;
   out_6311765979948340433[41] = 0;
   out_6311765979948340433[42] = 0;
   out_6311765979948340433[43] = 0;
   out_6311765979948340433[44] = 1.0;
   out_6311765979948340433[45] = 0;
   out_6311765979948340433[46] = 0;
   out_6311765979948340433[47] = 0;
   out_6311765979948340433[48] = 0;
   out_6311765979948340433[49] = 0;
   out_6311765979948340433[50] = 0;
   out_6311765979948340433[51] = 0;
   out_6311765979948340433[52] = 0;
   out_6311765979948340433[53] = 0;
   out_6311765979948340433[54] = 0;
   out_6311765979948340433[55] = 0;
   out_6311765979948340433[56] = 0;
   out_6311765979948340433[57] = 0;
   out_6311765979948340433[58] = 0;
   out_6311765979948340433[59] = 0;
   out_6311765979948340433[60] = 0;
   out_6311765979948340433[61] = 0;
   out_6311765979948340433[62] = 0;
   out_6311765979948340433[63] = 0;
   out_6311765979948340433[64] = 0;
   out_6311765979948340433[65] = 0;
   out_6311765979948340433[66] = -0.5*state[4];
   out_6311765979948340433[67] = -0.5*state[5];
   out_6311765979948340433[68] = -0.5*state[6];
   out_6311765979948340433[69] = 0;
   out_6311765979948340433[70] = 0;
   out_6311765979948340433[71] = 0;
   out_6311765979948340433[72] = 0;
   out_6311765979948340433[73] = 0;
   out_6311765979948340433[74] = 0;
   out_6311765979948340433[75] = 0;
   out_6311765979948340433[76] = 0;
   out_6311765979948340433[77] = 0;
   out_6311765979948340433[78] = 0;
   out_6311765979948340433[79] = 0;
   out_6311765979948340433[80] = 0;
   out_6311765979948340433[81] = 0;
   out_6311765979948340433[82] = 0;
   out_6311765979948340433[83] = 0;
   out_6311765979948340433[84] = 0;
   out_6311765979948340433[85] = 0;
   out_6311765979948340433[86] = 0;
   out_6311765979948340433[87] = 0.5*state[3];
   out_6311765979948340433[88] = 0.5*state[6];
   out_6311765979948340433[89] = -0.5*state[5];
   out_6311765979948340433[90] = 0;
   out_6311765979948340433[91] = 0;
   out_6311765979948340433[92] = 0;
   out_6311765979948340433[93] = 0;
   out_6311765979948340433[94] = 0;
   out_6311765979948340433[95] = 0;
   out_6311765979948340433[96] = 0;
   out_6311765979948340433[97] = 0;
   out_6311765979948340433[98] = 0;
   out_6311765979948340433[99] = 0;
   out_6311765979948340433[100] = 0;
   out_6311765979948340433[101] = 0;
   out_6311765979948340433[102] = 0;
   out_6311765979948340433[103] = 0;
   out_6311765979948340433[104] = 0;
   out_6311765979948340433[105] = 0;
   out_6311765979948340433[106] = 0;
   out_6311765979948340433[107] = 0;
   out_6311765979948340433[108] = -0.5*state[6];
   out_6311765979948340433[109] = 0.5*state[3];
   out_6311765979948340433[110] = 0.5*state[4];
   out_6311765979948340433[111] = 0;
   out_6311765979948340433[112] = 0;
   out_6311765979948340433[113] = 0;
   out_6311765979948340433[114] = 0;
   out_6311765979948340433[115] = 0;
   out_6311765979948340433[116] = 0;
   out_6311765979948340433[117] = 0;
   out_6311765979948340433[118] = 0;
   out_6311765979948340433[119] = 0;
   out_6311765979948340433[120] = 0;
   out_6311765979948340433[121] = 0;
   out_6311765979948340433[122] = 0;
   out_6311765979948340433[123] = 0;
   out_6311765979948340433[124] = 0;
   out_6311765979948340433[125] = 0;
   out_6311765979948340433[126] = 0;
   out_6311765979948340433[127] = 0;
   out_6311765979948340433[128] = 0;
   out_6311765979948340433[129] = 0.5*state[5];
   out_6311765979948340433[130] = -0.5*state[4];
   out_6311765979948340433[131] = 0.5*state[3];
   out_6311765979948340433[132] = 0;
   out_6311765979948340433[133] = 0;
   out_6311765979948340433[134] = 0;
   out_6311765979948340433[135] = 0;
   out_6311765979948340433[136] = 0;
   out_6311765979948340433[137] = 0;
   out_6311765979948340433[138] = 0;
   out_6311765979948340433[139] = 0;
   out_6311765979948340433[140] = 0;
   out_6311765979948340433[141] = 0;
   out_6311765979948340433[142] = 0;
   out_6311765979948340433[143] = 0;
   out_6311765979948340433[144] = 0;
   out_6311765979948340433[145] = 0;
   out_6311765979948340433[146] = 0;
   out_6311765979948340433[147] = 0;
   out_6311765979948340433[148] = 0;
   out_6311765979948340433[149] = 0;
   out_6311765979948340433[150] = 0;
   out_6311765979948340433[151] = 0;
   out_6311765979948340433[152] = 0;
   out_6311765979948340433[153] = 1.0;
   out_6311765979948340433[154] = 0;
   out_6311765979948340433[155] = 0;
   out_6311765979948340433[156] = 0;
   out_6311765979948340433[157] = 0;
   out_6311765979948340433[158] = 0;
   out_6311765979948340433[159] = 0;
   out_6311765979948340433[160] = 0;
   out_6311765979948340433[161] = 0;
   out_6311765979948340433[162] = 0;
   out_6311765979948340433[163] = 0;
   out_6311765979948340433[164] = 0;
   out_6311765979948340433[165] = 0;
   out_6311765979948340433[166] = 0;
   out_6311765979948340433[167] = 0;
   out_6311765979948340433[168] = 0;
   out_6311765979948340433[169] = 0;
   out_6311765979948340433[170] = 0;
   out_6311765979948340433[171] = 0;
   out_6311765979948340433[172] = 0;
   out_6311765979948340433[173] = 0;
   out_6311765979948340433[174] = 0;
   out_6311765979948340433[175] = 1.0;
   out_6311765979948340433[176] = 0;
   out_6311765979948340433[177] = 0;
   out_6311765979948340433[178] = 0;
   out_6311765979948340433[179] = 0;
   out_6311765979948340433[180] = 0;
   out_6311765979948340433[181] = 0;
   out_6311765979948340433[182] = 0;
   out_6311765979948340433[183] = 0;
   out_6311765979948340433[184] = 0;
   out_6311765979948340433[185] = 0;
   out_6311765979948340433[186] = 0;
   out_6311765979948340433[187] = 0;
   out_6311765979948340433[188] = 0;
   out_6311765979948340433[189] = 0;
   out_6311765979948340433[190] = 0;
   out_6311765979948340433[191] = 0;
   out_6311765979948340433[192] = 0;
   out_6311765979948340433[193] = 0;
   out_6311765979948340433[194] = 0;
   out_6311765979948340433[195] = 0;
   out_6311765979948340433[196] = 0;
   out_6311765979948340433[197] = 1.0;
   out_6311765979948340433[198] = 0;
   out_6311765979948340433[199] = 0;
   out_6311765979948340433[200] = 0;
   out_6311765979948340433[201] = 0;
   out_6311765979948340433[202] = 0;
   out_6311765979948340433[203] = 0;
   out_6311765979948340433[204] = 0;
   out_6311765979948340433[205] = 0;
   out_6311765979948340433[206] = 0;
   out_6311765979948340433[207] = 0;
   out_6311765979948340433[208] = 0;
   out_6311765979948340433[209] = 0;
   out_6311765979948340433[210] = 0;
   out_6311765979948340433[211] = 0;
   out_6311765979948340433[212] = 0;
   out_6311765979948340433[213] = 0;
   out_6311765979948340433[214] = 0;
   out_6311765979948340433[215] = 0;
   out_6311765979948340433[216] = 0;
   out_6311765979948340433[217] = 0;
   out_6311765979948340433[218] = 0;
   out_6311765979948340433[219] = 1.0;
   out_6311765979948340433[220] = 0;
   out_6311765979948340433[221] = 0;
   out_6311765979948340433[222] = 0;
   out_6311765979948340433[223] = 0;
   out_6311765979948340433[224] = 0;
   out_6311765979948340433[225] = 0;
   out_6311765979948340433[226] = 0;
   out_6311765979948340433[227] = 0;
   out_6311765979948340433[228] = 0;
   out_6311765979948340433[229] = 0;
   out_6311765979948340433[230] = 0;
   out_6311765979948340433[231] = 0;
   out_6311765979948340433[232] = 0;
   out_6311765979948340433[233] = 0;
   out_6311765979948340433[234] = 0;
   out_6311765979948340433[235] = 0;
   out_6311765979948340433[236] = 0;
   out_6311765979948340433[237] = 0;
   out_6311765979948340433[238] = 0;
   out_6311765979948340433[239] = 0;
   out_6311765979948340433[240] = 0;
   out_6311765979948340433[241] = 1.0;
   out_6311765979948340433[242] = 0;
   out_6311765979948340433[243] = 0;
   out_6311765979948340433[244] = 0;
   out_6311765979948340433[245] = 0;
   out_6311765979948340433[246] = 0;
   out_6311765979948340433[247] = 0;
   out_6311765979948340433[248] = 0;
   out_6311765979948340433[249] = 0;
   out_6311765979948340433[250] = 0;
   out_6311765979948340433[251] = 0;
   out_6311765979948340433[252] = 0;
   out_6311765979948340433[253] = 0;
   out_6311765979948340433[254] = 0;
   out_6311765979948340433[255] = 0;
   out_6311765979948340433[256] = 0;
   out_6311765979948340433[257] = 0;
   out_6311765979948340433[258] = 0;
   out_6311765979948340433[259] = 0;
   out_6311765979948340433[260] = 0;
   out_6311765979948340433[261] = 0;
   out_6311765979948340433[262] = 0;
   out_6311765979948340433[263] = 1.0;
   out_6311765979948340433[264] = 0;
   out_6311765979948340433[265] = 0;
   out_6311765979948340433[266] = 0;
   out_6311765979948340433[267] = 0;
   out_6311765979948340433[268] = 0;
   out_6311765979948340433[269] = 0;
   out_6311765979948340433[270] = 0;
   out_6311765979948340433[271] = 0;
   out_6311765979948340433[272] = 0;
   out_6311765979948340433[273] = 0;
   out_6311765979948340433[274] = 0;
   out_6311765979948340433[275] = 0;
   out_6311765979948340433[276] = 0;
   out_6311765979948340433[277] = 0;
   out_6311765979948340433[278] = 0;
   out_6311765979948340433[279] = 0;
   out_6311765979948340433[280] = 0;
   out_6311765979948340433[281] = 0;
   out_6311765979948340433[282] = 0;
   out_6311765979948340433[283] = 0;
   out_6311765979948340433[284] = 0;
   out_6311765979948340433[285] = 1.0;
   out_6311765979948340433[286] = 0;
   out_6311765979948340433[287] = 0;
   out_6311765979948340433[288] = 0;
   out_6311765979948340433[289] = 0;
   out_6311765979948340433[290] = 0;
   out_6311765979948340433[291] = 0;
   out_6311765979948340433[292] = 0;
   out_6311765979948340433[293] = 0;
   out_6311765979948340433[294] = 0;
   out_6311765979948340433[295] = 0;
   out_6311765979948340433[296] = 0;
   out_6311765979948340433[297] = 0;
   out_6311765979948340433[298] = 0;
   out_6311765979948340433[299] = 0;
   out_6311765979948340433[300] = 0;
   out_6311765979948340433[301] = 0;
   out_6311765979948340433[302] = 0;
   out_6311765979948340433[303] = 0;
   out_6311765979948340433[304] = 0;
   out_6311765979948340433[305] = 0;
   out_6311765979948340433[306] = 0;
   out_6311765979948340433[307] = 1.0;
   out_6311765979948340433[308] = 0;
   out_6311765979948340433[309] = 0;
   out_6311765979948340433[310] = 0;
   out_6311765979948340433[311] = 0;
   out_6311765979948340433[312] = 0;
   out_6311765979948340433[313] = 0;
   out_6311765979948340433[314] = 0;
   out_6311765979948340433[315] = 0;
   out_6311765979948340433[316] = 0;
   out_6311765979948340433[317] = 0;
   out_6311765979948340433[318] = 0;
   out_6311765979948340433[319] = 0;
   out_6311765979948340433[320] = 0;
   out_6311765979948340433[321] = 0;
   out_6311765979948340433[322] = 0;
   out_6311765979948340433[323] = 0;
   out_6311765979948340433[324] = 0;
   out_6311765979948340433[325] = 0;
   out_6311765979948340433[326] = 0;
   out_6311765979948340433[327] = 0;
   out_6311765979948340433[328] = 0;
   out_6311765979948340433[329] = 1.0;
   out_6311765979948340433[330] = 0;
   out_6311765979948340433[331] = 0;
   out_6311765979948340433[332] = 0;
   out_6311765979948340433[333] = 0;
   out_6311765979948340433[334] = 0;
   out_6311765979948340433[335] = 0;
   out_6311765979948340433[336] = 0;
   out_6311765979948340433[337] = 0;
   out_6311765979948340433[338] = 0;
   out_6311765979948340433[339] = 0;
   out_6311765979948340433[340] = 0;
   out_6311765979948340433[341] = 0;
   out_6311765979948340433[342] = 0;
   out_6311765979948340433[343] = 0;
   out_6311765979948340433[344] = 0;
   out_6311765979948340433[345] = 0;
   out_6311765979948340433[346] = 0;
   out_6311765979948340433[347] = 0;
   out_6311765979948340433[348] = 0;
   out_6311765979948340433[349] = 0;
   out_6311765979948340433[350] = 0;
   out_6311765979948340433[351] = 1.0;
   out_6311765979948340433[352] = 0;
   out_6311765979948340433[353] = 0;
   out_6311765979948340433[354] = 0;
   out_6311765979948340433[355] = 0;
   out_6311765979948340433[356] = 0;
   out_6311765979948340433[357] = 0;
   out_6311765979948340433[358] = 0;
   out_6311765979948340433[359] = 0;
   out_6311765979948340433[360] = 0;
   out_6311765979948340433[361] = 0;
   out_6311765979948340433[362] = 0;
   out_6311765979948340433[363] = 0;
   out_6311765979948340433[364] = 0;
   out_6311765979948340433[365] = 0;
   out_6311765979948340433[366] = 0;
   out_6311765979948340433[367] = 0;
   out_6311765979948340433[368] = 0;
   out_6311765979948340433[369] = 0;
   out_6311765979948340433[370] = 0;
   out_6311765979948340433[371] = 0;
   out_6311765979948340433[372] = 0;
   out_6311765979948340433[373] = 1.0;
   out_6311765979948340433[374] = 0;
   out_6311765979948340433[375] = 0;
   out_6311765979948340433[376] = 0;
   out_6311765979948340433[377] = 0;
   out_6311765979948340433[378] = 0;
   out_6311765979948340433[379] = 0;
   out_6311765979948340433[380] = 0;
   out_6311765979948340433[381] = 0;
   out_6311765979948340433[382] = 0;
   out_6311765979948340433[383] = 0;
   out_6311765979948340433[384] = 0;
   out_6311765979948340433[385] = 0;
   out_6311765979948340433[386] = 0;
   out_6311765979948340433[387] = 0;
   out_6311765979948340433[388] = 0;
   out_6311765979948340433[389] = 0;
   out_6311765979948340433[390] = 0;
   out_6311765979948340433[391] = 0;
   out_6311765979948340433[392] = 0;
   out_6311765979948340433[393] = 0;
   out_6311765979948340433[394] = 0;
   out_6311765979948340433[395] = 1.0;
   out_6311765979948340433[396] = 0;
   out_6311765979948340433[397] = 0;
   out_6311765979948340433[398] = 0;
   out_6311765979948340433[399] = 0;
   out_6311765979948340433[400] = 0;
   out_6311765979948340433[401] = 0;
   out_6311765979948340433[402] = 0;
   out_6311765979948340433[403] = 0;
   out_6311765979948340433[404] = 0;
   out_6311765979948340433[405] = 0;
   out_6311765979948340433[406] = 0;
   out_6311765979948340433[407] = 0;
   out_6311765979948340433[408] = 0;
   out_6311765979948340433[409] = 0;
   out_6311765979948340433[410] = 0;
   out_6311765979948340433[411] = 0;
   out_6311765979948340433[412] = 0;
   out_6311765979948340433[413] = 0;
   out_6311765979948340433[414] = 0;
   out_6311765979948340433[415] = 0;
   out_6311765979948340433[416] = 0;
   out_6311765979948340433[417] = 1.0;
   out_6311765979948340433[418] = 0;
   out_6311765979948340433[419] = 0;
   out_6311765979948340433[420] = 0;
   out_6311765979948340433[421] = 0;
   out_6311765979948340433[422] = 0;
   out_6311765979948340433[423] = 0;
   out_6311765979948340433[424] = 0;
   out_6311765979948340433[425] = 0;
   out_6311765979948340433[426] = 0;
   out_6311765979948340433[427] = 0;
   out_6311765979948340433[428] = 0;
   out_6311765979948340433[429] = 0;
   out_6311765979948340433[430] = 0;
   out_6311765979948340433[431] = 0;
   out_6311765979948340433[432] = 0;
   out_6311765979948340433[433] = 0;
   out_6311765979948340433[434] = 0;
   out_6311765979948340433[435] = 0;
   out_6311765979948340433[436] = 0;
   out_6311765979948340433[437] = 0;
   out_6311765979948340433[438] = 0;
   out_6311765979948340433[439] = 1.0;
   out_6311765979948340433[440] = 0;
   out_6311765979948340433[441] = 0;
   out_6311765979948340433[442] = 0;
   out_6311765979948340433[443] = 0;
   out_6311765979948340433[444] = 0;
   out_6311765979948340433[445] = 0;
   out_6311765979948340433[446] = 0;
   out_6311765979948340433[447] = 0;
   out_6311765979948340433[448] = 0;
   out_6311765979948340433[449] = 0;
   out_6311765979948340433[450] = 0;
   out_6311765979948340433[451] = 0;
   out_6311765979948340433[452] = 0;
   out_6311765979948340433[453] = 0;
   out_6311765979948340433[454] = 0;
   out_6311765979948340433[455] = 0;
   out_6311765979948340433[456] = 0;
   out_6311765979948340433[457] = 0;
   out_6311765979948340433[458] = 0;
   out_6311765979948340433[459] = 0;
   out_6311765979948340433[460] = 0;
   out_6311765979948340433[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8817043458826378326) {
   out_8817043458826378326[0] = dt*state[7] + state[0];
   out_8817043458826378326[1] = dt*state[8] + state[1];
   out_8817043458826378326[2] = dt*state[9] + state[2];
   out_8817043458826378326[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8817043458826378326[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8817043458826378326[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8817043458826378326[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8817043458826378326[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8817043458826378326[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8817043458826378326[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8817043458826378326[10] = state[10];
   out_8817043458826378326[11] = state[11];
   out_8817043458826378326[12] = state[12];
   out_8817043458826378326[13] = state[13];
   out_8817043458826378326[14] = state[14];
   out_8817043458826378326[15] = state[15];
   out_8817043458826378326[16] = state[16];
   out_8817043458826378326[17] = state[17];
   out_8817043458826378326[18] = state[18];
   out_8817043458826378326[19] = state[19];
   out_8817043458826378326[20] = state[20];
   out_8817043458826378326[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4686700619145198144) {
   out_4686700619145198144[0] = 1;
   out_4686700619145198144[1] = 0;
   out_4686700619145198144[2] = 0;
   out_4686700619145198144[3] = 0;
   out_4686700619145198144[4] = 0;
   out_4686700619145198144[5] = 0;
   out_4686700619145198144[6] = dt;
   out_4686700619145198144[7] = 0;
   out_4686700619145198144[8] = 0;
   out_4686700619145198144[9] = 0;
   out_4686700619145198144[10] = 0;
   out_4686700619145198144[11] = 0;
   out_4686700619145198144[12] = 0;
   out_4686700619145198144[13] = 0;
   out_4686700619145198144[14] = 0;
   out_4686700619145198144[15] = 0;
   out_4686700619145198144[16] = 0;
   out_4686700619145198144[17] = 0;
   out_4686700619145198144[18] = 0;
   out_4686700619145198144[19] = 0;
   out_4686700619145198144[20] = 0;
   out_4686700619145198144[21] = 0;
   out_4686700619145198144[22] = 1;
   out_4686700619145198144[23] = 0;
   out_4686700619145198144[24] = 0;
   out_4686700619145198144[25] = 0;
   out_4686700619145198144[26] = 0;
   out_4686700619145198144[27] = 0;
   out_4686700619145198144[28] = dt;
   out_4686700619145198144[29] = 0;
   out_4686700619145198144[30] = 0;
   out_4686700619145198144[31] = 0;
   out_4686700619145198144[32] = 0;
   out_4686700619145198144[33] = 0;
   out_4686700619145198144[34] = 0;
   out_4686700619145198144[35] = 0;
   out_4686700619145198144[36] = 0;
   out_4686700619145198144[37] = 0;
   out_4686700619145198144[38] = 0;
   out_4686700619145198144[39] = 0;
   out_4686700619145198144[40] = 0;
   out_4686700619145198144[41] = 0;
   out_4686700619145198144[42] = 0;
   out_4686700619145198144[43] = 0;
   out_4686700619145198144[44] = 1;
   out_4686700619145198144[45] = 0;
   out_4686700619145198144[46] = 0;
   out_4686700619145198144[47] = 0;
   out_4686700619145198144[48] = 0;
   out_4686700619145198144[49] = 0;
   out_4686700619145198144[50] = dt;
   out_4686700619145198144[51] = 0;
   out_4686700619145198144[52] = 0;
   out_4686700619145198144[53] = 0;
   out_4686700619145198144[54] = 0;
   out_4686700619145198144[55] = 0;
   out_4686700619145198144[56] = 0;
   out_4686700619145198144[57] = 0;
   out_4686700619145198144[58] = 0;
   out_4686700619145198144[59] = 0;
   out_4686700619145198144[60] = 0;
   out_4686700619145198144[61] = 0;
   out_4686700619145198144[62] = 0;
   out_4686700619145198144[63] = 0;
   out_4686700619145198144[64] = 0;
   out_4686700619145198144[65] = 0;
   out_4686700619145198144[66] = 1;
   out_4686700619145198144[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4686700619145198144[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4686700619145198144[69] = 0;
   out_4686700619145198144[70] = 0;
   out_4686700619145198144[71] = 0;
   out_4686700619145198144[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4686700619145198144[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4686700619145198144[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4686700619145198144[75] = 0;
   out_4686700619145198144[76] = 0;
   out_4686700619145198144[77] = 0;
   out_4686700619145198144[78] = 0;
   out_4686700619145198144[79] = 0;
   out_4686700619145198144[80] = 0;
   out_4686700619145198144[81] = 0;
   out_4686700619145198144[82] = 0;
   out_4686700619145198144[83] = 0;
   out_4686700619145198144[84] = 0;
   out_4686700619145198144[85] = 0;
   out_4686700619145198144[86] = 0;
   out_4686700619145198144[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4686700619145198144[88] = 1;
   out_4686700619145198144[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4686700619145198144[90] = 0;
   out_4686700619145198144[91] = 0;
   out_4686700619145198144[92] = 0;
   out_4686700619145198144[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4686700619145198144[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4686700619145198144[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4686700619145198144[96] = 0;
   out_4686700619145198144[97] = 0;
   out_4686700619145198144[98] = 0;
   out_4686700619145198144[99] = 0;
   out_4686700619145198144[100] = 0;
   out_4686700619145198144[101] = 0;
   out_4686700619145198144[102] = 0;
   out_4686700619145198144[103] = 0;
   out_4686700619145198144[104] = 0;
   out_4686700619145198144[105] = 0;
   out_4686700619145198144[106] = 0;
   out_4686700619145198144[107] = 0;
   out_4686700619145198144[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4686700619145198144[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4686700619145198144[110] = 1;
   out_4686700619145198144[111] = 0;
   out_4686700619145198144[112] = 0;
   out_4686700619145198144[113] = 0;
   out_4686700619145198144[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4686700619145198144[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4686700619145198144[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4686700619145198144[117] = 0;
   out_4686700619145198144[118] = 0;
   out_4686700619145198144[119] = 0;
   out_4686700619145198144[120] = 0;
   out_4686700619145198144[121] = 0;
   out_4686700619145198144[122] = 0;
   out_4686700619145198144[123] = 0;
   out_4686700619145198144[124] = 0;
   out_4686700619145198144[125] = 0;
   out_4686700619145198144[126] = 0;
   out_4686700619145198144[127] = 0;
   out_4686700619145198144[128] = 0;
   out_4686700619145198144[129] = 0;
   out_4686700619145198144[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4686700619145198144[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4686700619145198144[132] = 1;
   out_4686700619145198144[133] = 0;
   out_4686700619145198144[134] = 0;
   out_4686700619145198144[135] = 0;
   out_4686700619145198144[136] = 0;
   out_4686700619145198144[137] = 0;
   out_4686700619145198144[138] = 0;
   out_4686700619145198144[139] = 0;
   out_4686700619145198144[140] = 0;
   out_4686700619145198144[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4686700619145198144[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4686700619145198144[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4686700619145198144[144] = 0;
   out_4686700619145198144[145] = 0;
   out_4686700619145198144[146] = 0;
   out_4686700619145198144[147] = 0;
   out_4686700619145198144[148] = 0;
   out_4686700619145198144[149] = 0;
   out_4686700619145198144[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4686700619145198144[151] = 0;
   out_4686700619145198144[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4686700619145198144[153] = 0;
   out_4686700619145198144[154] = 1;
   out_4686700619145198144[155] = 0;
   out_4686700619145198144[156] = 0;
   out_4686700619145198144[157] = 0;
   out_4686700619145198144[158] = 0;
   out_4686700619145198144[159] = 0;
   out_4686700619145198144[160] = 0;
   out_4686700619145198144[161] = 0;
   out_4686700619145198144[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4686700619145198144[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4686700619145198144[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4686700619145198144[165] = 0;
   out_4686700619145198144[166] = 0;
   out_4686700619145198144[167] = 0;
   out_4686700619145198144[168] = 0;
   out_4686700619145198144[169] = 0;
   out_4686700619145198144[170] = 0;
   out_4686700619145198144[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4686700619145198144[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4686700619145198144[173] = 0;
   out_4686700619145198144[174] = 0;
   out_4686700619145198144[175] = 0;
   out_4686700619145198144[176] = 1;
   out_4686700619145198144[177] = 0;
   out_4686700619145198144[178] = 0;
   out_4686700619145198144[179] = 0;
   out_4686700619145198144[180] = 0;
   out_4686700619145198144[181] = 0;
   out_4686700619145198144[182] = 0;
   out_4686700619145198144[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4686700619145198144[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4686700619145198144[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4686700619145198144[186] = 0;
   out_4686700619145198144[187] = 0;
   out_4686700619145198144[188] = 0;
   out_4686700619145198144[189] = 0;
   out_4686700619145198144[190] = 0;
   out_4686700619145198144[191] = 0;
   out_4686700619145198144[192] = 0;
   out_4686700619145198144[193] = 0;
   out_4686700619145198144[194] = 0;
   out_4686700619145198144[195] = 0;
   out_4686700619145198144[196] = 0;
   out_4686700619145198144[197] = 0;
   out_4686700619145198144[198] = 1;
   out_4686700619145198144[199] = 0;
   out_4686700619145198144[200] = 0;
   out_4686700619145198144[201] = 0;
   out_4686700619145198144[202] = 0;
   out_4686700619145198144[203] = 0;
   out_4686700619145198144[204] = 0;
   out_4686700619145198144[205] = 0;
   out_4686700619145198144[206] = 0;
   out_4686700619145198144[207] = 0;
   out_4686700619145198144[208] = 0;
   out_4686700619145198144[209] = 0;
   out_4686700619145198144[210] = 0;
   out_4686700619145198144[211] = 0;
   out_4686700619145198144[212] = 0;
   out_4686700619145198144[213] = 0;
   out_4686700619145198144[214] = 0;
   out_4686700619145198144[215] = 0;
   out_4686700619145198144[216] = 0;
   out_4686700619145198144[217] = 0;
   out_4686700619145198144[218] = 0;
   out_4686700619145198144[219] = 0;
   out_4686700619145198144[220] = 1;
   out_4686700619145198144[221] = 0;
   out_4686700619145198144[222] = 0;
   out_4686700619145198144[223] = 0;
   out_4686700619145198144[224] = 0;
   out_4686700619145198144[225] = 0;
   out_4686700619145198144[226] = 0;
   out_4686700619145198144[227] = 0;
   out_4686700619145198144[228] = 0;
   out_4686700619145198144[229] = 0;
   out_4686700619145198144[230] = 0;
   out_4686700619145198144[231] = 0;
   out_4686700619145198144[232] = 0;
   out_4686700619145198144[233] = 0;
   out_4686700619145198144[234] = 0;
   out_4686700619145198144[235] = 0;
   out_4686700619145198144[236] = 0;
   out_4686700619145198144[237] = 0;
   out_4686700619145198144[238] = 0;
   out_4686700619145198144[239] = 0;
   out_4686700619145198144[240] = 0;
   out_4686700619145198144[241] = 0;
   out_4686700619145198144[242] = 1;
   out_4686700619145198144[243] = 0;
   out_4686700619145198144[244] = 0;
   out_4686700619145198144[245] = 0;
   out_4686700619145198144[246] = 0;
   out_4686700619145198144[247] = 0;
   out_4686700619145198144[248] = 0;
   out_4686700619145198144[249] = 0;
   out_4686700619145198144[250] = 0;
   out_4686700619145198144[251] = 0;
   out_4686700619145198144[252] = 0;
   out_4686700619145198144[253] = 0;
   out_4686700619145198144[254] = 0;
   out_4686700619145198144[255] = 0;
   out_4686700619145198144[256] = 0;
   out_4686700619145198144[257] = 0;
   out_4686700619145198144[258] = 0;
   out_4686700619145198144[259] = 0;
   out_4686700619145198144[260] = 0;
   out_4686700619145198144[261] = 0;
   out_4686700619145198144[262] = 0;
   out_4686700619145198144[263] = 0;
   out_4686700619145198144[264] = 1;
   out_4686700619145198144[265] = 0;
   out_4686700619145198144[266] = 0;
   out_4686700619145198144[267] = 0;
   out_4686700619145198144[268] = 0;
   out_4686700619145198144[269] = 0;
   out_4686700619145198144[270] = 0;
   out_4686700619145198144[271] = 0;
   out_4686700619145198144[272] = 0;
   out_4686700619145198144[273] = 0;
   out_4686700619145198144[274] = 0;
   out_4686700619145198144[275] = 0;
   out_4686700619145198144[276] = 0;
   out_4686700619145198144[277] = 0;
   out_4686700619145198144[278] = 0;
   out_4686700619145198144[279] = 0;
   out_4686700619145198144[280] = 0;
   out_4686700619145198144[281] = 0;
   out_4686700619145198144[282] = 0;
   out_4686700619145198144[283] = 0;
   out_4686700619145198144[284] = 0;
   out_4686700619145198144[285] = 0;
   out_4686700619145198144[286] = 1;
   out_4686700619145198144[287] = 0;
   out_4686700619145198144[288] = 0;
   out_4686700619145198144[289] = 0;
   out_4686700619145198144[290] = 0;
   out_4686700619145198144[291] = 0;
   out_4686700619145198144[292] = 0;
   out_4686700619145198144[293] = 0;
   out_4686700619145198144[294] = 0;
   out_4686700619145198144[295] = 0;
   out_4686700619145198144[296] = 0;
   out_4686700619145198144[297] = 0;
   out_4686700619145198144[298] = 0;
   out_4686700619145198144[299] = 0;
   out_4686700619145198144[300] = 0;
   out_4686700619145198144[301] = 0;
   out_4686700619145198144[302] = 0;
   out_4686700619145198144[303] = 0;
   out_4686700619145198144[304] = 0;
   out_4686700619145198144[305] = 0;
   out_4686700619145198144[306] = 0;
   out_4686700619145198144[307] = 0;
   out_4686700619145198144[308] = 1;
   out_4686700619145198144[309] = 0;
   out_4686700619145198144[310] = 0;
   out_4686700619145198144[311] = 0;
   out_4686700619145198144[312] = 0;
   out_4686700619145198144[313] = 0;
   out_4686700619145198144[314] = 0;
   out_4686700619145198144[315] = 0;
   out_4686700619145198144[316] = 0;
   out_4686700619145198144[317] = 0;
   out_4686700619145198144[318] = 0;
   out_4686700619145198144[319] = 0;
   out_4686700619145198144[320] = 0;
   out_4686700619145198144[321] = 0;
   out_4686700619145198144[322] = 0;
   out_4686700619145198144[323] = 0;
   out_4686700619145198144[324] = 0;
   out_4686700619145198144[325] = 0;
   out_4686700619145198144[326] = 0;
   out_4686700619145198144[327] = 0;
   out_4686700619145198144[328] = 0;
   out_4686700619145198144[329] = 0;
   out_4686700619145198144[330] = 1;
   out_4686700619145198144[331] = 0;
   out_4686700619145198144[332] = 0;
   out_4686700619145198144[333] = 0;
   out_4686700619145198144[334] = 0;
   out_4686700619145198144[335] = 0;
   out_4686700619145198144[336] = 0;
   out_4686700619145198144[337] = 0;
   out_4686700619145198144[338] = 0;
   out_4686700619145198144[339] = 0;
   out_4686700619145198144[340] = 0;
   out_4686700619145198144[341] = 0;
   out_4686700619145198144[342] = 0;
   out_4686700619145198144[343] = 0;
   out_4686700619145198144[344] = 0;
   out_4686700619145198144[345] = 0;
   out_4686700619145198144[346] = 0;
   out_4686700619145198144[347] = 0;
   out_4686700619145198144[348] = 0;
   out_4686700619145198144[349] = 0;
   out_4686700619145198144[350] = 0;
   out_4686700619145198144[351] = 0;
   out_4686700619145198144[352] = 1;
   out_4686700619145198144[353] = 0;
   out_4686700619145198144[354] = 0;
   out_4686700619145198144[355] = 0;
   out_4686700619145198144[356] = 0;
   out_4686700619145198144[357] = 0;
   out_4686700619145198144[358] = 0;
   out_4686700619145198144[359] = 0;
   out_4686700619145198144[360] = 0;
   out_4686700619145198144[361] = 0;
   out_4686700619145198144[362] = 0;
   out_4686700619145198144[363] = 0;
   out_4686700619145198144[364] = 0;
   out_4686700619145198144[365] = 0;
   out_4686700619145198144[366] = 0;
   out_4686700619145198144[367] = 0;
   out_4686700619145198144[368] = 0;
   out_4686700619145198144[369] = 0;
   out_4686700619145198144[370] = 0;
   out_4686700619145198144[371] = 0;
   out_4686700619145198144[372] = 0;
   out_4686700619145198144[373] = 0;
   out_4686700619145198144[374] = 1;
   out_4686700619145198144[375] = 0;
   out_4686700619145198144[376] = 0;
   out_4686700619145198144[377] = 0;
   out_4686700619145198144[378] = 0;
   out_4686700619145198144[379] = 0;
   out_4686700619145198144[380] = 0;
   out_4686700619145198144[381] = 0;
   out_4686700619145198144[382] = 0;
   out_4686700619145198144[383] = 0;
   out_4686700619145198144[384] = 0;
   out_4686700619145198144[385] = 0;
   out_4686700619145198144[386] = 0;
   out_4686700619145198144[387] = 0;
   out_4686700619145198144[388] = 0;
   out_4686700619145198144[389] = 0;
   out_4686700619145198144[390] = 0;
   out_4686700619145198144[391] = 0;
   out_4686700619145198144[392] = 0;
   out_4686700619145198144[393] = 0;
   out_4686700619145198144[394] = 0;
   out_4686700619145198144[395] = 0;
   out_4686700619145198144[396] = 1;
   out_4686700619145198144[397] = 0;
   out_4686700619145198144[398] = 0;
   out_4686700619145198144[399] = 0;
   out_4686700619145198144[400] = 0;
   out_4686700619145198144[401] = 0;
   out_4686700619145198144[402] = 0;
   out_4686700619145198144[403] = 0;
   out_4686700619145198144[404] = 0;
   out_4686700619145198144[405] = 0;
   out_4686700619145198144[406] = 0;
   out_4686700619145198144[407] = 0;
   out_4686700619145198144[408] = 0;
   out_4686700619145198144[409] = 0;
   out_4686700619145198144[410] = 0;
   out_4686700619145198144[411] = 0;
   out_4686700619145198144[412] = 0;
   out_4686700619145198144[413] = 0;
   out_4686700619145198144[414] = 0;
   out_4686700619145198144[415] = 0;
   out_4686700619145198144[416] = 0;
   out_4686700619145198144[417] = 0;
   out_4686700619145198144[418] = 1;
   out_4686700619145198144[419] = 0;
   out_4686700619145198144[420] = 0;
   out_4686700619145198144[421] = 0;
   out_4686700619145198144[422] = 0;
   out_4686700619145198144[423] = 0;
   out_4686700619145198144[424] = 0;
   out_4686700619145198144[425] = 0;
   out_4686700619145198144[426] = 0;
   out_4686700619145198144[427] = 0;
   out_4686700619145198144[428] = 0;
   out_4686700619145198144[429] = 0;
   out_4686700619145198144[430] = 0;
   out_4686700619145198144[431] = 0;
   out_4686700619145198144[432] = 0;
   out_4686700619145198144[433] = 0;
   out_4686700619145198144[434] = 0;
   out_4686700619145198144[435] = 0;
   out_4686700619145198144[436] = 0;
   out_4686700619145198144[437] = 0;
   out_4686700619145198144[438] = 0;
   out_4686700619145198144[439] = 0;
   out_4686700619145198144[440] = 1;
}
void h_4(double *state, double *unused, double *out_4231253766944934747) {
   out_4231253766944934747[0] = state[10] + state[13];
   out_4231253766944934747[1] = state[11] + state[14];
   out_4231253766944934747[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5582778213154545828) {
   out_5582778213154545828[0] = 0;
   out_5582778213154545828[1] = 0;
   out_5582778213154545828[2] = 0;
   out_5582778213154545828[3] = 0;
   out_5582778213154545828[4] = 0;
   out_5582778213154545828[5] = 0;
   out_5582778213154545828[6] = 0;
   out_5582778213154545828[7] = 0;
   out_5582778213154545828[8] = 0;
   out_5582778213154545828[9] = 0;
   out_5582778213154545828[10] = 1;
   out_5582778213154545828[11] = 0;
   out_5582778213154545828[12] = 0;
   out_5582778213154545828[13] = 1;
   out_5582778213154545828[14] = 0;
   out_5582778213154545828[15] = 0;
   out_5582778213154545828[16] = 0;
   out_5582778213154545828[17] = 0;
   out_5582778213154545828[18] = 0;
   out_5582778213154545828[19] = 0;
   out_5582778213154545828[20] = 0;
   out_5582778213154545828[21] = 0;
   out_5582778213154545828[22] = 0;
   out_5582778213154545828[23] = 0;
   out_5582778213154545828[24] = 0;
   out_5582778213154545828[25] = 0;
   out_5582778213154545828[26] = 0;
   out_5582778213154545828[27] = 0;
   out_5582778213154545828[28] = 0;
   out_5582778213154545828[29] = 0;
   out_5582778213154545828[30] = 0;
   out_5582778213154545828[31] = 0;
   out_5582778213154545828[32] = 0;
   out_5582778213154545828[33] = 1;
   out_5582778213154545828[34] = 0;
   out_5582778213154545828[35] = 0;
   out_5582778213154545828[36] = 1;
   out_5582778213154545828[37] = 0;
   out_5582778213154545828[38] = 0;
   out_5582778213154545828[39] = 0;
   out_5582778213154545828[40] = 0;
   out_5582778213154545828[41] = 0;
   out_5582778213154545828[42] = 0;
   out_5582778213154545828[43] = 0;
   out_5582778213154545828[44] = 0;
   out_5582778213154545828[45] = 0;
   out_5582778213154545828[46] = 0;
   out_5582778213154545828[47] = 0;
   out_5582778213154545828[48] = 0;
   out_5582778213154545828[49] = 0;
   out_5582778213154545828[50] = 0;
   out_5582778213154545828[51] = 0;
   out_5582778213154545828[52] = 0;
   out_5582778213154545828[53] = 0;
   out_5582778213154545828[54] = 0;
   out_5582778213154545828[55] = 0;
   out_5582778213154545828[56] = 1;
   out_5582778213154545828[57] = 0;
   out_5582778213154545828[58] = 0;
   out_5582778213154545828[59] = 1;
   out_5582778213154545828[60] = 0;
   out_5582778213154545828[61] = 0;
   out_5582778213154545828[62] = 0;
   out_5582778213154545828[63] = 0;
   out_5582778213154545828[64] = 0;
   out_5582778213154545828[65] = 0;
}
void h_9(double *state, double *unused, double *out_6025627951987539770) {
   out_6025627951987539770[0] = state[10];
   out_6025627951987539770[1] = state[11];
   out_6025627951987539770[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1704440722109901642) {
   out_1704440722109901642[0] = 0;
   out_1704440722109901642[1] = 0;
   out_1704440722109901642[2] = 0;
   out_1704440722109901642[3] = 0;
   out_1704440722109901642[4] = 0;
   out_1704440722109901642[5] = 0;
   out_1704440722109901642[6] = 0;
   out_1704440722109901642[7] = 0;
   out_1704440722109901642[8] = 0;
   out_1704440722109901642[9] = 0;
   out_1704440722109901642[10] = 1;
   out_1704440722109901642[11] = 0;
   out_1704440722109901642[12] = 0;
   out_1704440722109901642[13] = 0;
   out_1704440722109901642[14] = 0;
   out_1704440722109901642[15] = 0;
   out_1704440722109901642[16] = 0;
   out_1704440722109901642[17] = 0;
   out_1704440722109901642[18] = 0;
   out_1704440722109901642[19] = 0;
   out_1704440722109901642[20] = 0;
   out_1704440722109901642[21] = 0;
   out_1704440722109901642[22] = 0;
   out_1704440722109901642[23] = 0;
   out_1704440722109901642[24] = 0;
   out_1704440722109901642[25] = 0;
   out_1704440722109901642[26] = 0;
   out_1704440722109901642[27] = 0;
   out_1704440722109901642[28] = 0;
   out_1704440722109901642[29] = 0;
   out_1704440722109901642[30] = 0;
   out_1704440722109901642[31] = 0;
   out_1704440722109901642[32] = 0;
   out_1704440722109901642[33] = 1;
   out_1704440722109901642[34] = 0;
   out_1704440722109901642[35] = 0;
   out_1704440722109901642[36] = 0;
   out_1704440722109901642[37] = 0;
   out_1704440722109901642[38] = 0;
   out_1704440722109901642[39] = 0;
   out_1704440722109901642[40] = 0;
   out_1704440722109901642[41] = 0;
   out_1704440722109901642[42] = 0;
   out_1704440722109901642[43] = 0;
   out_1704440722109901642[44] = 0;
   out_1704440722109901642[45] = 0;
   out_1704440722109901642[46] = 0;
   out_1704440722109901642[47] = 0;
   out_1704440722109901642[48] = 0;
   out_1704440722109901642[49] = 0;
   out_1704440722109901642[50] = 0;
   out_1704440722109901642[51] = 0;
   out_1704440722109901642[52] = 0;
   out_1704440722109901642[53] = 0;
   out_1704440722109901642[54] = 0;
   out_1704440722109901642[55] = 0;
   out_1704440722109901642[56] = 1;
   out_1704440722109901642[57] = 0;
   out_1704440722109901642[58] = 0;
   out_1704440722109901642[59] = 0;
   out_1704440722109901642[60] = 0;
   out_1704440722109901642[61] = 0;
   out_1704440722109901642[62] = 0;
   out_1704440722109901642[63] = 0;
   out_1704440722109901642[64] = 0;
   out_1704440722109901642[65] = 0;
}
void h_10(double *state, double *unused, double *out_685246647907776553) {
   out_685246647907776553[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_685246647907776553[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_685246647907776553[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6414994590408578783) {
   out_6414994590408578783[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6414994590408578783[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6414994590408578783[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6414994590408578783[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6414994590408578783[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6414994590408578783[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6414994590408578783[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6414994590408578783[7] = 0;
   out_6414994590408578783[8] = 0;
   out_6414994590408578783[9] = 0;
   out_6414994590408578783[10] = 0;
   out_6414994590408578783[11] = 0;
   out_6414994590408578783[12] = 0;
   out_6414994590408578783[13] = 0;
   out_6414994590408578783[14] = 0;
   out_6414994590408578783[15] = 0;
   out_6414994590408578783[16] = 1;
   out_6414994590408578783[17] = 0;
   out_6414994590408578783[18] = 0;
   out_6414994590408578783[19] = 1;
   out_6414994590408578783[20] = 0;
   out_6414994590408578783[21] = 0;
   out_6414994590408578783[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6414994590408578783[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6414994590408578783[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6414994590408578783[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6414994590408578783[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6414994590408578783[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6414994590408578783[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6414994590408578783[29] = 0;
   out_6414994590408578783[30] = 0;
   out_6414994590408578783[31] = 0;
   out_6414994590408578783[32] = 0;
   out_6414994590408578783[33] = 0;
   out_6414994590408578783[34] = 0;
   out_6414994590408578783[35] = 0;
   out_6414994590408578783[36] = 0;
   out_6414994590408578783[37] = 0;
   out_6414994590408578783[38] = 0;
   out_6414994590408578783[39] = 1;
   out_6414994590408578783[40] = 0;
   out_6414994590408578783[41] = 0;
   out_6414994590408578783[42] = 1;
   out_6414994590408578783[43] = 0;
   out_6414994590408578783[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6414994590408578783[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6414994590408578783[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6414994590408578783[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6414994590408578783[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6414994590408578783[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6414994590408578783[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6414994590408578783[51] = 0;
   out_6414994590408578783[52] = 0;
   out_6414994590408578783[53] = 0;
   out_6414994590408578783[54] = 0;
   out_6414994590408578783[55] = 0;
   out_6414994590408578783[56] = 0;
   out_6414994590408578783[57] = 0;
   out_6414994590408578783[58] = 0;
   out_6414994590408578783[59] = 0;
   out_6414994590408578783[60] = 0;
   out_6414994590408578783[61] = 0;
   out_6414994590408578783[62] = 1;
   out_6414994590408578783[63] = 0;
   out_6414994590408578783[64] = 0;
   out_6414994590408578783[65] = 1;
}
void h_12(double *state, double *unused, double *out_2546856239679354150) {
   out_2546856239679354150[0] = state[0];
   out_2546856239679354150[1] = state[1];
   out_2546856239679354150[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6482707483512272792) {
   out_6482707483512272792[0] = 1;
   out_6482707483512272792[1] = 0;
   out_6482707483512272792[2] = 0;
   out_6482707483512272792[3] = 0;
   out_6482707483512272792[4] = 0;
   out_6482707483512272792[5] = 0;
   out_6482707483512272792[6] = 0;
   out_6482707483512272792[7] = 0;
   out_6482707483512272792[8] = 0;
   out_6482707483512272792[9] = 0;
   out_6482707483512272792[10] = 0;
   out_6482707483512272792[11] = 0;
   out_6482707483512272792[12] = 0;
   out_6482707483512272792[13] = 0;
   out_6482707483512272792[14] = 0;
   out_6482707483512272792[15] = 0;
   out_6482707483512272792[16] = 0;
   out_6482707483512272792[17] = 0;
   out_6482707483512272792[18] = 0;
   out_6482707483512272792[19] = 0;
   out_6482707483512272792[20] = 0;
   out_6482707483512272792[21] = 0;
   out_6482707483512272792[22] = 0;
   out_6482707483512272792[23] = 1;
   out_6482707483512272792[24] = 0;
   out_6482707483512272792[25] = 0;
   out_6482707483512272792[26] = 0;
   out_6482707483512272792[27] = 0;
   out_6482707483512272792[28] = 0;
   out_6482707483512272792[29] = 0;
   out_6482707483512272792[30] = 0;
   out_6482707483512272792[31] = 0;
   out_6482707483512272792[32] = 0;
   out_6482707483512272792[33] = 0;
   out_6482707483512272792[34] = 0;
   out_6482707483512272792[35] = 0;
   out_6482707483512272792[36] = 0;
   out_6482707483512272792[37] = 0;
   out_6482707483512272792[38] = 0;
   out_6482707483512272792[39] = 0;
   out_6482707483512272792[40] = 0;
   out_6482707483512272792[41] = 0;
   out_6482707483512272792[42] = 0;
   out_6482707483512272792[43] = 0;
   out_6482707483512272792[44] = 0;
   out_6482707483512272792[45] = 0;
   out_6482707483512272792[46] = 1;
   out_6482707483512272792[47] = 0;
   out_6482707483512272792[48] = 0;
   out_6482707483512272792[49] = 0;
   out_6482707483512272792[50] = 0;
   out_6482707483512272792[51] = 0;
   out_6482707483512272792[52] = 0;
   out_6482707483512272792[53] = 0;
   out_6482707483512272792[54] = 0;
   out_6482707483512272792[55] = 0;
   out_6482707483512272792[56] = 0;
   out_6482707483512272792[57] = 0;
   out_6482707483512272792[58] = 0;
   out_6482707483512272792[59] = 0;
   out_6482707483512272792[60] = 0;
   out_6482707483512272792[61] = 0;
   out_6482707483512272792[62] = 0;
   out_6482707483512272792[63] = 0;
   out_6482707483512272792[64] = 0;
   out_6482707483512272792[65] = 0;
}
void h_35(double *state, double *unused, double *out_6732886733617403438) {
   out_6732886733617403438[0] = state[7];
   out_6732886733617403438[1] = state[8];
   out_6732886733617403438[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4829913132852918373) {
   out_4829913132852918373[0] = 0;
   out_4829913132852918373[1] = 0;
   out_4829913132852918373[2] = 0;
   out_4829913132852918373[3] = 0;
   out_4829913132852918373[4] = 0;
   out_4829913132852918373[5] = 0;
   out_4829913132852918373[6] = 0;
   out_4829913132852918373[7] = 1;
   out_4829913132852918373[8] = 0;
   out_4829913132852918373[9] = 0;
   out_4829913132852918373[10] = 0;
   out_4829913132852918373[11] = 0;
   out_4829913132852918373[12] = 0;
   out_4829913132852918373[13] = 0;
   out_4829913132852918373[14] = 0;
   out_4829913132852918373[15] = 0;
   out_4829913132852918373[16] = 0;
   out_4829913132852918373[17] = 0;
   out_4829913132852918373[18] = 0;
   out_4829913132852918373[19] = 0;
   out_4829913132852918373[20] = 0;
   out_4829913132852918373[21] = 0;
   out_4829913132852918373[22] = 0;
   out_4829913132852918373[23] = 0;
   out_4829913132852918373[24] = 0;
   out_4829913132852918373[25] = 0;
   out_4829913132852918373[26] = 0;
   out_4829913132852918373[27] = 0;
   out_4829913132852918373[28] = 0;
   out_4829913132852918373[29] = 0;
   out_4829913132852918373[30] = 1;
   out_4829913132852918373[31] = 0;
   out_4829913132852918373[32] = 0;
   out_4829913132852918373[33] = 0;
   out_4829913132852918373[34] = 0;
   out_4829913132852918373[35] = 0;
   out_4829913132852918373[36] = 0;
   out_4829913132852918373[37] = 0;
   out_4829913132852918373[38] = 0;
   out_4829913132852918373[39] = 0;
   out_4829913132852918373[40] = 0;
   out_4829913132852918373[41] = 0;
   out_4829913132852918373[42] = 0;
   out_4829913132852918373[43] = 0;
   out_4829913132852918373[44] = 0;
   out_4829913132852918373[45] = 0;
   out_4829913132852918373[46] = 0;
   out_4829913132852918373[47] = 0;
   out_4829913132852918373[48] = 0;
   out_4829913132852918373[49] = 0;
   out_4829913132852918373[50] = 0;
   out_4829913132852918373[51] = 0;
   out_4829913132852918373[52] = 0;
   out_4829913132852918373[53] = 1;
   out_4829913132852918373[54] = 0;
   out_4829913132852918373[55] = 0;
   out_4829913132852918373[56] = 0;
   out_4829913132852918373[57] = 0;
   out_4829913132852918373[58] = 0;
   out_4829913132852918373[59] = 0;
   out_4829913132852918373[60] = 0;
   out_4829913132852918373[61] = 0;
   out_4829913132852918373[62] = 0;
   out_4829913132852918373[63] = 0;
   out_4829913132852918373[64] = 0;
   out_4829913132852918373[65] = 0;
}
void h_32(double *state, double *unused, double *out_8300627046898151635) {
   out_8300627046898151635[0] = state[3];
   out_8300627046898151635[1] = state[4];
   out_8300627046898151635[2] = state[5];
   out_8300627046898151635[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6434815393453847522) {
   out_6434815393453847522[0] = 0;
   out_6434815393453847522[1] = 0;
   out_6434815393453847522[2] = 0;
   out_6434815393453847522[3] = 1;
   out_6434815393453847522[4] = 0;
   out_6434815393453847522[5] = 0;
   out_6434815393453847522[6] = 0;
   out_6434815393453847522[7] = 0;
   out_6434815393453847522[8] = 0;
   out_6434815393453847522[9] = 0;
   out_6434815393453847522[10] = 0;
   out_6434815393453847522[11] = 0;
   out_6434815393453847522[12] = 0;
   out_6434815393453847522[13] = 0;
   out_6434815393453847522[14] = 0;
   out_6434815393453847522[15] = 0;
   out_6434815393453847522[16] = 0;
   out_6434815393453847522[17] = 0;
   out_6434815393453847522[18] = 0;
   out_6434815393453847522[19] = 0;
   out_6434815393453847522[20] = 0;
   out_6434815393453847522[21] = 0;
   out_6434815393453847522[22] = 0;
   out_6434815393453847522[23] = 0;
   out_6434815393453847522[24] = 0;
   out_6434815393453847522[25] = 0;
   out_6434815393453847522[26] = 1;
   out_6434815393453847522[27] = 0;
   out_6434815393453847522[28] = 0;
   out_6434815393453847522[29] = 0;
   out_6434815393453847522[30] = 0;
   out_6434815393453847522[31] = 0;
   out_6434815393453847522[32] = 0;
   out_6434815393453847522[33] = 0;
   out_6434815393453847522[34] = 0;
   out_6434815393453847522[35] = 0;
   out_6434815393453847522[36] = 0;
   out_6434815393453847522[37] = 0;
   out_6434815393453847522[38] = 0;
   out_6434815393453847522[39] = 0;
   out_6434815393453847522[40] = 0;
   out_6434815393453847522[41] = 0;
   out_6434815393453847522[42] = 0;
   out_6434815393453847522[43] = 0;
   out_6434815393453847522[44] = 0;
   out_6434815393453847522[45] = 0;
   out_6434815393453847522[46] = 0;
   out_6434815393453847522[47] = 0;
   out_6434815393453847522[48] = 0;
   out_6434815393453847522[49] = 1;
   out_6434815393453847522[50] = 0;
   out_6434815393453847522[51] = 0;
   out_6434815393453847522[52] = 0;
   out_6434815393453847522[53] = 0;
   out_6434815393453847522[54] = 0;
   out_6434815393453847522[55] = 0;
   out_6434815393453847522[56] = 0;
   out_6434815393453847522[57] = 0;
   out_6434815393453847522[58] = 0;
   out_6434815393453847522[59] = 0;
   out_6434815393453847522[60] = 0;
   out_6434815393453847522[61] = 0;
   out_6434815393453847522[62] = 0;
   out_6434815393453847522[63] = 0;
   out_6434815393453847522[64] = 0;
   out_6434815393453847522[65] = 0;
   out_6434815393453847522[66] = 0;
   out_6434815393453847522[67] = 0;
   out_6434815393453847522[68] = 0;
   out_6434815393453847522[69] = 0;
   out_6434815393453847522[70] = 0;
   out_6434815393453847522[71] = 0;
   out_6434815393453847522[72] = 1;
   out_6434815393453847522[73] = 0;
   out_6434815393453847522[74] = 0;
   out_6434815393453847522[75] = 0;
   out_6434815393453847522[76] = 0;
   out_6434815393453847522[77] = 0;
   out_6434815393453847522[78] = 0;
   out_6434815393453847522[79] = 0;
   out_6434815393453847522[80] = 0;
   out_6434815393453847522[81] = 0;
   out_6434815393453847522[82] = 0;
   out_6434815393453847522[83] = 0;
   out_6434815393453847522[84] = 0;
   out_6434815393453847522[85] = 0;
   out_6434815393453847522[86] = 0;
   out_6434815393453847522[87] = 0;
}
void h_13(double *state, double *unused, double *out_7473551091241035200) {
   out_7473551091241035200[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7473551091241035200[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7473551091241035200[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2766590617203188566) {
   out_2766590617203188566[0] = 0;
   out_2766590617203188566[1] = 0;
   out_2766590617203188566[2] = 0;
   out_2766590617203188566[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2766590617203188566[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2766590617203188566[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2766590617203188566[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2766590617203188566[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2766590617203188566[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2766590617203188566[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2766590617203188566[10] = 0;
   out_2766590617203188566[11] = 0;
   out_2766590617203188566[12] = 0;
   out_2766590617203188566[13] = 0;
   out_2766590617203188566[14] = 0;
   out_2766590617203188566[15] = 0;
   out_2766590617203188566[16] = 0;
   out_2766590617203188566[17] = 0;
   out_2766590617203188566[18] = 0;
   out_2766590617203188566[19] = 0;
   out_2766590617203188566[20] = 0;
   out_2766590617203188566[21] = 0;
   out_2766590617203188566[22] = 0;
   out_2766590617203188566[23] = 0;
   out_2766590617203188566[24] = 0;
   out_2766590617203188566[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2766590617203188566[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2766590617203188566[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2766590617203188566[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2766590617203188566[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2766590617203188566[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2766590617203188566[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2766590617203188566[32] = 0;
   out_2766590617203188566[33] = 0;
   out_2766590617203188566[34] = 0;
   out_2766590617203188566[35] = 0;
   out_2766590617203188566[36] = 0;
   out_2766590617203188566[37] = 0;
   out_2766590617203188566[38] = 0;
   out_2766590617203188566[39] = 0;
   out_2766590617203188566[40] = 0;
   out_2766590617203188566[41] = 0;
   out_2766590617203188566[42] = 0;
   out_2766590617203188566[43] = 0;
   out_2766590617203188566[44] = 0;
   out_2766590617203188566[45] = 0;
   out_2766590617203188566[46] = 0;
   out_2766590617203188566[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2766590617203188566[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2766590617203188566[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2766590617203188566[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2766590617203188566[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2766590617203188566[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2766590617203188566[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2766590617203188566[54] = 0;
   out_2766590617203188566[55] = 0;
   out_2766590617203188566[56] = 0;
   out_2766590617203188566[57] = 0;
   out_2766590617203188566[58] = 0;
   out_2766590617203188566[59] = 0;
   out_2766590617203188566[60] = 0;
   out_2766590617203188566[61] = 0;
   out_2766590617203188566[62] = 0;
   out_2766590617203188566[63] = 0;
   out_2766590617203188566[64] = 0;
   out_2766590617203188566[65] = 0;
}
void h_14(double *state, double *unused, double *out_6025627951987539770) {
   out_6025627951987539770[0] = state[10];
   out_6025627951987539770[1] = state[11];
   out_6025627951987539770[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1704440722109901642) {
   out_1704440722109901642[0] = 0;
   out_1704440722109901642[1] = 0;
   out_1704440722109901642[2] = 0;
   out_1704440722109901642[3] = 0;
   out_1704440722109901642[4] = 0;
   out_1704440722109901642[5] = 0;
   out_1704440722109901642[6] = 0;
   out_1704440722109901642[7] = 0;
   out_1704440722109901642[8] = 0;
   out_1704440722109901642[9] = 0;
   out_1704440722109901642[10] = 1;
   out_1704440722109901642[11] = 0;
   out_1704440722109901642[12] = 0;
   out_1704440722109901642[13] = 0;
   out_1704440722109901642[14] = 0;
   out_1704440722109901642[15] = 0;
   out_1704440722109901642[16] = 0;
   out_1704440722109901642[17] = 0;
   out_1704440722109901642[18] = 0;
   out_1704440722109901642[19] = 0;
   out_1704440722109901642[20] = 0;
   out_1704440722109901642[21] = 0;
   out_1704440722109901642[22] = 0;
   out_1704440722109901642[23] = 0;
   out_1704440722109901642[24] = 0;
   out_1704440722109901642[25] = 0;
   out_1704440722109901642[26] = 0;
   out_1704440722109901642[27] = 0;
   out_1704440722109901642[28] = 0;
   out_1704440722109901642[29] = 0;
   out_1704440722109901642[30] = 0;
   out_1704440722109901642[31] = 0;
   out_1704440722109901642[32] = 0;
   out_1704440722109901642[33] = 1;
   out_1704440722109901642[34] = 0;
   out_1704440722109901642[35] = 0;
   out_1704440722109901642[36] = 0;
   out_1704440722109901642[37] = 0;
   out_1704440722109901642[38] = 0;
   out_1704440722109901642[39] = 0;
   out_1704440722109901642[40] = 0;
   out_1704440722109901642[41] = 0;
   out_1704440722109901642[42] = 0;
   out_1704440722109901642[43] = 0;
   out_1704440722109901642[44] = 0;
   out_1704440722109901642[45] = 0;
   out_1704440722109901642[46] = 0;
   out_1704440722109901642[47] = 0;
   out_1704440722109901642[48] = 0;
   out_1704440722109901642[49] = 0;
   out_1704440722109901642[50] = 0;
   out_1704440722109901642[51] = 0;
   out_1704440722109901642[52] = 0;
   out_1704440722109901642[53] = 0;
   out_1704440722109901642[54] = 0;
   out_1704440722109901642[55] = 0;
   out_1704440722109901642[56] = 1;
   out_1704440722109901642[57] = 0;
   out_1704440722109901642[58] = 0;
   out_1704440722109901642[59] = 0;
   out_1704440722109901642[60] = 0;
   out_1704440722109901642[61] = 0;
   out_1704440722109901642[62] = 0;
   out_1704440722109901642[63] = 0;
   out_1704440722109901642[64] = 0;
   out_1704440722109901642[65] = 0;
}
void h_33(double *state, double *unused, double *out_4189155859768253010) {
   out_4189155859768253010[0] = state[16];
   out_4189155859768253010[1] = state[17];
   out_4189155859768253010[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7980470137491775977) {
   out_7980470137491775977[0] = 0;
   out_7980470137491775977[1] = 0;
   out_7980470137491775977[2] = 0;
   out_7980470137491775977[3] = 0;
   out_7980470137491775977[4] = 0;
   out_7980470137491775977[5] = 0;
   out_7980470137491775977[6] = 0;
   out_7980470137491775977[7] = 0;
   out_7980470137491775977[8] = 0;
   out_7980470137491775977[9] = 0;
   out_7980470137491775977[10] = 0;
   out_7980470137491775977[11] = 0;
   out_7980470137491775977[12] = 0;
   out_7980470137491775977[13] = 0;
   out_7980470137491775977[14] = 0;
   out_7980470137491775977[15] = 0;
   out_7980470137491775977[16] = 1;
   out_7980470137491775977[17] = 0;
   out_7980470137491775977[18] = 0;
   out_7980470137491775977[19] = 0;
   out_7980470137491775977[20] = 0;
   out_7980470137491775977[21] = 0;
   out_7980470137491775977[22] = 0;
   out_7980470137491775977[23] = 0;
   out_7980470137491775977[24] = 0;
   out_7980470137491775977[25] = 0;
   out_7980470137491775977[26] = 0;
   out_7980470137491775977[27] = 0;
   out_7980470137491775977[28] = 0;
   out_7980470137491775977[29] = 0;
   out_7980470137491775977[30] = 0;
   out_7980470137491775977[31] = 0;
   out_7980470137491775977[32] = 0;
   out_7980470137491775977[33] = 0;
   out_7980470137491775977[34] = 0;
   out_7980470137491775977[35] = 0;
   out_7980470137491775977[36] = 0;
   out_7980470137491775977[37] = 0;
   out_7980470137491775977[38] = 0;
   out_7980470137491775977[39] = 1;
   out_7980470137491775977[40] = 0;
   out_7980470137491775977[41] = 0;
   out_7980470137491775977[42] = 0;
   out_7980470137491775977[43] = 0;
   out_7980470137491775977[44] = 0;
   out_7980470137491775977[45] = 0;
   out_7980470137491775977[46] = 0;
   out_7980470137491775977[47] = 0;
   out_7980470137491775977[48] = 0;
   out_7980470137491775977[49] = 0;
   out_7980470137491775977[50] = 0;
   out_7980470137491775977[51] = 0;
   out_7980470137491775977[52] = 0;
   out_7980470137491775977[53] = 0;
   out_7980470137491775977[54] = 0;
   out_7980470137491775977[55] = 0;
   out_7980470137491775977[56] = 0;
   out_7980470137491775977[57] = 0;
   out_7980470137491775977[58] = 0;
   out_7980470137491775977[59] = 0;
   out_7980470137491775977[60] = 0;
   out_7980470137491775977[61] = 0;
   out_7980470137491775977[62] = 1;
   out_7980470137491775977[63] = 0;
   out_7980470137491775977[64] = 0;
   out_7980470137491775977[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5306600351938922877) {
  H(in_vec, out_5306600351938922877);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_493132114022433796) {
  err_fun(nom_x, delta_x, out_493132114022433796);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_13914812565757194) {
  inv_err_fun(nom_x, true_x, out_13914812565757194);
}
void live_H_mod_fun(double *state, double *out_6311765979948340433) {
  H_mod_fun(state, out_6311765979948340433);
}
void live_f_fun(double *state, double dt, double *out_8817043458826378326) {
  f_fun(state,  dt, out_8817043458826378326);
}
void live_F_fun(double *state, double dt, double *out_4686700619145198144) {
  F_fun(state,  dt, out_4686700619145198144);
}
void live_h_4(double *state, double *unused, double *out_4231253766944934747) {
  h_4(state, unused, out_4231253766944934747);
}
void live_H_4(double *state, double *unused, double *out_5582778213154545828) {
  H_4(state, unused, out_5582778213154545828);
}
void live_h_9(double *state, double *unused, double *out_6025627951987539770) {
  h_9(state, unused, out_6025627951987539770);
}
void live_H_9(double *state, double *unused, double *out_1704440722109901642) {
  H_9(state, unused, out_1704440722109901642);
}
void live_h_10(double *state, double *unused, double *out_685246647907776553) {
  h_10(state, unused, out_685246647907776553);
}
void live_H_10(double *state, double *unused, double *out_6414994590408578783) {
  H_10(state, unused, out_6414994590408578783);
}
void live_h_12(double *state, double *unused, double *out_2546856239679354150) {
  h_12(state, unused, out_2546856239679354150);
}
void live_H_12(double *state, double *unused, double *out_6482707483512272792) {
  H_12(state, unused, out_6482707483512272792);
}
void live_h_35(double *state, double *unused, double *out_6732886733617403438) {
  h_35(state, unused, out_6732886733617403438);
}
void live_H_35(double *state, double *unused, double *out_4829913132852918373) {
  H_35(state, unused, out_4829913132852918373);
}
void live_h_32(double *state, double *unused, double *out_8300627046898151635) {
  h_32(state, unused, out_8300627046898151635);
}
void live_H_32(double *state, double *unused, double *out_6434815393453847522) {
  H_32(state, unused, out_6434815393453847522);
}
void live_h_13(double *state, double *unused, double *out_7473551091241035200) {
  h_13(state, unused, out_7473551091241035200);
}
void live_H_13(double *state, double *unused, double *out_2766590617203188566) {
  H_13(state, unused, out_2766590617203188566);
}
void live_h_14(double *state, double *unused, double *out_6025627951987539770) {
  h_14(state, unused, out_6025627951987539770);
}
void live_H_14(double *state, double *unused, double *out_1704440722109901642) {
  H_14(state, unused, out_1704440722109901642);
}
void live_h_33(double *state, double *unused, double *out_4189155859768253010) {
  h_33(state, unused, out_4189155859768253010);
}
void live_H_33(double *state, double *unused, double *out_7980470137491775977) {
  H_33(state, unused, out_7980470137491775977);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
